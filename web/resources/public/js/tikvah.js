var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__6896 = x == null ? null : x;
  if(p[goog.typeOf(x__6896)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__6897__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__6897 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6897__delegate.call(this, array, i, idxs)
    };
    G__6897.cljs$lang$maxFixedArity = 2;
    G__6897.cljs$lang$applyTo = function(arglist__6898) {
      var array = cljs.core.first(arglist__6898);
      var i = cljs.core.first(cljs.core.next(arglist__6898));
      var idxs = cljs.core.rest(cljs.core.next(arglist__6898));
      return G__6897__delegate(array, i, idxs)
    };
    G__6897.cljs$lang$arity$variadic = G__6897__delegate;
    return G__6897
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____6983 = this$;
      if(and__3822__auto____6983) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____6983
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2363__auto____6984 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6985 = cljs.core._invoke[goog.typeOf(x__2363__auto____6984)];
        if(or__3824__auto____6985) {
          return or__3824__auto____6985
        }else {
          var or__3824__auto____6986 = cljs.core._invoke["_"];
          if(or__3824__auto____6986) {
            return or__3824__auto____6986
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____6987 = this$;
      if(and__3822__auto____6987) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____6987
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2363__auto____6988 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6989 = cljs.core._invoke[goog.typeOf(x__2363__auto____6988)];
        if(or__3824__auto____6989) {
          return or__3824__auto____6989
        }else {
          var or__3824__auto____6990 = cljs.core._invoke["_"];
          if(or__3824__auto____6990) {
            return or__3824__auto____6990
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____6991 = this$;
      if(and__3822__auto____6991) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____6991
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2363__auto____6992 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6993 = cljs.core._invoke[goog.typeOf(x__2363__auto____6992)];
        if(or__3824__auto____6993) {
          return or__3824__auto____6993
        }else {
          var or__3824__auto____6994 = cljs.core._invoke["_"];
          if(or__3824__auto____6994) {
            return or__3824__auto____6994
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____6995 = this$;
      if(and__3822__auto____6995) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____6995
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2363__auto____6996 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6997 = cljs.core._invoke[goog.typeOf(x__2363__auto____6996)];
        if(or__3824__auto____6997) {
          return or__3824__auto____6997
        }else {
          var or__3824__auto____6998 = cljs.core._invoke["_"];
          if(or__3824__auto____6998) {
            return or__3824__auto____6998
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____6999 = this$;
      if(and__3822__auto____6999) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____6999
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2363__auto____7000 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7001 = cljs.core._invoke[goog.typeOf(x__2363__auto____7000)];
        if(or__3824__auto____7001) {
          return or__3824__auto____7001
        }else {
          var or__3824__auto____7002 = cljs.core._invoke["_"];
          if(or__3824__auto____7002) {
            return or__3824__auto____7002
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____7003 = this$;
      if(and__3822__auto____7003) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____7003
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2363__auto____7004 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7005 = cljs.core._invoke[goog.typeOf(x__2363__auto____7004)];
        if(or__3824__auto____7005) {
          return or__3824__auto____7005
        }else {
          var or__3824__auto____7006 = cljs.core._invoke["_"];
          if(or__3824__auto____7006) {
            return or__3824__auto____7006
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____7007 = this$;
      if(and__3822__auto____7007) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____7007
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2363__auto____7008 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7009 = cljs.core._invoke[goog.typeOf(x__2363__auto____7008)];
        if(or__3824__auto____7009) {
          return or__3824__auto____7009
        }else {
          var or__3824__auto____7010 = cljs.core._invoke["_"];
          if(or__3824__auto____7010) {
            return or__3824__auto____7010
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____7011 = this$;
      if(and__3822__auto____7011) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____7011
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2363__auto____7012 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7013 = cljs.core._invoke[goog.typeOf(x__2363__auto____7012)];
        if(or__3824__auto____7013) {
          return or__3824__auto____7013
        }else {
          var or__3824__auto____7014 = cljs.core._invoke["_"];
          if(or__3824__auto____7014) {
            return or__3824__auto____7014
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____7015 = this$;
      if(and__3822__auto____7015) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____7015
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2363__auto____7016 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7017 = cljs.core._invoke[goog.typeOf(x__2363__auto____7016)];
        if(or__3824__auto____7017) {
          return or__3824__auto____7017
        }else {
          var or__3824__auto____7018 = cljs.core._invoke["_"];
          if(or__3824__auto____7018) {
            return or__3824__auto____7018
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____7019 = this$;
      if(and__3822__auto____7019) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____7019
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2363__auto____7020 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7021 = cljs.core._invoke[goog.typeOf(x__2363__auto____7020)];
        if(or__3824__auto____7021) {
          return or__3824__auto____7021
        }else {
          var or__3824__auto____7022 = cljs.core._invoke["_"];
          if(or__3824__auto____7022) {
            return or__3824__auto____7022
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____7023 = this$;
      if(and__3822__auto____7023) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____7023
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2363__auto____7024 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7025 = cljs.core._invoke[goog.typeOf(x__2363__auto____7024)];
        if(or__3824__auto____7025) {
          return or__3824__auto____7025
        }else {
          var or__3824__auto____7026 = cljs.core._invoke["_"];
          if(or__3824__auto____7026) {
            return or__3824__auto____7026
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____7027 = this$;
      if(and__3822__auto____7027) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____7027
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2363__auto____7028 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7029 = cljs.core._invoke[goog.typeOf(x__2363__auto____7028)];
        if(or__3824__auto____7029) {
          return or__3824__auto____7029
        }else {
          var or__3824__auto____7030 = cljs.core._invoke["_"];
          if(or__3824__auto____7030) {
            return or__3824__auto____7030
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____7031 = this$;
      if(and__3822__auto____7031) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____7031
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2363__auto____7032 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7033 = cljs.core._invoke[goog.typeOf(x__2363__auto____7032)];
        if(or__3824__auto____7033) {
          return or__3824__auto____7033
        }else {
          var or__3824__auto____7034 = cljs.core._invoke["_"];
          if(or__3824__auto____7034) {
            return or__3824__auto____7034
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____7035 = this$;
      if(and__3822__auto____7035) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____7035
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2363__auto____7036 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7037 = cljs.core._invoke[goog.typeOf(x__2363__auto____7036)];
        if(or__3824__auto____7037) {
          return or__3824__auto____7037
        }else {
          var or__3824__auto____7038 = cljs.core._invoke["_"];
          if(or__3824__auto____7038) {
            return or__3824__auto____7038
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____7039 = this$;
      if(and__3822__auto____7039) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____7039
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2363__auto____7040 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7041 = cljs.core._invoke[goog.typeOf(x__2363__auto____7040)];
        if(or__3824__auto____7041) {
          return or__3824__auto____7041
        }else {
          var or__3824__auto____7042 = cljs.core._invoke["_"];
          if(or__3824__auto____7042) {
            return or__3824__auto____7042
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____7043 = this$;
      if(and__3822__auto____7043) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____7043
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2363__auto____7044 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7045 = cljs.core._invoke[goog.typeOf(x__2363__auto____7044)];
        if(or__3824__auto____7045) {
          return or__3824__auto____7045
        }else {
          var or__3824__auto____7046 = cljs.core._invoke["_"];
          if(or__3824__auto____7046) {
            return or__3824__auto____7046
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____7047 = this$;
      if(and__3822__auto____7047) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____7047
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2363__auto____7048 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7049 = cljs.core._invoke[goog.typeOf(x__2363__auto____7048)];
        if(or__3824__auto____7049) {
          return or__3824__auto____7049
        }else {
          var or__3824__auto____7050 = cljs.core._invoke["_"];
          if(or__3824__auto____7050) {
            return or__3824__auto____7050
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____7051 = this$;
      if(and__3822__auto____7051) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____7051
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2363__auto____7052 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7053 = cljs.core._invoke[goog.typeOf(x__2363__auto____7052)];
        if(or__3824__auto____7053) {
          return or__3824__auto____7053
        }else {
          var or__3824__auto____7054 = cljs.core._invoke["_"];
          if(or__3824__auto____7054) {
            return or__3824__auto____7054
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____7055 = this$;
      if(and__3822__auto____7055) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____7055
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2363__auto____7056 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7057 = cljs.core._invoke[goog.typeOf(x__2363__auto____7056)];
        if(or__3824__auto____7057) {
          return or__3824__auto____7057
        }else {
          var or__3824__auto____7058 = cljs.core._invoke["_"];
          if(or__3824__auto____7058) {
            return or__3824__auto____7058
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____7059 = this$;
      if(and__3822__auto____7059) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____7059
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2363__auto____7060 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7061 = cljs.core._invoke[goog.typeOf(x__2363__auto____7060)];
        if(or__3824__auto____7061) {
          return or__3824__auto____7061
        }else {
          var or__3824__auto____7062 = cljs.core._invoke["_"];
          if(or__3824__auto____7062) {
            return or__3824__auto____7062
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____7063 = this$;
      if(and__3822__auto____7063) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____7063
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2363__auto____7064 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7065 = cljs.core._invoke[goog.typeOf(x__2363__auto____7064)];
        if(or__3824__auto____7065) {
          return or__3824__auto____7065
        }else {
          var or__3824__auto____7066 = cljs.core._invoke["_"];
          if(or__3824__auto____7066) {
            return or__3824__auto____7066
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____7071 = coll;
    if(and__3822__auto____7071) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____7071
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2363__auto____7072 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7073 = cljs.core._count[goog.typeOf(x__2363__auto____7072)];
      if(or__3824__auto____7073) {
        return or__3824__auto____7073
      }else {
        var or__3824__auto____7074 = cljs.core._count["_"];
        if(or__3824__auto____7074) {
          return or__3824__auto____7074
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____7079 = coll;
    if(and__3822__auto____7079) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____7079
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2363__auto____7080 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7081 = cljs.core._empty[goog.typeOf(x__2363__auto____7080)];
      if(or__3824__auto____7081) {
        return or__3824__auto____7081
      }else {
        var or__3824__auto____7082 = cljs.core._empty["_"];
        if(or__3824__auto____7082) {
          return or__3824__auto____7082
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____7087 = coll;
    if(and__3822__auto____7087) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____7087
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2363__auto____7088 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7089 = cljs.core._conj[goog.typeOf(x__2363__auto____7088)];
      if(or__3824__auto____7089) {
        return or__3824__auto____7089
      }else {
        var or__3824__auto____7090 = cljs.core._conj["_"];
        if(or__3824__auto____7090) {
          return or__3824__auto____7090
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____7099 = coll;
      if(and__3822__auto____7099) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____7099
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2363__auto____7100 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7101 = cljs.core._nth[goog.typeOf(x__2363__auto____7100)];
        if(or__3824__auto____7101) {
          return or__3824__auto____7101
        }else {
          var or__3824__auto____7102 = cljs.core._nth["_"];
          if(or__3824__auto____7102) {
            return or__3824__auto____7102
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____7103 = coll;
      if(and__3822__auto____7103) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____7103
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2363__auto____7104 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7105 = cljs.core._nth[goog.typeOf(x__2363__auto____7104)];
        if(or__3824__auto____7105) {
          return or__3824__auto____7105
        }else {
          var or__3824__auto____7106 = cljs.core._nth["_"];
          if(or__3824__auto____7106) {
            return or__3824__auto____7106
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____7111 = coll;
    if(and__3822__auto____7111) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____7111
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2363__auto____7112 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7113 = cljs.core._first[goog.typeOf(x__2363__auto____7112)];
      if(or__3824__auto____7113) {
        return or__3824__auto____7113
      }else {
        var or__3824__auto____7114 = cljs.core._first["_"];
        if(or__3824__auto____7114) {
          return or__3824__auto____7114
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____7119 = coll;
    if(and__3822__auto____7119) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____7119
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2363__auto____7120 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7121 = cljs.core._rest[goog.typeOf(x__2363__auto____7120)];
      if(or__3824__auto____7121) {
        return or__3824__auto____7121
      }else {
        var or__3824__auto____7122 = cljs.core._rest["_"];
        if(or__3824__auto____7122) {
          return or__3824__auto____7122
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____7127 = coll;
    if(and__3822__auto____7127) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____7127
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2363__auto____7128 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7129 = cljs.core._next[goog.typeOf(x__2363__auto____7128)];
      if(or__3824__auto____7129) {
        return or__3824__auto____7129
      }else {
        var or__3824__auto____7130 = cljs.core._next["_"];
        if(or__3824__auto____7130) {
          return or__3824__auto____7130
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____7139 = o;
      if(and__3822__auto____7139) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____7139
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2363__auto____7140 = o == null ? null : o;
      return function() {
        var or__3824__auto____7141 = cljs.core._lookup[goog.typeOf(x__2363__auto____7140)];
        if(or__3824__auto____7141) {
          return or__3824__auto____7141
        }else {
          var or__3824__auto____7142 = cljs.core._lookup["_"];
          if(or__3824__auto____7142) {
            return or__3824__auto____7142
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____7143 = o;
      if(and__3822__auto____7143) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____7143
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2363__auto____7144 = o == null ? null : o;
      return function() {
        var or__3824__auto____7145 = cljs.core._lookup[goog.typeOf(x__2363__auto____7144)];
        if(or__3824__auto____7145) {
          return or__3824__auto____7145
        }else {
          var or__3824__auto____7146 = cljs.core._lookup["_"];
          if(or__3824__auto____7146) {
            return or__3824__auto____7146
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____7151 = coll;
    if(and__3822__auto____7151) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____7151
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2363__auto____7152 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7153 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2363__auto____7152)];
      if(or__3824__auto____7153) {
        return or__3824__auto____7153
      }else {
        var or__3824__auto____7154 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____7154) {
          return or__3824__auto____7154
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____7159 = coll;
    if(and__3822__auto____7159) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____7159
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2363__auto____7160 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7161 = cljs.core._assoc[goog.typeOf(x__2363__auto____7160)];
      if(or__3824__auto____7161) {
        return or__3824__auto____7161
      }else {
        var or__3824__auto____7162 = cljs.core._assoc["_"];
        if(or__3824__auto____7162) {
          return or__3824__auto____7162
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____7167 = coll;
    if(and__3822__auto____7167) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____7167
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2363__auto____7168 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7169 = cljs.core._dissoc[goog.typeOf(x__2363__auto____7168)];
      if(or__3824__auto____7169) {
        return or__3824__auto____7169
      }else {
        var or__3824__auto____7170 = cljs.core._dissoc["_"];
        if(or__3824__auto____7170) {
          return or__3824__auto____7170
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____7175 = coll;
    if(and__3822__auto____7175) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____7175
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2363__auto____7176 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7177 = cljs.core._key[goog.typeOf(x__2363__auto____7176)];
      if(or__3824__auto____7177) {
        return or__3824__auto____7177
      }else {
        var or__3824__auto____7178 = cljs.core._key["_"];
        if(or__3824__auto____7178) {
          return or__3824__auto____7178
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____7183 = coll;
    if(and__3822__auto____7183) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____7183
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2363__auto____7184 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7185 = cljs.core._val[goog.typeOf(x__2363__auto____7184)];
      if(or__3824__auto____7185) {
        return or__3824__auto____7185
      }else {
        var or__3824__auto____7186 = cljs.core._val["_"];
        if(or__3824__auto____7186) {
          return or__3824__auto____7186
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____7191 = coll;
    if(and__3822__auto____7191) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____7191
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2363__auto____7192 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7193 = cljs.core._disjoin[goog.typeOf(x__2363__auto____7192)];
      if(or__3824__auto____7193) {
        return or__3824__auto____7193
      }else {
        var or__3824__auto____7194 = cljs.core._disjoin["_"];
        if(or__3824__auto____7194) {
          return or__3824__auto____7194
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____7199 = coll;
    if(and__3822__auto____7199) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____7199
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2363__auto____7200 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7201 = cljs.core._peek[goog.typeOf(x__2363__auto____7200)];
      if(or__3824__auto____7201) {
        return or__3824__auto____7201
      }else {
        var or__3824__auto____7202 = cljs.core._peek["_"];
        if(or__3824__auto____7202) {
          return or__3824__auto____7202
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____7207 = coll;
    if(and__3822__auto____7207) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____7207
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2363__auto____7208 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7209 = cljs.core._pop[goog.typeOf(x__2363__auto____7208)];
      if(or__3824__auto____7209) {
        return or__3824__auto____7209
      }else {
        var or__3824__auto____7210 = cljs.core._pop["_"];
        if(or__3824__auto____7210) {
          return or__3824__auto____7210
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____7215 = coll;
    if(and__3822__auto____7215) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____7215
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2363__auto____7216 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7217 = cljs.core._assoc_n[goog.typeOf(x__2363__auto____7216)];
      if(or__3824__auto____7217) {
        return or__3824__auto____7217
      }else {
        var or__3824__auto____7218 = cljs.core._assoc_n["_"];
        if(or__3824__auto____7218) {
          return or__3824__auto____7218
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____7223 = o;
    if(and__3822__auto____7223) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____7223
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2363__auto____7224 = o == null ? null : o;
    return function() {
      var or__3824__auto____7225 = cljs.core._deref[goog.typeOf(x__2363__auto____7224)];
      if(or__3824__auto____7225) {
        return or__3824__auto____7225
      }else {
        var or__3824__auto____7226 = cljs.core._deref["_"];
        if(or__3824__auto____7226) {
          return or__3824__auto____7226
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____7231 = o;
    if(and__3822__auto____7231) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____7231
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2363__auto____7232 = o == null ? null : o;
    return function() {
      var or__3824__auto____7233 = cljs.core._deref_with_timeout[goog.typeOf(x__2363__auto____7232)];
      if(or__3824__auto____7233) {
        return or__3824__auto____7233
      }else {
        var or__3824__auto____7234 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____7234) {
          return or__3824__auto____7234
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____7239 = o;
    if(and__3822__auto____7239) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____7239
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2363__auto____7240 = o == null ? null : o;
    return function() {
      var or__3824__auto____7241 = cljs.core._meta[goog.typeOf(x__2363__auto____7240)];
      if(or__3824__auto____7241) {
        return or__3824__auto____7241
      }else {
        var or__3824__auto____7242 = cljs.core._meta["_"];
        if(or__3824__auto____7242) {
          return or__3824__auto____7242
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____7247 = o;
    if(and__3822__auto____7247) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____7247
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2363__auto____7248 = o == null ? null : o;
    return function() {
      var or__3824__auto____7249 = cljs.core._with_meta[goog.typeOf(x__2363__auto____7248)];
      if(or__3824__auto____7249) {
        return or__3824__auto____7249
      }else {
        var or__3824__auto____7250 = cljs.core._with_meta["_"];
        if(or__3824__auto____7250) {
          return or__3824__auto____7250
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____7259 = coll;
      if(and__3822__auto____7259) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____7259
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2363__auto____7260 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7261 = cljs.core._reduce[goog.typeOf(x__2363__auto____7260)];
        if(or__3824__auto____7261) {
          return or__3824__auto____7261
        }else {
          var or__3824__auto____7262 = cljs.core._reduce["_"];
          if(or__3824__auto____7262) {
            return or__3824__auto____7262
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____7263 = coll;
      if(and__3822__auto____7263) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____7263
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2363__auto____7264 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7265 = cljs.core._reduce[goog.typeOf(x__2363__auto____7264)];
        if(or__3824__auto____7265) {
          return or__3824__auto____7265
        }else {
          var or__3824__auto____7266 = cljs.core._reduce["_"];
          if(or__3824__auto____7266) {
            return or__3824__auto____7266
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____7271 = coll;
    if(and__3822__auto____7271) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____7271
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2363__auto____7272 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7273 = cljs.core._kv_reduce[goog.typeOf(x__2363__auto____7272)];
      if(or__3824__auto____7273) {
        return or__3824__auto____7273
      }else {
        var or__3824__auto____7274 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____7274) {
          return or__3824__auto____7274
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____7279 = o;
    if(and__3822__auto____7279) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____7279
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2363__auto____7280 = o == null ? null : o;
    return function() {
      var or__3824__auto____7281 = cljs.core._equiv[goog.typeOf(x__2363__auto____7280)];
      if(or__3824__auto____7281) {
        return or__3824__auto____7281
      }else {
        var or__3824__auto____7282 = cljs.core._equiv["_"];
        if(or__3824__auto____7282) {
          return or__3824__auto____7282
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____7287 = o;
    if(and__3822__auto____7287) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____7287
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2363__auto____7288 = o == null ? null : o;
    return function() {
      var or__3824__auto____7289 = cljs.core._hash[goog.typeOf(x__2363__auto____7288)];
      if(or__3824__auto____7289) {
        return or__3824__auto____7289
      }else {
        var or__3824__auto____7290 = cljs.core._hash["_"];
        if(or__3824__auto____7290) {
          return or__3824__auto____7290
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____7295 = o;
    if(and__3822__auto____7295) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____7295
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2363__auto____7296 = o == null ? null : o;
    return function() {
      var or__3824__auto____7297 = cljs.core._seq[goog.typeOf(x__2363__auto____7296)];
      if(or__3824__auto____7297) {
        return or__3824__auto____7297
      }else {
        var or__3824__auto____7298 = cljs.core._seq["_"];
        if(or__3824__auto____7298) {
          return or__3824__auto____7298
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____7303 = coll;
    if(and__3822__auto____7303) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____7303
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2363__auto____7304 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7305 = cljs.core._rseq[goog.typeOf(x__2363__auto____7304)];
      if(or__3824__auto____7305) {
        return or__3824__auto____7305
      }else {
        var or__3824__auto____7306 = cljs.core._rseq["_"];
        if(or__3824__auto____7306) {
          return or__3824__auto____7306
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7311 = coll;
    if(and__3822__auto____7311) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____7311
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2363__auto____7312 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7313 = cljs.core._sorted_seq[goog.typeOf(x__2363__auto____7312)];
      if(or__3824__auto____7313) {
        return or__3824__auto____7313
      }else {
        var or__3824__auto____7314 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____7314) {
          return or__3824__auto____7314
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7319 = coll;
    if(and__3822__auto____7319) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____7319
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2363__auto____7320 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7321 = cljs.core._sorted_seq_from[goog.typeOf(x__2363__auto____7320)];
      if(or__3824__auto____7321) {
        return or__3824__auto____7321
      }else {
        var or__3824__auto____7322 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____7322) {
          return or__3824__auto____7322
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____7327 = coll;
    if(and__3822__auto____7327) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____7327
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2363__auto____7328 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7329 = cljs.core._entry_key[goog.typeOf(x__2363__auto____7328)];
      if(or__3824__auto____7329) {
        return or__3824__auto____7329
      }else {
        var or__3824__auto____7330 = cljs.core._entry_key["_"];
        if(or__3824__auto____7330) {
          return or__3824__auto____7330
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____7335 = coll;
    if(and__3822__auto____7335) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____7335
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2363__auto____7336 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7337 = cljs.core._comparator[goog.typeOf(x__2363__auto____7336)];
      if(or__3824__auto____7337) {
        return or__3824__auto____7337
      }else {
        var or__3824__auto____7338 = cljs.core._comparator["_"];
        if(or__3824__auto____7338) {
          return or__3824__auto____7338
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____7343 = o;
    if(and__3822__auto____7343) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____7343
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2363__auto____7344 = o == null ? null : o;
    return function() {
      var or__3824__auto____7345 = cljs.core._pr_seq[goog.typeOf(x__2363__auto____7344)];
      if(or__3824__auto____7345) {
        return or__3824__auto____7345
      }else {
        var or__3824__auto____7346 = cljs.core._pr_seq["_"];
        if(or__3824__auto____7346) {
          return or__3824__auto____7346
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____7351 = d;
    if(and__3822__auto____7351) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____7351
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2363__auto____7352 = d == null ? null : d;
    return function() {
      var or__3824__auto____7353 = cljs.core._realized_QMARK_[goog.typeOf(x__2363__auto____7352)];
      if(or__3824__auto____7353) {
        return or__3824__auto____7353
      }else {
        var or__3824__auto____7354 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____7354) {
          return or__3824__auto____7354
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____7359 = this$;
    if(and__3822__auto____7359) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____7359
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2363__auto____7360 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7361 = cljs.core._notify_watches[goog.typeOf(x__2363__auto____7360)];
      if(or__3824__auto____7361) {
        return or__3824__auto____7361
      }else {
        var or__3824__auto____7362 = cljs.core._notify_watches["_"];
        if(or__3824__auto____7362) {
          return or__3824__auto____7362
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____7367 = this$;
    if(and__3822__auto____7367) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____7367
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2363__auto____7368 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7369 = cljs.core._add_watch[goog.typeOf(x__2363__auto____7368)];
      if(or__3824__auto____7369) {
        return or__3824__auto____7369
      }else {
        var or__3824__auto____7370 = cljs.core._add_watch["_"];
        if(or__3824__auto____7370) {
          return or__3824__auto____7370
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____7375 = this$;
    if(and__3822__auto____7375) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____7375
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2363__auto____7376 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7377 = cljs.core._remove_watch[goog.typeOf(x__2363__auto____7376)];
      if(or__3824__auto____7377) {
        return or__3824__auto____7377
      }else {
        var or__3824__auto____7378 = cljs.core._remove_watch["_"];
        if(or__3824__auto____7378) {
          return or__3824__auto____7378
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____7383 = coll;
    if(and__3822__auto____7383) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____7383
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2363__auto____7384 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7385 = cljs.core._as_transient[goog.typeOf(x__2363__auto____7384)];
      if(or__3824__auto____7385) {
        return or__3824__auto____7385
      }else {
        var or__3824__auto____7386 = cljs.core._as_transient["_"];
        if(or__3824__auto____7386) {
          return or__3824__auto____7386
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____7391 = tcoll;
    if(and__3822__auto____7391) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____7391
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2363__auto____7392 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7393 = cljs.core._conj_BANG_[goog.typeOf(x__2363__auto____7392)];
      if(or__3824__auto____7393) {
        return or__3824__auto____7393
      }else {
        var or__3824__auto____7394 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____7394) {
          return or__3824__auto____7394
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7399 = tcoll;
    if(and__3822__auto____7399) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____7399
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____7400 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7401 = cljs.core._persistent_BANG_[goog.typeOf(x__2363__auto____7400)];
      if(or__3824__auto____7401) {
        return or__3824__auto____7401
      }else {
        var or__3824__auto____7402 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____7402) {
          return or__3824__auto____7402
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____7407 = tcoll;
    if(and__3822__auto____7407) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____7407
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2363__auto____7408 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7409 = cljs.core._assoc_BANG_[goog.typeOf(x__2363__auto____7408)];
      if(or__3824__auto____7409) {
        return or__3824__auto____7409
      }else {
        var or__3824__auto____7410 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____7410) {
          return or__3824__auto____7410
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____7415 = tcoll;
    if(and__3822__auto____7415) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____7415
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2363__auto____7416 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7417 = cljs.core._dissoc_BANG_[goog.typeOf(x__2363__auto____7416)];
      if(or__3824__auto____7417) {
        return or__3824__auto____7417
      }else {
        var or__3824__auto____7418 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____7418) {
          return or__3824__auto____7418
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____7423 = tcoll;
    if(and__3822__auto____7423) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____7423
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2363__auto____7424 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7425 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2363__auto____7424)];
      if(or__3824__auto____7425) {
        return or__3824__auto____7425
      }else {
        var or__3824__auto____7426 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____7426) {
          return or__3824__auto____7426
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7431 = tcoll;
    if(and__3822__auto____7431) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____7431
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____7432 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7433 = cljs.core._pop_BANG_[goog.typeOf(x__2363__auto____7432)];
      if(or__3824__auto____7433) {
        return or__3824__auto____7433
      }else {
        var or__3824__auto____7434 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____7434) {
          return or__3824__auto____7434
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____7439 = tcoll;
    if(and__3822__auto____7439) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____7439
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2363__auto____7440 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7441 = cljs.core._disjoin_BANG_[goog.typeOf(x__2363__auto____7440)];
      if(or__3824__auto____7441) {
        return or__3824__auto____7441
      }else {
        var or__3824__auto____7442 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____7442) {
          return or__3824__auto____7442
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____7447 = x;
    if(and__3822__auto____7447) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____7447
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2363__auto____7448 = x == null ? null : x;
    return function() {
      var or__3824__auto____7449 = cljs.core._compare[goog.typeOf(x__2363__auto____7448)];
      if(or__3824__auto____7449) {
        return or__3824__auto____7449
      }else {
        var or__3824__auto____7450 = cljs.core._compare["_"];
        if(or__3824__auto____7450) {
          return or__3824__auto____7450
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____7455 = coll;
    if(and__3822__auto____7455) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____7455
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2363__auto____7456 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7457 = cljs.core._drop_first[goog.typeOf(x__2363__auto____7456)];
      if(or__3824__auto____7457) {
        return or__3824__auto____7457
      }else {
        var or__3824__auto____7458 = cljs.core._drop_first["_"];
        if(or__3824__auto____7458) {
          return or__3824__auto____7458
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____7463 = coll;
    if(and__3822__auto____7463) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____7463
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2363__auto____7464 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7465 = cljs.core._chunked_first[goog.typeOf(x__2363__auto____7464)];
      if(or__3824__auto____7465) {
        return or__3824__auto____7465
      }else {
        var or__3824__auto____7466 = cljs.core._chunked_first["_"];
        if(or__3824__auto____7466) {
          return or__3824__auto____7466
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____7471 = coll;
    if(and__3822__auto____7471) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____7471
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2363__auto____7472 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7473 = cljs.core._chunked_rest[goog.typeOf(x__2363__auto____7472)];
      if(or__3824__auto____7473) {
        return or__3824__auto____7473
      }else {
        var or__3824__auto____7474 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____7474) {
          return or__3824__auto____7474
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____7479 = coll;
    if(and__3822__auto____7479) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____7479
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2363__auto____7480 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7481 = cljs.core._chunked_next[goog.typeOf(x__2363__auto____7480)];
      if(or__3824__auto____7481) {
        return or__3824__auto____7481
      }else {
        var or__3824__auto____7482 = cljs.core._chunked_next["_"];
        if(or__3824__auto____7482) {
          return or__3824__auto____7482
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____7484 = x === y;
    if(or__3824__auto____7484) {
      return or__3824__auto____7484
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__7485__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7486 = y;
            var G__7487 = cljs.core.first.call(null, more);
            var G__7488 = cljs.core.next.call(null, more);
            x = G__7486;
            y = G__7487;
            more = G__7488;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7485 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7485__delegate.call(this, x, y, more)
    };
    G__7485.cljs$lang$maxFixedArity = 2;
    G__7485.cljs$lang$applyTo = function(arglist__7489) {
      var x = cljs.core.first(arglist__7489);
      var y = cljs.core.first(cljs.core.next(arglist__7489));
      var more = cljs.core.rest(cljs.core.next(arglist__7489));
      return G__7485__delegate(x, y, more)
    };
    G__7485.cljs$lang$arity$variadic = G__7485__delegate;
    return G__7485
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__7490 = null;
  var G__7490__2 = function(o, k) {
    return null
  };
  var G__7490__3 = function(o, k, not_found) {
    return not_found
  };
  G__7490 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7490__2.call(this, o, k);
      case 3:
        return G__7490__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7490
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__7491 = null;
  var G__7491__2 = function(_, f) {
    return f.call(null)
  };
  var G__7491__3 = function(_, f, start) {
    return start
  };
  G__7491 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7491__2.call(this, _, f);
      case 3:
        return G__7491__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7491
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__7492 = null;
  var G__7492__2 = function(_, n) {
    return null
  };
  var G__7492__3 = function(_, n, not_found) {
    return not_found
  };
  G__7492 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7492__2.call(this, _, n);
      case 3:
        return G__7492__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7492
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____7493 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____7493) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____7493
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__7506 = cljs.core._count.call(null, cicoll);
    if(cnt__7506 === 0) {
      return f.call(null)
    }else {
      var val__7507 = cljs.core._nth.call(null, cicoll, 0);
      var n__7508 = 1;
      while(true) {
        if(n__7508 < cnt__7506) {
          var nval__7509 = f.call(null, val__7507, cljs.core._nth.call(null, cicoll, n__7508));
          if(cljs.core.reduced_QMARK_.call(null, nval__7509)) {
            return cljs.core.deref.call(null, nval__7509)
          }else {
            var G__7518 = nval__7509;
            var G__7519 = n__7508 + 1;
            val__7507 = G__7518;
            n__7508 = G__7519;
            continue
          }
        }else {
          return val__7507
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__7510 = cljs.core._count.call(null, cicoll);
    var val__7511 = val;
    var n__7512 = 0;
    while(true) {
      if(n__7512 < cnt__7510) {
        var nval__7513 = f.call(null, val__7511, cljs.core._nth.call(null, cicoll, n__7512));
        if(cljs.core.reduced_QMARK_.call(null, nval__7513)) {
          return cljs.core.deref.call(null, nval__7513)
        }else {
          var G__7520 = nval__7513;
          var G__7521 = n__7512 + 1;
          val__7511 = G__7520;
          n__7512 = G__7521;
          continue
        }
      }else {
        return val__7511
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__7514 = cljs.core._count.call(null, cicoll);
    var val__7515 = val;
    var n__7516 = idx;
    while(true) {
      if(n__7516 < cnt__7514) {
        var nval__7517 = f.call(null, val__7515, cljs.core._nth.call(null, cicoll, n__7516));
        if(cljs.core.reduced_QMARK_.call(null, nval__7517)) {
          return cljs.core.deref.call(null, nval__7517)
        }else {
          var G__7522 = nval__7517;
          var G__7523 = n__7516 + 1;
          val__7515 = G__7522;
          n__7516 = G__7523;
          continue
        }
      }else {
        return val__7515
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__7536 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__7537 = arr[0];
      var n__7538 = 1;
      while(true) {
        if(n__7538 < cnt__7536) {
          var nval__7539 = f.call(null, val__7537, arr[n__7538]);
          if(cljs.core.reduced_QMARK_.call(null, nval__7539)) {
            return cljs.core.deref.call(null, nval__7539)
          }else {
            var G__7548 = nval__7539;
            var G__7549 = n__7538 + 1;
            val__7537 = G__7548;
            n__7538 = G__7549;
            continue
          }
        }else {
          return val__7537
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__7540 = arr.length;
    var val__7541 = val;
    var n__7542 = 0;
    while(true) {
      if(n__7542 < cnt__7540) {
        var nval__7543 = f.call(null, val__7541, arr[n__7542]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7543)) {
          return cljs.core.deref.call(null, nval__7543)
        }else {
          var G__7550 = nval__7543;
          var G__7551 = n__7542 + 1;
          val__7541 = G__7550;
          n__7542 = G__7551;
          continue
        }
      }else {
        return val__7541
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__7544 = arr.length;
    var val__7545 = val;
    var n__7546 = idx;
    while(true) {
      if(n__7546 < cnt__7544) {
        var nval__7547 = f.call(null, val__7545, arr[n__7546]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7547)) {
          return cljs.core.deref.call(null, nval__7547)
        }else {
          var G__7552 = nval__7547;
          var G__7553 = n__7546 + 1;
          val__7545 = G__7552;
          n__7546 = G__7553;
          continue
        }
      }else {
        return val__7545
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7554 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__7555 = this;
  if(this__7555.i + 1 < this__7555.a.length) {
    return new cljs.core.IndexedSeq(this__7555.a, this__7555.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7556 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__7557 = this;
  var c__7558 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__7558 > 0) {
    return new cljs.core.RSeq(coll, c__7558 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__7559 = this;
  var this__7560 = this;
  return cljs.core.pr_str.call(null, this__7560)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__7561 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7561.a)) {
    return cljs.core.ci_reduce.call(null, this__7561.a, f, this__7561.a[this__7561.i], this__7561.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__7561.a[this__7561.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__7562 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7562.a)) {
    return cljs.core.ci_reduce.call(null, this__7562.a, f, start, this__7562.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__7563 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__7564 = this;
  return this__7564.a.length - this__7564.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__7565 = this;
  return this__7565.a[this__7565.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__7566 = this;
  if(this__7566.i + 1 < this__7566.a.length) {
    return new cljs.core.IndexedSeq(this__7566.a, this__7566.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7567 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__7568 = this;
  var i__7569 = n + this__7568.i;
  if(i__7569 < this__7568.a.length) {
    return this__7568.a[i__7569]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__7570 = this;
  var i__7571 = n + this__7570.i;
  if(i__7571 < this__7570.a.length) {
    return this__7570.a[i__7571]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__7572 = null;
  var G__7572__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__7572__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__7572 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7572__2.call(this, array, f);
      case 3:
        return G__7572__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7572
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__7573 = null;
  var G__7573__2 = function(array, k) {
    return array[k]
  };
  var G__7573__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__7573 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7573__2.call(this, array, k);
      case 3:
        return G__7573__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7573
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__7574 = null;
  var G__7574__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__7574__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__7574 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7574__2.call(this, array, n);
      case 3:
        return G__7574__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7574
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7575 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7576 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__7577 = this;
  var this__7578 = this;
  return cljs.core.pr_str.call(null, this__7578)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7579 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7580 = this;
  return this__7580.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7581 = this;
  return cljs.core._nth.call(null, this__7581.ci, this__7581.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7582 = this;
  if(this__7582.i > 0) {
    return new cljs.core.RSeq(this__7582.ci, this__7582.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7583 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__7584 = this;
  return new cljs.core.RSeq(this__7584.ci, this__7584.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7585 = this;
  return this__7585.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7589__7590 = coll;
      if(G__7589__7590) {
        if(function() {
          var or__3824__auto____7591 = G__7589__7590.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____7591) {
            return or__3824__auto____7591
          }else {
            return G__7589__7590.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__7589__7590.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7589__7590)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7589__7590)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7596__7597 = coll;
      if(G__7596__7597) {
        if(function() {
          var or__3824__auto____7598 = G__7596__7597.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____7598) {
            return or__3824__auto____7598
          }else {
            return G__7596__7597.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7596__7597.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7596__7597)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7596__7597)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__7599 = cljs.core.seq.call(null, coll);
      if(s__7599 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__7599)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__7604__7605 = coll;
      if(G__7604__7605) {
        if(function() {
          var or__3824__auto____7606 = G__7604__7605.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____7606) {
            return or__3824__auto____7606
          }else {
            return G__7604__7605.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7604__7605.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7604__7605)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7604__7605)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__7607 = cljs.core.seq.call(null, coll);
      if(!(s__7607 == null)) {
        return cljs.core._rest.call(null, s__7607)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7611__7612 = coll;
      if(G__7611__7612) {
        if(function() {
          var or__3824__auto____7613 = G__7611__7612.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____7613) {
            return or__3824__auto____7613
          }else {
            return G__7611__7612.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__7611__7612.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__7611__7612)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__7611__7612)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__7615 = cljs.core.next.call(null, s);
    if(!(sn__7615 == null)) {
      var G__7616 = sn__7615;
      s = G__7616;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__7617__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__7618 = conj.call(null, coll, x);
          var G__7619 = cljs.core.first.call(null, xs);
          var G__7620 = cljs.core.next.call(null, xs);
          coll = G__7618;
          x = G__7619;
          xs = G__7620;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__7617 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7617__delegate.call(this, coll, x, xs)
    };
    G__7617.cljs$lang$maxFixedArity = 2;
    G__7617.cljs$lang$applyTo = function(arglist__7621) {
      var coll = cljs.core.first(arglist__7621);
      var x = cljs.core.first(cljs.core.next(arglist__7621));
      var xs = cljs.core.rest(cljs.core.next(arglist__7621));
      return G__7617__delegate(coll, x, xs)
    };
    G__7617.cljs$lang$arity$variadic = G__7617__delegate;
    return G__7617
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__7624 = cljs.core.seq.call(null, coll);
  var acc__7625 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__7624)) {
      return acc__7625 + cljs.core._count.call(null, s__7624)
    }else {
      var G__7626 = cljs.core.next.call(null, s__7624);
      var G__7627 = acc__7625 + 1;
      s__7624 = G__7626;
      acc__7625 = G__7627;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__7634__7635 = coll;
        if(G__7634__7635) {
          if(function() {
            var or__3824__auto____7636 = G__7634__7635.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____7636) {
              return or__3824__auto____7636
            }else {
              return G__7634__7635.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__7634__7635.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7634__7635)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7634__7635)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__7637__7638 = coll;
        if(G__7637__7638) {
          if(function() {
            var or__3824__auto____7639 = G__7637__7638.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____7639) {
              return or__3824__auto____7639
            }else {
              return G__7637__7638.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__7637__7638.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7637__7638)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7637__7638)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__7642__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__7641 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__7643 = ret__7641;
          var G__7644 = cljs.core.first.call(null, kvs);
          var G__7645 = cljs.core.second.call(null, kvs);
          var G__7646 = cljs.core.nnext.call(null, kvs);
          coll = G__7643;
          k = G__7644;
          v = G__7645;
          kvs = G__7646;
          continue
        }else {
          return ret__7641
        }
        break
      }
    };
    var G__7642 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7642__delegate.call(this, coll, k, v, kvs)
    };
    G__7642.cljs$lang$maxFixedArity = 3;
    G__7642.cljs$lang$applyTo = function(arglist__7647) {
      var coll = cljs.core.first(arglist__7647);
      var k = cljs.core.first(cljs.core.next(arglist__7647));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7647)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7647)));
      return G__7642__delegate(coll, k, v, kvs)
    };
    G__7642.cljs$lang$arity$variadic = G__7642__delegate;
    return G__7642
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__7650__delegate = function(coll, k, ks) {
      while(true) {
        var ret__7649 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__7651 = ret__7649;
          var G__7652 = cljs.core.first.call(null, ks);
          var G__7653 = cljs.core.next.call(null, ks);
          coll = G__7651;
          k = G__7652;
          ks = G__7653;
          continue
        }else {
          return ret__7649
        }
        break
      }
    };
    var G__7650 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7650__delegate.call(this, coll, k, ks)
    };
    G__7650.cljs$lang$maxFixedArity = 2;
    G__7650.cljs$lang$applyTo = function(arglist__7654) {
      var coll = cljs.core.first(arglist__7654);
      var k = cljs.core.first(cljs.core.next(arglist__7654));
      var ks = cljs.core.rest(cljs.core.next(arglist__7654));
      return G__7650__delegate(coll, k, ks)
    };
    G__7650.cljs$lang$arity$variadic = G__7650__delegate;
    return G__7650
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__7658__7659 = o;
    if(G__7658__7659) {
      if(function() {
        var or__3824__auto____7660 = G__7658__7659.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____7660) {
          return or__3824__auto____7660
        }else {
          return G__7658__7659.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__7658__7659.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7658__7659)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7658__7659)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__7663__delegate = function(coll, k, ks) {
      while(true) {
        var ret__7662 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__7664 = ret__7662;
          var G__7665 = cljs.core.first.call(null, ks);
          var G__7666 = cljs.core.next.call(null, ks);
          coll = G__7664;
          k = G__7665;
          ks = G__7666;
          continue
        }else {
          return ret__7662
        }
        break
      }
    };
    var G__7663 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7663__delegate.call(this, coll, k, ks)
    };
    G__7663.cljs$lang$maxFixedArity = 2;
    G__7663.cljs$lang$applyTo = function(arglist__7667) {
      var coll = cljs.core.first(arglist__7667);
      var k = cljs.core.first(cljs.core.next(arglist__7667));
      var ks = cljs.core.rest(cljs.core.next(arglist__7667));
      return G__7663__delegate(coll, k, ks)
    };
    G__7663.cljs$lang$arity$variadic = G__7663__delegate;
    return G__7663
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__7669 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__7669;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__7669
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__7671 = cljs.core.string_hash_cache[k];
  if(!(h__7671 == null)) {
    return h__7671
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____7673 = goog.isString(o);
      if(and__3822__auto____7673) {
        return check_cache
      }else {
        return and__3822__auto____7673
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7677__7678 = x;
    if(G__7677__7678) {
      if(function() {
        var or__3824__auto____7679 = G__7677__7678.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____7679) {
          return or__3824__auto____7679
        }else {
          return G__7677__7678.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__7677__7678.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__7677__7678)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__7677__7678)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7683__7684 = x;
    if(G__7683__7684) {
      if(function() {
        var or__3824__auto____7685 = G__7683__7684.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____7685) {
          return or__3824__auto____7685
        }else {
          return G__7683__7684.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__7683__7684.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__7683__7684)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__7683__7684)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__7689__7690 = x;
  if(G__7689__7690) {
    if(function() {
      var or__3824__auto____7691 = G__7689__7690.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____7691) {
        return or__3824__auto____7691
      }else {
        return G__7689__7690.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__7689__7690.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__7689__7690)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__7689__7690)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__7695__7696 = x;
  if(G__7695__7696) {
    if(function() {
      var or__3824__auto____7697 = G__7695__7696.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____7697) {
        return or__3824__auto____7697
      }else {
        return G__7695__7696.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__7695__7696.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__7695__7696)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__7695__7696)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__7701__7702 = x;
  if(G__7701__7702) {
    if(function() {
      var or__3824__auto____7703 = G__7701__7702.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____7703) {
        return or__3824__auto____7703
      }else {
        return G__7701__7702.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__7701__7702.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__7701__7702)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__7701__7702)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__7707__7708 = x;
  if(G__7707__7708) {
    if(function() {
      var or__3824__auto____7709 = G__7707__7708.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____7709) {
        return or__3824__auto____7709
      }else {
        return G__7707__7708.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__7707__7708.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7707__7708)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7707__7708)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__7713__7714 = x;
  if(G__7713__7714) {
    if(function() {
      var or__3824__auto____7715 = G__7713__7714.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____7715) {
        return or__3824__auto____7715
      }else {
        return G__7713__7714.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__7713__7714.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7713__7714)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7713__7714)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7719__7720 = x;
    if(G__7719__7720) {
      if(function() {
        var or__3824__auto____7721 = G__7719__7720.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____7721) {
          return or__3824__auto____7721
        }else {
          return G__7719__7720.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__7719__7720.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__7719__7720)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__7719__7720)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__7725__7726 = x;
  if(G__7725__7726) {
    if(function() {
      var or__3824__auto____7727 = G__7725__7726.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____7727) {
        return or__3824__auto____7727
      }else {
        return G__7725__7726.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__7725__7726.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__7725__7726)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__7725__7726)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__7731__7732 = x;
  if(G__7731__7732) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____7733 = null;
      if(cljs.core.truth_(or__3824__auto____7733)) {
        return or__3824__auto____7733
      }else {
        return G__7731__7732.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__7731__7732.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__7731__7732)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__7731__7732)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__7734__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__7734 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__7734__delegate.call(this, keyvals)
    };
    G__7734.cljs$lang$maxFixedArity = 0;
    G__7734.cljs$lang$applyTo = function(arglist__7735) {
      var keyvals = cljs.core.seq(arglist__7735);
      return G__7734__delegate(keyvals)
    };
    G__7734.cljs$lang$arity$variadic = G__7734__delegate;
    return G__7734
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__7737 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__7737.push(key)
  });
  return keys__7737
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__7741 = i;
  var j__7742 = j;
  var len__7743 = len;
  while(true) {
    if(len__7743 === 0) {
      return to
    }else {
      to[j__7742] = from[i__7741];
      var G__7744 = i__7741 + 1;
      var G__7745 = j__7742 + 1;
      var G__7746 = len__7743 - 1;
      i__7741 = G__7744;
      j__7742 = G__7745;
      len__7743 = G__7746;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__7750 = i + (len - 1);
  var j__7751 = j + (len - 1);
  var len__7752 = len;
  while(true) {
    if(len__7752 === 0) {
      return to
    }else {
      to[j__7751] = from[i__7750];
      var G__7753 = i__7750 - 1;
      var G__7754 = j__7751 - 1;
      var G__7755 = len__7752 - 1;
      i__7750 = G__7753;
      j__7751 = G__7754;
      len__7752 = G__7755;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__7759__7760 = s;
    if(G__7759__7760) {
      if(function() {
        var or__3824__auto____7761 = G__7759__7760.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____7761) {
          return or__3824__auto____7761
        }else {
          return G__7759__7760.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__7759__7760.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7759__7760)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7759__7760)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__7765__7766 = s;
  if(G__7765__7766) {
    if(function() {
      var or__3824__auto____7767 = G__7765__7766.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____7767) {
        return or__3824__auto____7767
      }else {
        return G__7765__7766.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__7765__7766.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__7765__7766)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__7765__7766)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____7770 = goog.isString(x);
  if(and__3822__auto____7770) {
    return!function() {
      var or__3824__auto____7771 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____7771) {
        return or__3824__auto____7771
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____7770
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____7773 = goog.isString(x);
  if(and__3822__auto____7773) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____7773
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____7775 = goog.isString(x);
  if(and__3822__auto____7775) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____7775
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____7780 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____7780) {
    return or__3824__auto____7780
  }else {
    var G__7781__7782 = f;
    if(G__7781__7782) {
      if(function() {
        var or__3824__auto____7783 = G__7781__7782.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____7783) {
          return or__3824__auto____7783
        }else {
          return G__7781__7782.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__7781__7782.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__7781__7782)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__7781__7782)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____7785 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____7785) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____7785
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____7788 = coll;
    if(cljs.core.truth_(and__3822__auto____7788)) {
      var and__3822__auto____7789 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____7789) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____7789
      }
    }else {
      return and__3822__auto____7788
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__7798__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__7794 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__7795 = more;
        while(true) {
          var x__7796 = cljs.core.first.call(null, xs__7795);
          var etc__7797 = cljs.core.next.call(null, xs__7795);
          if(cljs.core.truth_(xs__7795)) {
            if(cljs.core.contains_QMARK_.call(null, s__7794, x__7796)) {
              return false
            }else {
              var G__7799 = cljs.core.conj.call(null, s__7794, x__7796);
              var G__7800 = etc__7797;
              s__7794 = G__7799;
              xs__7795 = G__7800;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__7798 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7798__delegate.call(this, x, y, more)
    };
    G__7798.cljs$lang$maxFixedArity = 2;
    G__7798.cljs$lang$applyTo = function(arglist__7801) {
      var x = cljs.core.first(arglist__7801);
      var y = cljs.core.first(cljs.core.next(arglist__7801));
      var more = cljs.core.rest(cljs.core.next(arglist__7801));
      return G__7798__delegate(x, y, more)
    };
    G__7798.cljs$lang$arity$variadic = G__7798__delegate;
    return G__7798
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__7805__7806 = x;
            if(G__7805__7806) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____7807 = null;
                if(cljs.core.truth_(or__3824__auto____7807)) {
                  return or__3824__auto____7807
                }else {
                  return G__7805__7806.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__7805__7806.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__7805__7806)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__7805__7806)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__7812 = cljs.core.count.call(null, xs);
    var yl__7813 = cljs.core.count.call(null, ys);
    if(xl__7812 < yl__7813) {
      return-1
    }else {
      if(xl__7812 > yl__7813) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__7812, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__7814 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____7815 = d__7814 === 0;
        if(and__3822__auto____7815) {
          return n + 1 < len
        }else {
          return and__3822__auto____7815
        }
      }()) {
        var G__7816 = xs;
        var G__7817 = ys;
        var G__7818 = len;
        var G__7819 = n + 1;
        xs = G__7816;
        ys = G__7817;
        len = G__7818;
        n = G__7819;
        continue
      }else {
        return d__7814
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__7821 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__7821)) {
        return r__7821
      }else {
        if(cljs.core.truth_(r__7821)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__7823 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__7823, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__7823)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____7829 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____7829) {
      var s__7830 = temp__3971__auto____7829;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__7830), cljs.core.next.call(null, s__7830))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__7831 = val;
    var coll__7832 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__7832) {
        var nval__7833 = f.call(null, val__7831, cljs.core.first.call(null, coll__7832));
        if(cljs.core.reduced_QMARK_.call(null, nval__7833)) {
          return cljs.core.deref.call(null, nval__7833)
        }else {
          var G__7834 = nval__7833;
          var G__7835 = cljs.core.next.call(null, coll__7832);
          val__7831 = G__7834;
          coll__7832 = G__7835;
          continue
        }
      }else {
        return val__7831
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__7837 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__7837);
  return cljs.core.vec.call(null, a__7837)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__7844__7845 = coll;
      if(G__7844__7845) {
        if(function() {
          var or__3824__auto____7846 = G__7844__7845.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____7846) {
            return or__3824__auto____7846
          }else {
            return G__7844__7845.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__7844__7845.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7844__7845)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7844__7845)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__7847__7848 = coll;
      if(G__7847__7848) {
        if(function() {
          var or__3824__auto____7849 = G__7847__7848.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____7849) {
            return or__3824__auto____7849
          }else {
            return G__7847__7848.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__7847__7848.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7847__7848)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7847__7848)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__7850 = this;
  return this__7850.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__7851__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__7851 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7851__delegate.call(this, x, y, more)
    };
    G__7851.cljs$lang$maxFixedArity = 2;
    G__7851.cljs$lang$applyTo = function(arglist__7852) {
      var x = cljs.core.first(arglist__7852);
      var y = cljs.core.first(cljs.core.next(arglist__7852));
      var more = cljs.core.rest(cljs.core.next(arglist__7852));
      return G__7851__delegate(x, y, more)
    };
    G__7851.cljs$lang$arity$variadic = G__7851__delegate;
    return G__7851
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__7853__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__7853 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7853__delegate.call(this, x, y, more)
    };
    G__7853.cljs$lang$maxFixedArity = 2;
    G__7853.cljs$lang$applyTo = function(arglist__7854) {
      var x = cljs.core.first(arglist__7854);
      var y = cljs.core.first(cljs.core.next(arglist__7854));
      var more = cljs.core.rest(cljs.core.next(arglist__7854));
      return G__7853__delegate(x, y, more)
    };
    G__7853.cljs$lang$arity$variadic = G__7853__delegate;
    return G__7853
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__7855__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__7855 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7855__delegate.call(this, x, y, more)
    };
    G__7855.cljs$lang$maxFixedArity = 2;
    G__7855.cljs$lang$applyTo = function(arglist__7856) {
      var x = cljs.core.first(arglist__7856);
      var y = cljs.core.first(cljs.core.next(arglist__7856));
      var more = cljs.core.rest(cljs.core.next(arglist__7856));
      return G__7855__delegate(x, y, more)
    };
    G__7855.cljs$lang$arity$variadic = G__7855__delegate;
    return G__7855
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__7857__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__7857 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7857__delegate.call(this, x, y, more)
    };
    G__7857.cljs$lang$maxFixedArity = 2;
    G__7857.cljs$lang$applyTo = function(arglist__7858) {
      var x = cljs.core.first(arglist__7858);
      var y = cljs.core.first(cljs.core.next(arglist__7858));
      var more = cljs.core.rest(cljs.core.next(arglist__7858));
      return G__7857__delegate(x, y, more)
    };
    G__7857.cljs$lang$arity$variadic = G__7857__delegate;
    return G__7857
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__7859__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__7860 = y;
            var G__7861 = cljs.core.first.call(null, more);
            var G__7862 = cljs.core.next.call(null, more);
            x = G__7860;
            y = G__7861;
            more = G__7862;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7859 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7859__delegate.call(this, x, y, more)
    };
    G__7859.cljs$lang$maxFixedArity = 2;
    G__7859.cljs$lang$applyTo = function(arglist__7863) {
      var x = cljs.core.first(arglist__7863);
      var y = cljs.core.first(cljs.core.next(arglist__7863));
      var more = cljs.core.rest(cljs.core.next(arglist__7863));
      return G__7859__delegate(x, y, more)
    };
    G__7859.cljs$lang$arity$variadic = G__7859__delegate;
    return G__7859
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__7864__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__7865 = y;
            var G__7866 = cljs.core.first.call(null, more);
            var G__7867 = cljs.core.next.call(null, more);
            x = G__7865;
            y = G__7866;
            more = G__7867;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7864 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7864__delegate.call(this, x, y, more)
    };
    G__7864.cljs$lang$maxFixedArity = 2;
    G__7864.cljs$lang$applyTo = function(arglist__7868) {
      var x = cljs.core.first(arglist__7868);
      var y = cljs.core.first(cljs.core.next(arglist__7868));
      var more = cljs.core.rest(cljs.core.next(arglist__7868));
      return G__7864__delegate(x, y, more)
    };
    G__7864.cljs$lang$arity$variadic = G__7864__delegate;
    return G__7864
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__7869__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__7870 = y;
            var G__7871 = cljs.core.first.call(null, more);
            var G__7872 = cljs.core.next.call(null, more);
            x = G__7870;
            y = G__7871;
            more = G__7872;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7869 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7869__delegate.call(this, x, y, more)
    };
    G__7869.cljs$lang$maxFixedArity = 2;
    G__7869.cljs$lang$applyTo = function(arglist__7873) {
      var x = cljs.core.first(arglist__7873);
      var y = cljs.core.first(cljs.core.next(arglist__7873));
      var more = cljs.core.rest(cljs.core.next(arglist__7873));
      return G__7869__delegate(x, y, more)
    };
    G__7869.cljs$lang$arity$variadic = G__7869__delegate;
    return G__7869
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__7874__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__7875 = y;
            var G__7876 = cljs.core.first.call(null, more);
            var G__7877 = cljs.core.next.call(null, more);
            x = G__7875;
            y = G__7876;
            more = G__7877;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7874 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7874__delegate.call(this, x, y, more)
    };
    G__7874.cljs$lang$maxFixedArity = 2;
    G__7874.cljs$lang$applyTo = function(arglist__7878) {
      var x = cljs.core.first(arglist__7878);
      var y = cljs.core.first(cljs.core.next(arglist__7878));
      var more = cljs.core.rest(cljs.core.next(arglist__7878));
      return G__7874__delegate(x, y, more)
    };
    G__7874.cljs$lang$arity$variadic = G__7874__delegate;
    return G__7874
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__7879__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__7879 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7879__delegate.call(this, x, y, more)
    };
    G__7879.cljs$lang$maxFixedArity = 2;
    G__7879.cljs$lang$applyTo = function(arglist__7880) {
      var x = cljs.core.first(arglist__7880);
      var y = cljs.core.first(cljs.core.next(arglist__7880));
      var more = cljs.core.rest(cljs.core.next(arglist__7880));
      return G__7879__delegate(x, y, more)
    };
    G__7879.cljs$lang$arity$variadic = G__7879__delegate;
    return G__7879
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__7881__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__7881 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7881__delegate.call(this, x, y, more)
    };
    G__7881.cljs$lang$maxFixedArity = 2;
    G__7881.cljs$lang$applyTo = function(arglist__7882) {
      var x = cljs.core.first(arglist__7882);
      var y = cljs.core.first(cljs.core.next(arglist__7882));
      var more = cljs.core.rest(cljs.core.next(arglist__7882));
      return G__7881__delegate(x, y, more)
    };
    G__7881.cljs$lang$arity$variadic = G__7881__delegate;
    return G__7881
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__7884 = n % d;
  return cljs.core.fix.call(null, (n - rem__7884) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__7886 = cljs.core.quot.call(null, n, d);
  return n - d * q__7886
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__7889 = v - (v >> 1 & 1431655765);
  var v__7890 = (v__7889 & 858993459) + (v__7889 >> 2 & 858993459);
  return(v__7890 + (v__7890 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__7891__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7892 = y;
            var G__7893 = cljs.core.first.call(null, more);
            var G__7894 = cljs.core.next.call(null, more);
            x = G__7892;
            y = G__7893;
            more = G__7894;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7891 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7891__delegate.call(this, x, y, more)
    };
    G__7891.cljs$lang$maxFixedArity = 2;
    G__7891.cljs$lang$applyTo = function(arglist__7895) {
      var x = cljs.core.first(arglist__7895);
      var y = cljs.core.first(cljs.core.next(arglist__7895));
      var more = cljs.core.rest(cljs.core.next(arglist__7895));
      return G__7891__delegate(x, y, more)
    };
    G__7891.cljs$lang$arity$variadic = G__7891__delegate;
    return G__7891
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__7899 = n;
  var xs__7900 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7901 = xs__7900;
      if(and__3822__auto____7901) {
        return n__7899 > 0
      }else {
        return and__3822__auto____7901
      }
    }())) {
      var G__7902 = n__7899 - 1;
      var G__7903 = cljs.core.next.call(null, xs__7900);
      n__7899 = G__7902;
      xs__7900 = G__7903;
      continue
    }else {
      return xs__7900
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__7904__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7905 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__7906 = cljs.core.next.call(null, more);
            sb = G__7905;
            more = G__7906;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__7904 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7904__delegate.call(this, x, ys)
    };
    G__7904.cljs$lang$maxFixedArity = 1;
    G__7904.cljs$lang$applyTo = function(arglist__7907) {
      var x = cljs.core.first(arglist__7907);
      var ys = cljs.core.rest(arglist__7907);
      return G__7904__delegate(x, ys)
    };
    G__7904.cljs$lang$arity$variadic = G__7904__delegate;
    return G__7904
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__7908__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7909 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__7910 = cljs.core.next.call(null, more);
            sb = G__7909;
            more = G__7910;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__7908 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7908__delegate.call(this, x, ys)
    };
    G__7908.cljs$lang$maxFixedArity = 1;
    G__7908.cljs$lang$applyTo = function(arglist__7911) {
      var x = cljs.core.first(arglist__7911);
      var ys = cljs.core.rest(arglist__7911);
      return G__7908__delegate(x, ys)
    };
    G__7908.cljs$lang$arity$variadic = G__7908__delegate;
    return G__7908
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__7912) {
    var fmt = cljs.core.first(arglist__7912);
    var args = cljs.core.rest(arglist__7912);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__7915 = cljs.core.seq.call(null, x);
    var ys__7916 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__7915 == null) {
        return ys__7916 == null
      }else {
        if(ys__7916 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__7915), cljs.core.first.call(null, ys__7916))) {
            var G__7917 = cljs.core.next.call(null, xs__7915);
            var G__7918 = cljs.core.next.call(null, ys__7916);
            xs__7915 = G__7917;
            ys__7916 = G__7918;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__7919_SHARP_, p2__7920_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__7919_SHARP_, cljs.core.hash.call(null, p2__7920_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__7924 = 0;
  var s__7925 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__7925) {
      var e__7926 = cljs.core.first.call(null, s__7925);
      var G__7927 = (h__7924 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__7926)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__7926)))) % 4503599627370496;
      var G__7928 = cljs.core.next.call(null, s__7925);
      h__7924 = G__7927;
      s__7925 = G__7928;
      continue
    }else {
      return h__7924
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__7932 = 0;
  var s__7933 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__7933) {
      var e__7934 = cljs.core.first.call(null, s__7933);
      var G__7935 = (h__7932 + cljs.core.hash.call(null, e__7934)) % 4503599627370496;
      var G__7936 = cljs.core.next.call(null, s__7933);
      h__7932 = G__7935;
      s__7933 = G__7936;
      continue
    }else {
      return h__7932
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__7957__7958 = cljs.core.seq.call(null, fn_map);
  if(G__7957__7958) {
    var G__7960__7962 = cljs.core.first.call(null, G__7957__7958);
    var vec__7961__7963 = G__7960__7962;
    var key_name__7964 = cljs.core.nth.call(null, vec__7961__7963, 0, null);
    var f__7965 = cljs.core.nth.call(null, vec__7961__7963, 1, null);
    var G__7957__7966 = G__7957__7958;
    var G__7960__7967 = G__7960__7962;
    var G__7957__7968 = G__7957__7966;
    while(true) {
      var vec__7969__7970 = G__7960__7967;
      var key_name__7971 = cljs.core.nth.call(null, vec__7969__7970, 0, null);
      var f__7972 = cljs.core.nth.call(null, vec__7969__7970, 1, null);
      var G__7957__7973 = G__7957__7968;
      var str_name__7974 = cljs.core.name.call(null, key_name__7971);
      obj[str_name__7974] = f__7972;
      var temp__3974__auto____7975 = cljs.core.next.call(null, G__7957__7973);
      if(temp__3974__auto____7975) {
        var G__7957__7976 = temp__3974__auto____7975;
        var G__7977 = cljs.core.first.call(null, G__7957__7976);
        var G__7978 = G__7957__7976;
        G__7960__7967 = G__7977;
        G__7957__7968 = G__7978;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7979 = this;
  var h__2192__auto____7980 = this__7979.__hash;
  if(!(h__2192__auto____7980 == null)) {
    return h__2192__auto____7980
  }else {
    var h__2192__auto____7981 = cljs.core.hash_coll.call(null, coll);
    this__7979.__hash = h__2192__auto____7981;
    return h__2192__auto____7981
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7982 = this;
  if(this__7982.count === 1) {
    return null
  }else {
    return this__7982.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7983 = this;
  return new cljs.core.List(this__7983.meta, o, coll, this__7983.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__7984 = this;
  var this__7985 = this;
  return cljs.core.pr_str.call(null, this__7985)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7986 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7987 = this;
  return this__7987.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__7988 = this;
  return this__7988.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__7989 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7990 = this;
  return this__7990.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7991 = this;
  if(this__7991.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__7991.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7992 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7993 = this;
  return new cljs.core.List(meta, this__7993.first, this__7993.rest, this__7993.count, this__7993.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7994 = this;
  return this__7994.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7995 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7996 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7997 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7998 = this;
  return new cljs.core.List(this__7998.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__7999 = this;
  var this__8000 = this;
  return cljs.core.pr_str.call(null, this__8000)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8001 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8002 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8003 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8004 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8005 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8006 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8007 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8008 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8009 = this;
  return this__8009.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8010 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8014__8015 = coll;
  if(G__8014__8015) {
    if(function() {
      var or__3824__auto____8016 = G__8014__8015.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____8016) {
        return or__3824__auto____8016
      }else {
        return G__8014__8015.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8014__8015.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8014__8015)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8014__8015)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8017__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8017 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8017__delegate.call(this, x, y, z, items)
    };
    G__8017.cljs$lang$maxFixedArity = 3;
    G__8017.cljs$lang$applyTo = function(arglist__8018) {
      var x = cljs.core.first(arglist__8018);
      var y = cljs.core.first(cljs.core.next(arglist__8018));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8018)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8018)));
      return G__8017__delegate(x, y, z, items)
    };
    G__8017.cljs$lang$arity$variadic = G__8017__delegate;
    return G__8017
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8019 = this;
  var h__2192__auto____8020 = this__8019.__hash;
  if(!(h__2192__auto____8020 == null)) {
    return h__2192__auto____8020
  }else {
    var h__2192__auto____8021 = cljs.core.hash_coll.call(null, coll);
    this__8019.__hash = h__2192__auto____8021;
    return h__2192__auto____8021
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8022 = this;
  if(this__8022.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8022.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8023 = this;
  return new cljs.core.Cons(null, o, coll, this__8023.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8024 = this;
  var this__8025 = this;
  return cljs.core.pr_str.call(null, this__8025)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8026 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8027 = this;
  return this__8027.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8028 = this;
  if(this__8028.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8028.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8029 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8030 = this;
  return new cljs.core.Cons(meta, this__8030.first, this__8030.rest, this__8030.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8031 = this;
  return this__8031.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8032 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8032.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____8037 = coll == null;
    if(or__3824__auto____8037) {
      return or__3824__auto____8037
    }else {
      var G__8038__8039 = coll;
      if(G__8038__8039) {
        if(function() {
          var or__3824__auto____8040 = G__8038__8039.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8040) {
            return or__3824__auto____8040
          }else {
            return G__8038__8039.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8038__8039.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8038__8039)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8038__8039)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8044__8045 = x;
  if(G__8044__8045) {
    if(function() {
      var or__3824__auto____8046 = G__8044__8045.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____8046) {
        return or__3824__auto____8046
      }else {
        return G__8044__8045.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8044__8045.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8044__8045)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8044__8045)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8047 = null;
  var G__8047__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8047__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8047 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8047__2.call(this, string, f);
      case 3:
        return G__8047__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8047
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8048 = null;
  var G__8048__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8048__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8048 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8048__2.call(this, string, k);
      case 3:
        return G__8048__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8048
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8049 = null;
  var G__8049__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8049__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8049 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8049__2.call(this, string, n);
      case 3:
        return G__8049__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8049
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8061 = null;
  var G__8061__2 = function(this_sym8052, coll) {
    var this__8054 = this;
    var this_sym8052__8055 = this;
    var ___8056 = this_sym8052__8055;
    if(coll == null) {
      return null
    }else {
      var strobj__8057 = coll.strobj;
      if(strobj__8057 == null) {
        return cljs.core._lookup.call(null, coll, this__8054.k, null)
      }else {
        return strobj__8057[this__8054.k]
      }
    }
  };
  var G__8061__3 = function(this_sym8053, coll, not_found) {
    var this__8054 = this;
    var this_sym8053__8058 = this;
    var ___8059 = this_sym8053__8058;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8054.k, not_found)
    }
  };
  G__8061 = function(this_sym8053, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8061__2.call(this, this_sym8053, coll);
      case 3:
        return G__8061__3.call(this, this_sym8053, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8061
}();
cljs.core.Keyword.prototype.apply = function(this_sym8050, args8051) {
  var this__8060 = this;
  return this_sym8050.call.apply(this_sym8050, [this_sym8050].concat(args8051.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8070 = null;
  var G__8070__2 = function(this_sym8064, coll) {
    var this_sym8064__8066 = this;
    var this__8067 = this_sym8064__8066;
    return cljs.core._lookup.call(null, coll, this__8067.toString(), null)
  };
  var G__8070__3 = function(this_sym8065, coll, not_found) {
    var this_sym8065__8068 = this;
    var this__8069 = this_sym8065__8068;
    return cljs.core._lookup.call(null, coll, this__8069.toString(), not_found)
  };
  G__8070 = function(this_sym8065, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8070__2.call(this, this_sym8065, coll);
      case 3:
        return G__8070__3.call(this, this_sym8065, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8070
}();
String.prototype.apply = function(this_sym8062, args8063) {
  return this_sym8062.call.apply(this_sym8062, [this_sym8062].concat(args8063.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8072 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8072
  }else {
    lazy_seq.x = x__8072.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8073 = this;
  var h__2192__auto____8074 = this__8073.__hash;
  if(!(h__2192__auto____8074 == null)) {
    return h__2192__auto____8074
  }else {
    var h__2192__auto____8075 = cljs.core.hash_coll.call(null, coll);
    this__8073.__hash = h__2192__auto____8075;
    return h__2192__auto____8075
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8076 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8077 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8078 = this;
  var this__8079 = this;
  return cljs.core.pr_str.call(null, this__8079)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8080 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8081 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8082 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8083 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8084 = this;
  return new cljs.core.LazySeq(meta, this__8084.realized, this__8084.x, this__8084.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8085 = this;
  return this__8085.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8086 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8086.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8087 = this;
  return this__8087.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8088 = this;
  var ___8089 = this;
  this__8088.buf[this__8088.end] = o;
  return this__8088.end = this__8088.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8090 = this;
  var ___8091 = this;
  var ret__8092 = new cljs.core.ArrayChunk(this__8090.buf, 0, this__8090.end);
  this__8090.buf = null;
  return ret__8092
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8093 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8093.arr[this__8093.off], this__8093.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8094 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8094.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8095 = this;
  if(this__8095.off === this__8095.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8095.arr, this__8095.off + 1, this__8095.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8096 = this;
  return this__8096.arr[this__8096.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8097 = this;
  if(function() {
    var and__3822__auto____8098 = i >= 0;
    if(and__3822__auto____8098) {
      return i < this__8097.end - this__8097.off
    }else {
      return and__3822__auto____8098
    }
  }()) {
    return this__8097.arr[this__8097.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8099 = this;
  return this__8099.end - this__8099.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8100 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8101 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8102 = this;
  return cljs.core._nth.call(null, this__8102.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8103 = this;
  if(cljs.core._count.call(null, this__8103.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8103.chunk), this__8103.more, this__8103.meta)
  }else {
    if(this__8103.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8103.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8104 = this;
  if(this__8104.more == null) {
    return null
  }else {
    return this__8104.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8105 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8106 = this;
  return new cljs.core.ChunkedCons(this__8106.chunk, this__8106.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8107 = this;
  return this__8107.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8108 = this;
  return this__8108.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8109 = this;
  if(this__8109.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8109.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8113__8114 = s;
    if(G__8113__8114) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____8115 = null;
        if(cljs.core.truth_(or__3824__auto____8115)) {
          return or__3824__auto____8115
        }else {
          return G__8113__8114.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8113__8114.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8113__8114)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8113__8114)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8118 = [];
  var s__8119 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8119)) {
      ary__8118.push(cljs.core.first.call(null, s__8119));
      var G__8120 = cljs.core.next.call(null, s__8119);
      s__8119 = G__8120;
      continue
    }else {
      return ary__8118
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8124 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8125 = 0;
  var xs__8126 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8126) {
      ret__8124[i__8125] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8126));
      var G__8127 = i__8125 + 1;
      var G__8128 = cljs.core.next.call(null, xs__8126);
      i__8125 = G__8127;
      xs__8126 = G__8128;
      continue
    }else {
    }
    break
  }
  return ret__8124
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8136 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8137 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8138 = 0;
      var s__8139 = s__8137;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8140 = s__8139;
          if(and__3822__auto____8140) {
            return i__8138 < size
          }else {
            return and__3822__auto____8140
          }
        }())) {
          a__8136[i__8138] = cljs.core.first.call(null, s__8139);
          var G__8143 = i__8138 + 1;
          var G__8144 = cljs.core.next.call(null, s__8139);
          i__8138 = G__8143;
          s__8139 = G__8144;
          continue
        }else {
          return a__8136
        }
        break
      }
    }else {
      var n__2527__auto____8141 = size;
      var i__8142 = 0;
      while(true) {
        if(i__8142 < n__2527__auto____8141) {
          a__8136[i__8142] = init_val_or_seq;
          var G__8145 = i__8142 + 1;
          i__8142 = G__8145;
          continue
        }else {
        }
        break
      }
      return a__8136
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8153 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8154 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8155 = 0;
      var s__8156 = s__8154;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8157 = s__8156;
          if(and__3822__auto____8157) {
            return i__8155 < size
          }else {
            return and__3822__auto____8157
          }
        }())) {
          a__8153[i__8155] = cljs.core.first.call(null, s__8156);
          var G__8160 = i__8155 + 1;
          var G__8161 = cljs.core.next.call(null, s__8156);
          i__8155 = G__8160;
          s__8156 = G__8161;
          continue
        }else {
          return a__8153
        }
        break
      }
    }else {
      var n__2527__auto____8158 = size;
      var i__8159 = 0;
      while(true) {
        if(i__8159 < n__2527__auto____8158) {
          a__8153[i__8159] = init_val_or_seq;
          var G__8162 = i__8159 + 1;
          i__8159 = G__8162;
          continue
        }else {
        }
        break
      }
      return a__8153
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8170 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8171 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8172 = 0;
      var s__8173 = s__8171;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8174 = s__8173;
          if(and__3822__auto____8174) {
            return i__8172 < size
          }else {
            return and__3822__auto____8174
          }
        }())) {
          a__8170[i__8172] = cljs.core.first.call(null, s__8173);
          var G__8177 = i__8172 + 1;
          var G__8178 = cljs.core.next.call(null, s__8173);
          i__8172 = G__8177;
          s__8173 = G__8178;
          continue
        }else {
          return a__8170
        }
        break
      }
    }else {
      var n__2527__auto____8175 = size;
      var i__8176 = 0;
      while(true) {
        if(i__8176 < n__2527__auto____8175) {
          a__8170[i__8176] = init_val_or_seq;
          var G__8179 = i__8176 + 1;
          i__8176 = G__8179;
          continue
        }else {
        }
        break
      }
      return a__8170
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8184 = s;
    var i__8185 = n;
    var sum__8186 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____8187 = i__8185 > 0;
        if(and__3822__auto____8187) {
          return cljs.core.seq.call(null, s__8184)
        }else {
          return and__3822__auto____8187
        }
      }())) {
        var G__8188 = cljs.core.next.call(null, s__8184);
        var G__8189 = i__8185 - 1;
        var G__8190 = sum__8186 + 1;
        s__8184 = G__8188;
        i__8185 = G__8189;
        sum__8186 = G__8190;
        continue
      }else {
        return sum__8186
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8195 = cljs.core.seq.call(null, x);
      if(s__8195) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8195)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8195), concat.call(null, cljs.core.chunk_rest.call(null, s__8195), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8195), concat.call(null, cljs.core.rest.call(null, s__8195), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8199__delegate = function(x, y, zs) {
      var cat__8198 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8197 = cljs.core.seq.call(null, xys);
          if(xys__8197) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8197)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8197), cat.call(null, cljs.core.chunk_rest.call(null, xys__8197), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8197), cat.call(null, cljs.core.rest.call(null, xys__8197), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8198.call(null, concat.call(null, x, y), zs)
    };
    var G__8199 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8199__delegate.call(this, x, y, zs)
    };
    G__8199.cljs$lang$maxFixedArity = 2;
    G__8199.cljs$lang$applyTo = function(arglist__8200) {
      var x = cljs.core.first(arglist__8200);
      var y = cljs.core.first(cljs.core.next(arglist__8200));
      var zs = cljs.core.rest(cljs.core.next(arglist__8200));
      return G__8199__delegate(x, y, zs)
    };
    G__8199.cljs$lang$arity$variadic = G__8199__delegate;
    return G__8199
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8201__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8201 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8201__delegate.call(this, a, b, c, d, more)
    };
    G__8201.cljs$lang$maxFixedArity = 4;
    G__8201.cljs$lang$applyTo = function(arglist__8202) {
      var a = cljs.core.first(arglist__8202);
      var b = cljs.core.first(cljs.core.next(arglist__8202));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8202)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8202))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8202))));
      return G__8201__delegate(a, b, c, d, more)
    };
    G__8201.cljs$lang$arity$variadic = G__8201__delegate;
    return G__8201
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8244 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8245 = cljs.core._first.call(null, args__8244);
    var args__8246 = cljs.core._rest.call(null, args__8244);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8245)
      }else {
        return f.call(null, a__8245)
      }
    }else {
      var b__8247 = cljs.core._first.call(null, args__8246);
      var args__8248 = cljs.core._rest.call(null, args__8246);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8245, b__8247)
        }else {
          return f.call(null, a__8245, b__8247)
        }
      }else {
        var c__8249 = cljs.core._first.call(null, args__8248);
        var args__8250 = cljs.core._rest.call(null, args__8248);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8245, b__8247, c__8249)
          }else {
            return f.call(null, a__8245, b__8247, c__8249)
          }
        }else {
          var d__8251 = cljs.core._first.call(null, args__8250);
          var args__8252 = cljs.core._rest.call(null, args__8250);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8245, b__8247, c__8249, d__8251)
            }else {
              return f.call(null, a__8245, b__8247, c__8249, d__8251)
            }
          }else {
            var e__8253 = cljs.core._first.call(null, args__8252);
            var args__8254 = cljs.core._rest.call(null, args__8252);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8245, b__8247, c__8249, d__8251, e__8253)
              }else {
                return f.call(null, a__8245, b__8247, c__8249, d__8251, e__8253)
              }
            }else {
              var f__8255 = cljs.core._first.call(null, args__8254);
              var args__8256 = cljs.core._rest.call(null, args__8254);
              if(argc === 6) {
                if(f__8255.cljs$lang$arity$6) {
                  return f__8255.cljs$lang$arity$6(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255)
                }else {
                  return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255)
                }
              }else {
                var g__8257 = cljs.core._first.call(null, args__8256);
                var args__8258 = cljs.core._rest.call(null, args__8256);
                if(argc === 7) {
                  if(f__8255.cljs$lang$arity$7) {
                    return f__8255.cljs$lang$arity$7(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257)
                  }else {
                    return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257)
                  }
                }else {
                  var h__8259 = cljs.core._first.call(null, args__8258);
                  var args__8260 = cljs.core._rest.call(null, args__8258);
                  if(argc === 8) {
                    if(f__8255.cljs$lang$arity$8) {
                      return f__8255.cljs$lang$arity$8(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259)
                    }else {
                      return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259)
                    }
                  }else {
                    var i__8261 = cljs.core._first.call(null, args__8260);
                    var args__8262 = cljs.core._rest.call(null, args__8260);
                    if(argc === 9) {
                      if(f__8255.cljs$lang$arity$9) {
                        return f__8255.cljs$lang$arity$9(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261)
                      }else {
                        return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261)
                      }
                    }else {
                      var j__8263 = cljs.core._first.call(null, args__8262);
                      var args__8264 = cljs.core._rest.call(null, args__8262);
                      if(argc === 10) {
                        if(f__8255.cljs$lang$arity$10) {
                          return f__8255.cljs$lang$arity$10(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263)
                        }else {
                          return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263)
                        }
                      }else {
                        var k__8265 = cljs.core._first.call(null, args__8264);
                        var args__8266 = cljs.core._rest.call(null, args__8264);
                        if(argc === 11) {
                          if(f__8255.cljs$lang$arity$11) {
                            return f__8255.cljs$lang$arity$11(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265)
                          }else {
                            return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265)
                          }
                        }else {
                          var l__8267 = cljs.core._first.call(null, args__8266);
                          var args__8268 = cljs.core._rest.call(null, args__8266);
                          if(argc === 12) {
                            if(f__8255.cljs$lang$arity$12) {
                              return f__8255.cljs$lang$arity$12(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267)
                            }else {
                              return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267)
                            }
                          }else {
                            var m__8269 = cljs.core._first.call(null, args__8268);
                            var args__8270 = cljs.core._rest.call(null, args__8268);
                            if(argc === 13) {
                              if(f__8255.cljs$lang$arity$13) {
                                return f__8255.cljs$lang$arity$13(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269)
                              }else {
                                return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269)
                              }
                            }else {
                              var n__8271 = cljs.core._first.call(null, args__8270);
                              var args__8272 = cljs.core._rest.call(null, args__8270);
                              if(argc === 14) {
                                if(f__8255.cljs$lang$arity$14) {
                                  return f__8255.cljs$lang$arity$14(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271)
                                }else {
                                  return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271)
                                }
                              }else {
                                var o__8273 = cljs.core._first.call(null, args__8272);
                                var args__8274 = cljs.core._rest.call(null, args__8272);
                                if(argc === 15) {
                                  if(f__8255.cljs$lang$arity$15) {
                                    return f__8255.cljs$lang$arity$15(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273)
                                  }else {
                                    return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273)
                                  }
                                }else {
                                  var p__8275 = cljs.core._first.call(null, args__8274);
                                  var args__8276 = cljs.core._rest.call(null, args__8274);
                                  if(argc === 16) {
                                    if(f__8255.cljs$lang$arity$16) {
                                      return f__8255.cljs$lang$arity$16(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273, p__8275)
                                    }else {
                                      return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273, p__8275)
                                    }
                                  }else {
                                    var q__8277 = cljs.core._first.call(null, args__8276);
                                    var args__8278 = cljs.core._rest.call(null, args__8276);
                                    if(argc === 17) {
                                      if(f__8255.cljs$lang$arity$17) {
                                        return f__8255.cljs$lang$arity$17(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273, p__8275, q__8277)
                                      }else {
                                        return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273, p__8275, q__8277)
                                      }
                                    }else {
                                      var r__8279 = cljs.core._first.call(null, args__8278);
                                      var args__8280 = cljs.core._rest.call(null, args__8278);
                                      if(argc === 18) {
                                        if(f__8255.cljs$lang$arity$18) {
                                          return f__8255.cljs$lang$arity$18(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273, p__8275, q__8277, r__8279)
                                        }else {
                                          return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273, p__8275, q__8277, r__8279)
                                        }
                                      }else {
                                        var s__8281 = cljs.core._first.call(null, args__8280);
                                        var args__8282 = cljs.core._rest.call(null, args__8280);
                                        if(argc === 19) {
                                          if(f__8255.cljs$lang$arity$19) {
                                            return f__8255.cljs$lang$arity$19(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273, p__8275, q__8277, r__8279, s__8281)
                                          }else {
                                            return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273, p__8275, q__8277, r__8279, s__8281)
                                          }
                                        }else {
                                          var t__8283 = cljs.core._first.call(null, args__8282);
                                          var args__8284 = cljs.core._rest.call(null, args__8282);
                                          if(argc === 20) {
                                            if(f__8255.cljs$lang$arity$20) {
                                              return f__8255.cljs$lang$arity$20(a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273, p__8275, q__8277, r__8279, s__8281, t__8283)
                                            }else {
                                              return f__8255.call(null, a__8245, b__8247, c__8249, d__8251, e__8253, f__8255, g__8257, h__8259, i__8261, j__8263, k__8265, l__8267, m__8269, n__8271, o__8273, p__8275, q__8277, r__8279, s__8281, t__8283)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8299 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8300 = cljs.core.bounded_count.call(null, args, fixed_arity__8299 + 1);
      if(bc__8300 <= fixed_arity__8299) {
        return cljs.core.apply_to.call(null, f, bc__8300, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8301 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8302 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8303 = cljs.core.bounded_count.call(null, arglist__8301, fixed_arity__8302 + 1);
      if(bc__8303 <= fixed_arity__8302) {
        return cljs.core.apply_to.call(null, f, bc__8303, arglist__8301)
      }else {
        return f.cljs$lang$applyTo(arglist__8301)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8301))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8304 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8305 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8306 = cljs.core.bounded_count.call(null, arglist__8304, fixed_arity__8305 + 1);
      if(bc__8306 <= fixed_arity__8305) {
        return cljs.core.apply_to.call(null, f, bc__8306, arglist__8304)
      }else {
        return f.cljs$lang$applyTo(arglist__8304)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8304))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8307 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8308 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8309 = cljs.core.bounded_count.call(null, arglist__8307, fixed_arity__8308 + 1);
      if(bc__8309 <= fixed_arity__8308) {
        return cljs.core.apply_to.call(null, f, bc__8309, arglist__8307)
      }else {
        return f.cljs$lang$applyTo(arglist__8307)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8307))
    }
  };
  var apply__6 = function() {
    var G__8313__delegate = function(f, a, b, c, d, args) {
      var arglist__8310 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8311 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__8312 = cljs.core.bounded_count.call(null, arglist__8310, fixed_arity__8311 + 1);
        if(bc__8312 <= fixed_arity__8311) {
          return cljs.core.apply_to.call(null, f, bc__8312, arglist__8310)
        }else {
          return f.cljs$lang$applyTo(arglist__8310)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8310))
      }
    };
    var G__8313 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8313__delegate.call(this, f, a, b, c, d, args)
    };
    G__8313.cljs$lang$maxFixedArity = 5;
    G__8313.cljs$lang$applyTo = function(arglist__8314) {
      var f = cljs.core.first(arglist__8314);
      var a = cljs.core.first(cljs.core.next(arglist__8314));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8314)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8314))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8314)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8314)))));
      return G__8313__delegate(f, a, b, c, d, args)
    };
    G__8313.cljs$lang$arity$variadic = G__8313__delegate;
    return G__8313
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8315) {
    var obj = cljs.core.first(arglist__8315);
    var f = cljs.core.first(cljs.core.next(arglist__8315));
    var args = cljs.core.rest(cljs.core.next(arglist__8315));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8316__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8316 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8316__delegate.call(this, x, y, more)
    };
    G__8316.cljs$lang$maxFixedArity = 2;
    G__8316.cljs$lang$applyTo = function(arglist__8317) {
      var x = cljs.core.first(arglist__8317);
      var y = cljs.core.first(cljs.core.next(arglist__8317));
      var more = cljs.core.rest(cljs.core.next(arglist__8317));
      return G__8316__delegate(x, y, more)
    };
    G__8316.cljs$lang$arity$variadic = G__8316__delegate;
    return G__8316
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8318 = pred;
        var G__8319 = cljs.core.next.call(null, coll);
        pred = G__8318;
        coll = G__8319;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____8321 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____8321)) {
        return or__3824__auto____8321
      }else {
        var G__8322 = pred;
        var G__8323 = cljs.core.next.call(null, coll);
        pred = G__8322;
        coll = G__8323;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8324 = null;
    var G__8324__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8324__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8324__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8324__3 = function() {
      var G__8325__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8325 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8325__delegate.call(this, x, y, zs)
      };
      G__8325.cljs$lang$maxFixedArity = 2;
      G__8325.cljs$lang$applyTo = function(arglist__8326) {
        var x = cljs.core.first(arglist__8326);
        var y = cljs.core.first(cljs.core.next(arglist__8326));
        var zs = cljs.core.rest(cljs.core.next(arglist__8326));
        return G__8325__delegate(x, y, zs)
      };
      G__8325.cljs$lang$arity$variadic = G__8325__delegate;
      return G__8325
    }();
    G__8324 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8324__0.call(this);
        case 1:
          return G__8324__1.call(this, x);
        case 2:
          return G__8324__2.call(this, x, y);
        default:
          return G__8324__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8324.cljs$lang$maxFixedArity = 2;
    G__8324.cljs$lang$applyTo = G__8324__3.cljs$lang$applyTo;
    return G__8324
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8327__delegate = function(args) {
      return x
    };
    var G__8327 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8327__delegate.call(this, args)
    };
    G__8327.cljs$lang$maxFixedArity = 0;
    G__8327.cljs$lang$applyTo = function(arglist__8328) {
      var args = cljs.core.seq(arglist__8328);
      return G__8327__delegate(args)
    };
    G__8327.cljs$lang$arity$variadic = G__8327__delegate;
    return G__8327
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8335 = null;
      var G__8335__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8335__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8335__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8335__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8335__4 = function() {
        var G__8336__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8336 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8336__delegate.call(this, x, y, z, args)
        };
        G__8336.cljs$lang$maxFixedArity = 3;
        G__8336.cljs$lang$applyTo = function(arglist__8337) {
          var x = cljs.core.first(arglist__8337);
          var y = cljs.core.first(cljs.core.next(arglist__8337));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8337)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8337)));
          return G__8336__delegate(x, y, z, args)
        };
        G__8336.cljs$lang$arity$variadic = G__8336__delegate;
        return G__8336
      }();
      G__8335 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8335__0.call(this);
          case 1:
            return G__8335__1.call(this, x);
          case 2:
            return G__8335__2.call(this, x, y);
          case 3:
            return G__8335__3.call(this, x, y, z);
          default:
            return G__8335__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8335.cljs$lang$maxFixedArity = 3;
      G__8335.cljs$lang$applyTo = G__8335__4.cljs$lang$applyTo;
      return G__8335
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8338 = null;
      var G__8338__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8338__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8338__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8338__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8338__4 = function() {
        var G__8339__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8339 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8339__delegate.call(this, x, y, z, args)
        };
        G__8339.cljs$lang$maxFixedArity = 3;
        G__8339.cljs$lang$applyTo = function(arglist__8340) {
          var x = cljs.core.first(arglist__8340);
          var y = cljs.core.first(cljs.core.next(arglist__8340));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8340)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8340)));
          return G__8339__delegate(x, y, z, args)
        };
        G__8339.cljs$lang$arity$variadic = G__8339__delegate;
        return G__8339
      }();
      G__8338 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8338__0.call(this);
          case 1:
            return G__8338__1.call(this, x);
          case 2:
            return G__8338__2.call(this, x, y);
          case 3:
            return G__8338__3.call(this, x, y, z);
          default:
            return G__8338__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8338.cljs$lang$maxFixedArity = 3;
      G__8338.cljs$lang$applyTo = G__8338__4.cljs$lang$applyTo;
      return G__8338
    }()
  };
  var comp__4 = function() {
    var G__8341__delegate = function(f1, f2, f3, fs) {
      var fs__8332 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8342__delegate = function(args) {
          var ret__8333 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8332), args);
          var fs__8334 = cljs.core.next.call(null, fs__8332);
          while(true) {
            if(fs__8334) {
              var G__8343 = cljs.core.first.call(null, fs__8334).call(null, ret__8333);
              var G__8344 = cljs.core.next.call(null, fs__8334);
              ret__8333 = G__8343;
              fs__8334 = G__8344;
              continue
            }else {
              return ret__8333
            }
            break
          }
        };
        var G__8342 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8342__delegate.call(this, args)
        };
        G__8342.cljs$lang$maxFixedArity = 0;
        G__8342.cljs$lang$applyTo = function(arglist__8345) {
          var args = cljs.core.seq(arglist__8345);
          return G__8342__delegate(args)
        };
        G__8342.cljs$lang$arity$variadic = G__8342__delegate;
        return G__8342
      }()
    };
    var G__8341 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8341__delegate.call(this, f1, f2, f3, fs)
    };
    G__8341.cljs$lang$maxFixedArity = 3;
    G__8341.cljs$lang$applyTo = function(arglist__8346) {
      var f1 = cljs.core.first(arglist__8346);
      var f2 = cljs.core.first(cljs.core.next(arglist__8346));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8346)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8346)));
      return G__8341__delegate(f1, f2, f3, fs)
    };
    G__8341.cljs$lang$arity$variadic = G__8341__delegate;
    return G__8341
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8347__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8347 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8347__delegate.call(this, args)
      };
      G__8347.cljs$lang$maxFixedArity = 0;
      G__8347.cljs$lang$applyTo = function(arglist__8348) {
        var args = cljs.core.seq(arglist__8348);
        return G__8347__delegate(args)
      };
      G__8347.cljs$lang$arity$variadic = G__8347__delegate;
      return G__8347
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8349__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8349 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8349__delegate.call(this, args)
      };
      G__8349.cljs$lang$maxFixedArity = 0;
      G__8349.cljs$lang$applyTo = function(arglist__8350) {
        var args = cljs.core.seq(arglist__8350);
        return G__8349__delegate(args)
      };
      G__8349.cljs$lang$arity$variadic = G__8349__delegate;
      return G__8349
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__8351__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__8351 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8351__delegate.call(this, args)
      };
      G__8351.cljs$lang$maxFixedArity = 0;
      G__8351.cljs$lang$applyTo = function(arglist__8352) {
        var args = cljs.core.seq(arglist__8352);
        return G__8351__delegate(args)
      };
      G__8351.cljs$lang$arity$variadic = G__8351__delegate;
      return G__8351
    }()
  };
  var partial__5 = function() {
    var G__8353__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__8354__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__8354 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8354__delegate.call(this, args)
        };
        G__8354.cljs$lang$maxFixedArity = 0;
        G__8354.cljs$lang$applyTo = function(arglist__8355) {
          var args = cljs.core.seq(arglist__8355);
          return G__8354__delegate(args)
        };
        G__8354.cljs$lang$arity$variadic = G__8354__delegate;
        return G__8354
      }()
    };
    var G__8353 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8353__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__8353.cljs$lang$maxFixedArity = 4;
    G__8353.cljs$lang$applyTo = function(arglist__8356) {
      var f = cljs.core.first(arglist__8356);
      var arg1 = cljs.core.first(cljs.core.next(arglist__8356));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8356)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8356))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8356))));
      return G__8353__delegate(f, arg1, arg2, arg3, more)
    };
    G__8353.cljs$lang$arity$variadic = G__8353__delegate;
    return G__8353
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__8357 = null;
      var G__8357__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__8357__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__8357__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__8357__4 = function() {
        var G__8358__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__8358 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8358__delegate.call(this, a, b, c, ds)
        };
        G__8358.cljs$lang$maxFixedArity = 3;
        G__8358.cljs$lang$applyTo = function(arglist__8359) {
          var a = cljs.core.first(arglist__8359);
          var b = cljs.core.first(cljs.core.next(arglist__8359));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8359)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8359)));
          return G__8358__delegate(a, b, c, ds)
        };
        G__8358.cljs$lang$arity$variadic = G__8358__delegate;
        return G__8358
      }();
      G__8357 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__8357__1.call(this, a);
          case 2:
            return G__8357__2.call(this, a, b);
          case 3:
            return G__8357__3.call(this, a, b, c);
          default:
            return G__8357__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8357.cljs$lang$maxFixedArity = 3;
      G__8357.cljs$lang$applyTo = G__8357__4.cljs$lang$applyTo;
      return G__8357
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__8360 = null;
      var G__8360__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8360__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__8360__4 = function() {
        var G__8361__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__8361 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8361__delegate.call(this, a, b, c, ds)
        };
        G__8361.cljs$lang$maxFixedArity = 3;
        G__8361.cljs$lang$applyTo = function(arglist__8362) {
          var a = cljs.core.first(arglist__8362);
          var b = cljs.core.first(cljs.core.next(arglist__8362));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8362)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8362)));
          return G__8361__delegate(a, b, c, ds)
        };
        G__8361.cljs$lang$arity$variadic = G__8361__delegate;
        return G__8361
      }();
      G__8360 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8360__2.call(this, a, b);
          case 3:
            return G__8360__3.call(this, a, b, c);
          default:
            return G__8360__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8360.cljs$lang$maxFixedArity = 3;
      G__8360.cljs$lang$applyTo = G__8360__4.cljs$lang$applyTo;
      return G__8360
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__8363 = null;
      var G__8363__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8363__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__8363__4 = function() {
        var G__8364__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__8364 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8364__delegate.call(this, a, b, c, ds)
        };
        G__8364.cljs$lang$maxFixedArity = 3;
        G__8364.cljs$lang$applyTo = function(arglist__8365) {
          var a = cljs.core.first(arglist__8365);
          var b = cljs.core.first(cljs.core.next(arglist__8365));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8365)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8365)));
          return G__8364__delegate(a, b, c, ds)
        };
        G__8364.cljs$lang$arity$variadic = G__8364__delegate;
        return G__8364
      }();
      G__8363 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8363__2.call(this, a, b);
          case 3:
            return G__8363__3.call(this, a, b, c);
          default:
            return G__8363__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8363.cljs$lang$maxFixedArity = 3;
      G__8363.cljs$lang$applyTo = G__8363__4.cljs$lang$applyTo;
      return G__8363
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__8381 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8389 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8389) {
        var s__8390 = temp__3974__auto____8389;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8390)) {
          var c__8391 = cljs.core.chunk_first.call(null, s__8390);
          var size__8392 = cljs.core.count.call(null, c__8391);
          var b__8393 = cljs.core.chunk_buffer.call(null, size__8392);
          var n__2527__auto____8394 = size__8392;
          var i__8395 = 0;
          while(true) {
            if(i__8395 < n__2527__auto____8394) {
              cljs.core.chunk_append.call(null, b__8393, f.call(null, idx + i__8395, cljs.core._nth.call(null, c__8391, i__8395)));
              var G__8396 = i__8395 + 1;
              i__8395 = G__8396;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8393), mapi.call(null, idx + size__8392, cljs.core.chunk_rest.call(null, s__8390)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__8390)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__8390)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__8381.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8406 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8406) {
      var s__8407 = temp__3974__auto____8406;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8407)) {
        var c__8408 = cljs.core.chunk_first.call(null, s__8407);
        var size__8409 = cljs.core.count.call(null, c__8408);
        var b__8410 = cljs.core.chunk_buffer.call(null, size__8409);
        var n__2527__auto____8411 = size__8409;
        var i__8412 = 0;
        while(true) {
          if(i__8412 < n__2527__auto____8411) {
            var x__8413 = f.call(null, cljs.core._nth.call(null, c__8408, i__8412));
            if(x__8413 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__8410, x__8413)
            }
            var G__8415 = i__8412 + 1;
            i__8412 = G__8415;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8410), keep.call(null, f, cljs.core.chunk_rest.call(null, s__8407)))
      }else {
        var x__8414 = f.call(null, cljs.core.first.call(null, s__8407));
        if(x__8414 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__8407))
        }else {
          return cljs.core.cons.call(null, x__8414, keep.call(null, f, cljs.core.rest.call(null, s__8407)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__8441 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8451 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8451) {
        var s__8452 = temp__3974__auto____8451;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8452)) {
          var c__8453 = cljs.core.chunk_first.call(null, s__8452);
          var size__8454 = cljs.core.count.call(null, c__8453);
          var b__8455 = cljs.core.chunk_buffer.call(null, size__8454);
          var n__2527__auto____8456 = size__8454;
          var i__8457 = 0;
          while(true) {
            if(i__8457 < n__2527__auto____8456) {
              var x__8458 = f.call(null, idx + i__8457, cljs.core._nth.call(null, c__8453, i__8457));
              if(x__8458 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__8455, x__8458)
              }
              var G__8460 = i__8457 + 1;
              i__8457 = G__8460;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8455), keepi.call(null, idx + size__8454, cljs.core.chunk_rest.call(null, s__8452)))
        }else {
          var x__8459 = f.call(null, idx, cljs.core.first.call(null, s__8452));
          if(x__8459 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8452))
          }else {
            return cljs.core.cons.call(null, x__8459, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8452)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__8441.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8546 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8546)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____8546
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8547 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8547)) {
            var and__3822__auto____8548 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8548)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____8548
            }
          }else {
            return and__3822__auto____8547
          }
        }())
      };
      var ep1__4 = function() {
        var G__8617__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8549 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8549)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____8549
            }
          }())
        };
        var G__8617 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8617__delegate.call(this, x, y, z, args)
        };
        G__8617.cljs$lang$maxFixedArity = 3;
        G__8617.cljs$lang$applyTo = function(arglist__8618) {
          var x = cljs.core.first(arglist__8618);
          var y = cljs.core.first(cljs.core.next(arglist__8618));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8618)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8618)));
          return G__8617__delegate(x, y, z, args)
        };
        G__8617.cljs$lang$arity$variadic = G__8617__delegate;
        return G__8617
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8561 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8561)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____8561
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8562 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8562)) {
            var and__3822__auto____8563 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8563)) {
              var and__3822__auto____8564 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8564)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____8564
              }
            }else {
              return and__3822__auto____8563
            }
          }else {
            return and__3822__auto____8562
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8565 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8565)) {
            var and__3822__auto____8566 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8566)) {
              var and__3822__auto____8567 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____8567)) {
                var and__3822__auto____8568 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____8568)) {
                  var and__3822__auto____8569 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8569)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____8569
                  }
                }else {
                  return and__3822__auto____8568
                }
              }else {
                return and__3822__auto____8567
              }
            }else {
              return and__3822__auto____8566
            }
          }else {
            return and__3822__auto____8565
          }
        }())
      };
      var ep2__4 = function() {
        var G__8619__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8570 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8570)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8416_SHARP_) {
                var and__3822__auto____8571 = p1.call(null, p1__8416_SHARP_);
                if(cljs.core.truth_(and__3822__auto____8571)) {
                  return p2.call(null, p1__8416_SHARP_)
                }else {
                  return and__3822__auto____8571
                }
              }, args)
            }else {
              return and__3822__auto____8570
            }
          }())
        };
        var G__8619 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8619__delegate.call(this, x, y, z, args)
        };
        G__8619.cljs$lang$maxFixedArity = 3;
        G__8619.cljs$lang$applyTo = function(arglist__8620) {
          var x = cljs.core.first(arglist__8620);
          var y = cljs.core.first(cljs.core.next(arglist__8620));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8620)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8620)));
          return G__8619__delegate(x, y, z, args)
        };
        G__8619.cljs$lang$arity$variadic = G__8619__delegate;
        return G__8619
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8590 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8590)) {
            var and__3822__auto____8591 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8591)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____8591
            }
          }else {
            return and__3822__auto____8590
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8592 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8592)) {
            var and__3822__auto____8593 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8593)) {
              var and__3822__auto____8594 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8594)) {
                var and__3822__auto____8595 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____8595)) {
                  var and__3822__auto____8596 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8596)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____8596
                  }
                }else {
                  return and__3822__auto____8595
                }
              }else {
                return and__3822__auto____8594
              }
            }else {
              return and__3822__auto____8593
            }
          }else {
            return and__3822__auto____8592
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8597 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8597)) {
            var and__3822__auto____8598 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8598)) {
              var and__3822__auto____8599 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8599)) {
                var and__3822__auto____8600 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____8600)) {
                  var and__3822__auto____8601 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8601)) {
                    var and__3822__auto____8602 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____8602)) {
                      var and__3822__auto____8603 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____8603)) {
                        var and__3822__auto____8604 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____8604)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____8604
                        }
                      }else {
                        return and__3822__auto____8603
                      }
                    }else {
                      return and__3822__auto____8602
                    }
                  }else {
                    return and__3822__auto____8601
                  }
                }else {
                  return and__3822__auto____8600
                }
              }else {
                return and__3822__auto____8599
              }
            }else {
              return and__3822__auto____8598
            }
          }else {
            return and__3822__auto____8597
          }
        }())
      };
      var ep3__4 = function() {
        var G__8621__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8605 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8605)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8417_SHARP_) {
                var and__3822__auto____8606 = p1.call(null, p1__8417_SHARP_);
                if(cljs.core.truth_(and__3822__auto____8606)) {
                  var and__3822__auto____8607 = p2.call(null, p1__8417_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____8607)) {
                    return p3.call(null, p1__8417_SHARP_)
                  }else {
                    return and__3822__auto____8607
                  }
                }else {
                  return and__3822__auto____8606
                }
              }, args)
            }else {
              return and__3822__auto____8605
            }
          }())
        };
        var G__8621 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8621__delegate.call(this, x, y, z, args)
        };
        G__8621.cljs$lang$maxFixedArity = 3;
        G__8621.cljs$lang$applyTo = function(arglist__8622) {
          var x = cljs.core.first(arglist__8622);
          var y = cljs.core.first(cljs.core.next(arglist__8622));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8622)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8622)));
          return G__8621__delegate(x, y, z, args)
        };
        G__8621.cljs$lang$arity$variadic = G__8621__delegate;
        return G__8621
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__8623__delegate = function(p1, p2, p3, ps) {
      var ps__8608 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__8418_SHARP_) {
            return p1__8418_SHARP_.call(null, x)
          }, ps__8608)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__8419_SHARP_) {
            var and__3822__auto____8613 = p1__8419_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8613)) {
              return p1__8419_SHARP_.call(null, y)
            }else {
              return and__3822__auto____8613
            }
          }, ps__8608)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__8420_SHARP_) {
            var and__3822__auto____8614 = p1__8420_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8614)) {
              var and__3822__auto____8615 = p1__8420_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____8615)) {
                return p1__8420_SHARP_.call(null, z)
              }else {
                return and__3822__auto____8615
              }
            }else {
              return and__3822__auto____8614
            }
          }, ps__8608)
        };
        var epn__4 = function() {
          var G__8624__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____8616 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____8616)) {
                return cljs.core.every_QMARK_.call(null, function(p1__8421_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__8421_SHARP_, args)
                }, ps__8608)
              }else {
                return and__3822__auto____8616
              }
            }())
          };
          var G__8624 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__8624__delegate.call(this, x, y, z, args)
          };
          G__8624.cljs$lang$maxFixedArity = 3;
          G__8624.cljs$lang$applyTo = function(arglist__8625) {
            var x = cljs.core.first(arglist__8625);
            var y = cljs.core.first(cljs.core.next(arglist__8625));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8625)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8625)));
            return G__8624__delegate(x, y, z, args)
          };
          G__8624.cljs$lang$arity$variadic = G__8624__delegate;
          return G__8624
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__8623 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8623__delegate.call(this, p1, p2, p3, ps)
    };
    G__8623.cljs$lang$maxFixedArity = 3;
    G__8623.cljs$lang$applyTo = function(arglist__8626) {
      var p1 = cljs.core.first(arglist__8626);
      var p2 = cljs.core.first(cljs.core.next(arglist__8626));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8626)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8626)));
      return G__8623__delegate(p1, p2, p3, ps)
    };
    G__8623.cljs$lang$arity$variadic = G__8623__delegate;
    return G__8623
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____8707 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8707)) {
          return or__3824__auto____8707
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____8708 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8708)) {
          return or__3824__auto____8708
        }else {
          var or__3824__auto____8709 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8709)) {
            return or__3824__auto____8709
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__8778__delegate = function(x, y, z, args) {
          var or__3824__auto____8710 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8710)) {
            return or__3824__auto____8710
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__8778 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8778__delegate.call(this, x, y, z, args)
        };
        G__8778.cljs$lang$maxFixedArity = 3;
        G__8778.cljs$lang$applyTo = function(arglist__8779) {
          var x = cljs.core.first(arglist__8779);
          var y = cljs.core.first(cljs.core.next(arglist__8779));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8779)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8779)));
          return G__8778__delegate(x, y, z, args)
        };
        G__8778.cljs$lang$arity$variadic = G__8778__delegate;
        return G__8778
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____8722 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8722)) {
          return or__3824__auto____8722
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____8723 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8723)) {
          return or__3824__auto____8723
        }else {
          var or__3824__auto____8724 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8724)) {
            return or__3824__auto____8724
          }else {
            var or__3824__auto____8725 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8725)) {
              return or__3824__auto____8725
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____8726 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8726)) {
          return or__3824__auto____8726
        }else {
          var or__3824__auto____8727 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8727)) {
            return or__3824__auto____8727
          }else {
            var or__3824__auto____8728 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____8728)) {
              return or__3824__auto____8728
            }else {
              var or__3824__auto____8729 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____8729)) {
                return or__3824__auto____8729
              }else {
                var or__3824__auto____8730 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8730)) {
                  return or__3824__auto____8730
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__8780__delegate = function(x, y, z, args) {
          var or__3824__auto____8731 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8731)) {
            return or__3824__auto____8731
          }else {
            return cljs.core.some.call(null, function(p1__8461_SHARP_) {
              var or__3824__auto____8732 = p1.call(null, p1__8461_SHARP_);
              if(cljs.core.truth_(or__3824__auto____8732)) {
                return or__3824__auto____8732
              }else {
                return p2.call(null, p1__8461_SHARP_)
              }
            }, args)
          }
        };
        var G__8780 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8780__delegate.call(this, x, y, z, args)
        };
        G__8780.cljs$lang$maxFixedArity = 3;
        G__8780.cljs$lang$applyTo = function(arglist__8781) {
          var x = cljs.core.first(arglist__8781);
          var y = cljs.core.first(cljs.core.next(arglist__8781));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8781)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8781)));
          return G__8780__delegate(x, y, z, args)
        };
        G__8780.cljs$lang$arity$variadic = G__8780__delegate;
        return G__8780
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____8751 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8751)) {
          return or__3824__auto____8751
        }else {
          var or__3824__auto____8752 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8752)) {
            return or__3824__auto____8752
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____8753 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8753)) {
          return or__3824__auto____8753
        }else {
          var or__3824__auto____8754 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8754)) {
            return or__3824__auto____8754
          }else {
            var or__3824__auto____8755 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8755)) {
              return or__3824__auto____8755
            }else {
              var or__3824__auto____8756 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8756)) {
                return or__3824__auto____8756
              }else {
                var or__3824__auto____8757 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8757)) {
                  return or__3824__auto____8757
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____8758 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8758)) {
          return or__3824__auto____8758
        }else {
          var or__3824__auto____8759 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8759)) {
            return or__3824__auto____8759
          }else {
            var or__3824__auto____8760 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8760)) {
              return or__3824__auto____8760
            }else {
              var or__3824__auto____8761 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8761)) {
                return or__3824__auto____8761
              }else {
                var or__3824__auto____8762 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8762)) {
                  return or__3824__auto____8762
                }else {
                  var or__3824__auto____8763 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____8763)) {
                    return or__3824__auto____8763
                  }else {
                    var or__3824__auto____8764 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____8764)) {
                      return or__3824__auto____8764
                    }else {
                      var or__3824__auto____8765 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____8765)) {
                        return or__3824__auto____8765
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__8782__delegate = function(x, y, z, args) {
          var or__3824__auto____8766 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8766)) {
            return or__3824__auto____8766
          }else {
            return cljs.core.some.call(null, function(p1__8462_SHARP_) {
              var or__3824__auto____8767 = p1.call(null, p1__8462_SHARP_);
              if(cljs.core.truth_(or__3824__auto____8767)) {
                return or__3824__auto____8767
              }else {
                var or__3824__auto____8768 = p2.call(null, p1__8462_SHARP_);
                if(cljs.core.truth_(or__3824__auto____8768)) {
                  return or__3824__auto____8768
                }else {
                  return p3.call(null, p1__8462_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__8782 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8782__delegate.call(this, x, y, z, args)
        };
        G__8782.cljs$lang$maxFixedArity = 3;
        G__8782.cljs$lang$applyTo = function(arglist__8783) {
          var x = cljs.core.first(arglist__8783);
          var y = cljs.core.first(cljs.core.next(arglist__8783));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8783)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8783)));
          return G__8782__delegate(x, y, z, args)
        };
        G__8782.cljs$lang$arity$variadic = G__8782__delegate;
        return G__8782
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__8784__delegate = function(p1, p2, p3, ps) {
      var ps__8769 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__8463_SHARP_) {
            return p1__8463_SHARP_.call(null, x)
          }, ps__8769)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__8464_SHARP_) {
            var or__3824__auto____8774 = p1__8464_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8774)) {
              return or__3824__auto____8774
            }else {
              return p1__8464_SHARP_.call(null, y)
            }
          }, ps__8769)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__8465_SHARP_) {
            var or__3824__auto____8775 = p1__8465_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8775)) {
              return or__3824__auto____8775
            }else {
              var or__3824__auto____8776 = p1__8465_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8776)) {
                return or__3824__auto____8776
              }else {
                return p1__8465_SHARP_.call(null, z)
              }
            }
          }, ps__8769)
        };
        var spn__4 = function() {
          var G__8785__delegate = function(x, y, z, args) {
            var or__3824__auto____8777 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____8777)) {
              return or__3824__auto____8777
            }else {
              return cljs.core.some.call(null, function(p1__8466_SHARP_) {
                return cljs.core.some.call(null, p1__8466_SHARP_, args)
              }, ps__8769)
            }
          };
          var G__8785 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__8785__delegate.call(this, x, y, z, args)
          };
          G__8785.cljs$lang$maxFixedArity = 3;
          G__8785.cljs$lang$applyTo = function(arglist__8786) {
            var x = cljs.core.first(arglist__8786);
            var y = cljs.core.first(cljs.core.next(arglist__8786));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8786)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8786)));
            return G__8785__delegate(x, y, z, args)
          };
          G__8785.cljs$lang$arity$variadic = G__8785__delegate;
          return G__8785
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__8784 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8784__delegate.call(this, p1, p2, p3, ps)
    };
    G__8784.cljs$lang$maxFixedArity = 3;
    G__8784.cljs$lang$applyTo = function(arglist__8787) {
      var p1 = cljs.core.first(arglist__8787);
      var p2 = cljs.core.first(cljs.core.next(arglist__8787));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8787)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8787)));
      return G__8784__delegate(p1, p2, p3, ps)
    };
    G__8784.cljs$lang$arity$variadic = G__8784__delegate;
    return G__8784
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8806 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8806) {
        var s__8807 = temp__3974__auto____8806;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8807)) {
          var c__8808 = cljs.core.chunk_first.call(null, s__8807);
          var size__8809 = cljs.core.count.call(null, c__8808);
          var b__8810 = cljs.core.chunk_buffer.call(null, size__8809);
          var n__2527__auto____8811 = size__8809;
          var i__8812 = 0;
          while(true) {
            if(i__8812 < n__2527__auto____8811) {
              cljs.core.chunk_append.call(null, b__8810, f.call(null, cljs.core._nth.call(null, c__8808, i__8812)));
              var G__8824 = i__8812 + 1;
              i__8812 = G__8824;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8810), map.call(null, f, cljs.core.chunk_rest.call(null, s__8807)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__8807)), map.call(null, f, cljs.core.rest.call(null, s__8807)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8813 = cljs.core.seq.call(null, c1);
      var s2__8814 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____8815 = s1__8813;
        if(and__3822__auto____8815) {
          return s2__8814
        }else {
          return and__3822__auto____8815
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__8813), cljs.core.first.call(null, s2__8814)), map.call(null, f, cljs.core.rest.call(null, s1__8813), cljs.core.rest.call(null, s2__8814)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8816 = cljs.core.seq.call(null, c1);
      var s2__8817 = cljs.core.seq.call(null, c2);
      var s3__8818 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____8819 = s1__8816;
        if(and__3822__auto____8819) {
          var and__3822__auto____8820 = s2__8817;
          if(and__3822__auto____8820) {
            return s3__8818
          }else {
            return and__3822__auto____8820
          }
        }else {
          return and__3822__auto____8819
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__8816), cljs.core.first.call(null, s2__8817), cljs.core.first.call(null, s3__8818)), map.call(null, f, cljs.core.rest.call(null, s1__8816), cljs.core.rest.call(null, s2__8817), cljs.core.rest.call(null, s3__8818)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__8825__delegate = function(f, c1, c2, c3, colls) {
      var step__8823 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__8822 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__8822)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__8822), step.call(null, map.call(null, cljs.core.rest, ss__8822)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__8627_SHARP_) {
        return cljs.core.apply.call(null, f, p1__8627_SHARP_)
      }, step__8823.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__8825 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8825__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__8825.cljs$lang$maxFixedArity = 4;
    G__8825.cljs$lang$applyTo = function(arglist__8826) {
      var f = cljs.core.first(arglist__8826);
      var c1 = cljs.core.first(cljs.core.next(arglist__8826));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8826)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8826))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8826))));
      return G__8825__delegate(f, c1, c2, c3, colls)
    };
    G__8825.cljs$lang$arity$variadic = G__8825__delegate;
    return G__8825
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____8829 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8829) {
        var s__8830 = temp__3974__auto____8829;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__8830), take.call(null, n - 1, cljs.core.rest.call(null, s__8830)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__8836 = function(n, coll) {
    while(true) {
      var s__8834 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____8835 = n > 0;
        if(and__3822__auto____8835) {
          return s__8834
        }else {
          return and__3822__auto____8835
        }
      }())) {
        var G__8837 = n - 1;
        var G__8838 = cljs.core.rest.call(null, s__8834);
        n = G__8837;
        coll = G__8838;
        continue
      }else {
        return s__8834
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__8836.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__8841 = cljs.core.seq.call(null, coll);
  var lead__8842 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__8842) {
      var G__8843 = cljs.core.next.call(null, s__8841);
      var G__8844 = cljs.core.next.call(null, lead__8842);
      s__8841 = G__8843;
      lead__8842 = G__8844;
      continue
    }else {
      return s__8841
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__8850 = function(pred, coll) {
    while(true) {
      var s__8848 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____8849 = s__8848;
        if(and__3822__auto____8849) {
          return pred.call(null, cljs.core.first.call(null, s__8848))
        }else {
          return and__3822__auto____8849
        }
      }())) {
        var G__8851 = pred;
        var G__8852 = cljs.core.rest.call(null, s__8848);
        pred = G__8851;
        coll = G__8852;
        continue
      }else {
        return s__8848
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__8850.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8855 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8855) {
      var s__8856 = temp__3974__auto____8855;
      return cljs.core.concat.call(null, s__8856, cycle.call(null, s__8856))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8861 = cljs.core.seq.call(null, c1);
      var s2__8862 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____8863 = s1__8861;
        if(and__3822__auto____8863) {
          return s2__8862
        }else {
          return and__3822__auto____8863
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__8861), cljs.core.cons.call(null, cljs.core.first.call(null, s2__8862), interleave.call(null, cljs.core.rest.call(null, s1__8861), cljs.core.rest.call(null, s2__8862))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__8865__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__8864 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__8864)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__8864), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__8864)))
        }else {
          return null
        }
      }, null)
    };
    var G__8865 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8865__delegate.call(this, c1, c2, colls)
    };
    G__8865.cljs$lang$maxFixedArity = 2;
    G__8865.cljs$lang$applyTo = function(arglist__8866) {
      var c1 = cljs.core.first(arglist__8866);
      var c2 = cljs.core.first(cljs.core.next(arglist__8866));
      var colls = cljs.core.rest(cljs.core.next(arglist__8866));
      return G__8865__delegate(c1, c2, colls)
    };
    G__8865.cljs$lang$arity$variadic = G__8865__delegate;
    return G__8865
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__8876 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____8874 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____8874) {
        var coll__8875 = temp__3971__auto____8874;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__8875), cat.call(null, cljs.core.rest.call(null, coll__8875), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__8876.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__8877__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__8877 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8877__delegate.call(this, f, coll, colls)
    };
    G__8877.cljs$lang$maxFixedArity = 2;
    G__8877.cljs$lang$applyTo = function(arglist__8878) {
      var f = cljs.core.first(arglist__8878);
      var coll = cljs.core.first(cljs.core.next(arglist__8878));
      var colls = cljs.core.rest(cljs.core.next(arglist__8878));
      return G__8877__delegate(f, coll, colls)
    };
    G__8877.cljs$lang$arity$variadic = G__8877__delegate;
    return G__8877
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8888 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8888) {
      var s__8889 = temp__3974__auto____8888;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8889)) {
        var c__8890 = cljs.core.chunk_first.call(null, s__8889);
        var size__8891 = cljs.core.count.call(null, c__8890);
        var b__8892 = cljs.core.chunk_buffer.call(null, size__8891);
        var n__2527__auto____8893 = size__8891;
        var i__8894 = 0;
        while(true) {
          if(i__8894 < n__2527__auto____8893) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__8890, i__8894)))) {
              cljs.core.chunk_append.call(null, b__8892, cljs.core._nth.call(null, c__8890, i__8894))
            }else {
            }
            var G__8897 = i__8894 + 1;
            i__8894 = G__8897;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8892), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__8889)))
      }else {
        var f__8895 = cljs.core.first.call(null, s__8889);
        var r__8896 = cljs.core.rest.call(null, s__8889);
        if(cljs.core.truth_(pred.call(null, f__8895))) {
          return cljs.core.cons.call(null, f__8895, filter.call(null, pred, r__8896))
        }else {
          return filter.call(null, pred, r__8896)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__8900 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__8900.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__8898_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__8898_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__8904__8905 = to;
    if(G__8904__8905) {
      if(function() {
        var or__3824__auto____8906 = G__8904__8905.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____8906) {
          return or__3824__auto____8906
        }else {
          return G__8904__8905.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__8904__8905.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__8904__8905)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__8904__8905)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__8907__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__8907 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8907__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__8907.cljs$lang$maxFixedArity = 4;
    G__8907.cljs$lang$applyTo = function(arglist__8908) {
      var f = cljs.core.first(arglist__8908);
      var c1 = cljs.core.first(cljs.core.next(arglist__8908));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8908)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8908))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8908))));
      return G__8907__delegate(f, c1, c2, c3, colls)
    };
    G__8907.cljs$lang$arity$variadic = G__8907__delegate;
    return G__8907
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8915 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8915) {
        var s__8916 = temp__3974__auto____8915;
        var p__8917 = cljs.core.take.call(null, n, s__8916);
        if(n === cljs.core.count.call(null, p__8917)) {
          return cljs.core.cons.call(null, p__8917, partition.call(null, n, step, cljs.core.drop.call(null, step, s__8916)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8918 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8918) {
        var s__8919 = temp__3974__auto____8918;
        var p__8920 = cljs.core.take.call(null, n, s__8919);
        if(n === cljs.core.count.call(null, p__8920)) {
          return cljs.core.cons.call(null, p__8920, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__8919)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__8920, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__8925 = cljs.core.lookup_sentinel;
    var m__8926 = m;
    var ks__8927 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__8927) {
        var m__8928 = cljs.core._lookup.call(null, m__8926, cljs.core.first.call(null, ks__8927), sentinel__8925);
        if(sentinel__8925 === m__8928) {
          return not_found
        }else {
          var G__8929 = sentinel__8925;
          var G__8930 = m__8928;
          var G__8931 = cljs.core.next.call(null, ks__8927);
          sentinel__8925 = G__8929;
          m__8926 = G__8930;
          ks__8927 = G__8931;
          continue
        }
      }else {
        return m__8926
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__8932, v) {
  var vec__8937__8938 = p__8932;
  var k__8939 = cljs.core.nth.call(null, vec__8937__8938, 0, null);
  var ks__8940 = cljs.core.nthnext.call(null, vec__8937__8938, 1);
  if(cljs.core.truth_(ks__8940)) {
    return cljs.core.assoc.call(null, m, k__8939, assoc_in.call(null, cljs.core._lookup.call(null, m, k__8939, null), ks__8940, v))
  }else {
    return cljs.core.assoc.call(null, m, k__8939, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__8941, f, args) {
    var vec__8946__8947 = p__8941;
    var k__8948 = cljs.core.nth.call(null, vec__8946__8947, 0, null);
    var ks__8949 = cljs.core.nthnext.call(null, vec__8946__8947, 1);
    if(cljs.core.truth_(ks__8949)) {
      return cljs.core.assoc.call(null, m, k__8948, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__8948, null), ks__8949, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__8948, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__8948, null), args))
    }
  };
  var update_in = function(m, p__8941, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__8941, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__8950) {
    var m = cljs.core.first(arglist__8950);
    var p__8941 = cljs.core.first(cljs.core.next(arglist__8950));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8950)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8950)));
    return update_in__delegate(m, p__8941, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8953 = this;
  var h__2192__auto____8954 = this__8953.__hash;
  if(!(h__2192__auto____8954 == null)) {
    return h__2192__auto____8954
  }else {
    var h__2192__auto____8955 = cljs.core.hash_coll.call(null, coll);
    this__8953.__hash = h__2192__auto____8955;
    return h__2192__auto____8955
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__8956 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__8957 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__8958 = this;
  var new_array__8959 = this__8958.array.slice();
  new_array__8959[k] = v;
  return new cljs.core.Vector(this__8958.meta, new_array__8959, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__8990 = null;
  var G__8990__2 = function(this_sym8960, k) {
    var this__8962 = this;
    var this_sym8960__8963 = this;
    var coll__8964 = this_sym8960__8963;
    return coll__8964.cljs$core$ILookup$_lookup$arity$2(coll__8964, k)
  };
  var G__8990__3 = function(this_sym8961, k, not_found) {
    var this__8962 = this;
    var this_sym8961__8965 = this;
    var coll__8966 = this_sym8961__8965;
    return coll__8966.cljs$core$ILookup$_lookup$arity$3(coll__8966, k, not_found)
  };
  G__8990 = function(this_sym8961, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8990__2.call(this, this_sym8961, k);
      case 3:
        return G__8990__3.call(this, this_sym8961, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8990
}();
cljs.core.Vector.prototype.apply = function(this_sym8951, args8952) {
  var this__8967 = this;
  return this_sym8951.call.apply(this_sym8951, [this_sym8951].concat(args8952.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8968 = this;
  var new_array__8969 = this__8968.array.slice();
  new_array__8969.push(o);
  return new cljs.core.Vector(this__8968.meta, new_array__8969, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__8970 = this;
  var this__8971 = this;
  return cljs.core.pr_str.call(null, this__8971)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__8972 = this;
  return cljs.core.ci_reduce.call(null, this__8972.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__8973 = this;
  return cljs.core.ci_reduce.call(null, this__8973.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8974 = this;
  if(this__8974.array.length > 0) {
    var vector_seq__8975 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__8974.array.length) {
          return cljs.core.cons.call(null, this__8974.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__8975.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8976 = this;
  return this__8976.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8977 = this;
  var count__8978 = this__8977.array.length;
  if(count__8978 > 0) {
    return this__8977.array[count__8978 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8979 = this;
  if(this__8979.array.length > 0) {
    var new_array__8980 = this__8979.array.slice();
    new_array__8980.pop();
    return new cljs.core.Vector(this__8979.meta, new_array__8980, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__8981 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8982 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8983 = this;
  return new cljs.core.Vector(meta, this__8983.array, this__8983.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8984 = this;
  return this__8984.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8985 = this;
  if(function() {
    var and__3822__auto____8986 = 0 <= n;
    if(and__3822__auto____8986) {
      return n < this__8985.array.length
    }else {
      return and__3822__auto____8986
    }
  }()) {
    return this__8985.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8987 = this;
  if(function() {
    var and__3822__auto____8988 = 0 <= n;
    if(and__3822__auto____8988) {
      return n < this__8987.array.length
    }else {
      return and__3822__auto____8988
    }
  }()) {
    return this__8987.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8989 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__8989.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__8992 = pv.cnt;
  if(cnt__8992 < 32) {
    return 0
  }else {
    return cnt__8992 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__8998 = level;
  var ret__8999 = node;
  while(true) {
    if(ll__8998 === 0) {
      return ret__8999
    }else {
      var embed__9000 = ret__8999;
      var r__9001 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9002 = cljs.core.pv_aset.call(null, r__9001, 0, embed__9000);
      var G__9003 = ll__8998 - 5;
      var G__9004 = r__9001;
      ll__8998 = G__9003;
      ret__8999 = G__9004;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9010 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9011 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9010, subidx__9011, tailnode);
    return ret__9010
  }else {
    var child__9012 = cljs.core.pv_aget.call(null, parent, subidx__9011);
    if(!(child__9012 == null)) {
      var node_to_insert__9013 = push_tail.call(null, pv, level - 5, child__9012, tailnode);
      cljs.core.pv_aset.call(null, ret__9010, subidx__9011, node_to_insert__9013);
      return ret__9010
    }else {
      var node_to_insert__9014 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9010, subidx__9011, node_to_insert__9014);
      return ret__9010
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____9018 = 0 <= i;
    if(and__3822__auto____9018) {
      return i < pv.cnt
    }else {
      return and__3822__auto____9018
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9019 = pv.root;
      var level__9020 = pv.shift;
      while(true) {
        if(level__9020 > 0) {
          var G__9021 = cljs.core.pv_aget.call(null, node__9019, i >>> level__9020 & 31);
          var G__9022 = level__9020 - 5;
          node__9019 = G__9021;
          level__9020 = G__9022;
          continue
        }else {
          return node__9019.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9025 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9025, i & 31, val);
    return ret__9025
  }else {
    var subidx__9026 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9025, subidx__9026, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9026), i, val));
    return ret__9025
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9032 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9033 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9032));
    if(function() {
      var and__3822__auto____9034 = new_child__9033 == null;
      if(and__3822__auto____9034) {
        return subidx__9032 === 0
      }else {
        return and__3822__auto____9034
      }
    }()) {
      return null
    }else {
      var ret__9035 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9035, subidx__9032, new_child__9033);
      return ret__9035
    }
  }else {
    if(subidx__9032 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9036 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9036, subidx__9032, null);
        return ret__9036
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9039 = this;
  return new cljs.core.TransientVector(this__9039.cnt, this__9039.shift, cljs.core.tv_editable_root.call(null, this__9039.root), cljs.core.tv_editable_tail.call(null, this__9039.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9040 = this;
  var h__2192__auto____9041 = this__9040.__hash;
  if(!(h__2192__auto____9041 == null)) {
    return h__2192__auto____9041
  }else {
    var h__2192__auto____9042 = cljs.core.hash_coll.call(null, coll);
    this__9040.__hash = h__2192__auto____9042;
    return h__2192__auto____9042
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9043 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9044 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9045 = this;
  if(function() {
    var and__3822__auto____9046 = 0 <= k;
    if(and__3822__auto____9046) {
      return k < this__9045.cnt
    }else {
      return and__3822__auto____9046
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9047 = this__9045.tail.slice();
      new_tail__9047[k & 31] = v;
      return new cljs.core.PersistentVector(this__9045.meta, this__9045.cnt, this__9045.shift, this__9045.root, new_tail__9047, null)
    }else {
      return new cljs.core.PersistentVector(this__9045.meta, this__9045.cnt, this__9045.shift, cljs.core.do_assoc.call(null, coll, this__9045.shift, this__9045.root, k, v), this__9045.tail, null)
    }
  }else {
    if(k === this__9045.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9045.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9095 = null;
  var G__9095__2 = function(this_sym9048, k) {
    var this__9050 = this;
    var this_sym9048__9051 = this;
    var coll__9052 = this_sym9048__9051;
    return coll__9052.cljs$core$ILookup$_lookup$arity$2(coll__9052, k)
  };
  var G__9095__3 = function(this_sym9049, k, not_found) {
    var this__9050 = this;
    var this_sym9049__9053 = this;
    var coll__9054 = this_sym9049__9053;
    return coll__9054.cljs$core$ILookup$_lookup$arity$3(coll__9054, k, not_found)
  };
  G__9095 = function(this_sym9049, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9095__2.call(this, this_sym9049, k);
      case 3:
        return G__9095__3.call(this, this_sym9049, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9095
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9037, args9038) {
  var this__9055 = this;
  return this_sym9037.call.apply(this_sym9037, [this_sym9037].concat(args9038.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9056 = this;
  var step_init__9057 = [0, init];
  var i__9058 = 0;
  while(true) {
    if(i__9058 < this__9056.cnt) {
      var arr__9059 = cljs.core.array_for.call(null, v, i__9058);
      var len__9060 = arr__9059.length;
      var init__9064 = function() {
        var j__9061 = 0;
        var init__9062 = step_init__9057[1];
        while(true) {
          if(j__9061 < len__9060) {
            var init__9063 = f.call(null, init__9062, j__9061 + i__9058, arr__9059[j__9061]);
            if(cljs.core.reduced_QMARK_.call(null, init__9063)) {
              return init__9063
            }else {
              var G__9096 = j__9061 + 1;
              var G__9097 = init__9063;
              j__9061 = G__9096;
              init__9062 = G__9097;
              continue
            }
          }else {
            step_init__9057[0] = len__9060;
            step_init__9057[1] = init__9062;
            return init__9062
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9064)) {
        return cljs.core.deref.call(null, init__9064)
      }else {
        var G__9098 = i__9058 + step_init__9057[0];
        i__9058 = G__9098;
        continue
      }
    }else {
      return step_init__9057[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9065 = this;
  if(this__9065.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9066 = this__9065.tail.slice();
    new_tail__9066.push(o);
    return new cljs.core.PersistentVector(this__9065.meta, this__9065.cnt + 1, this__9065.shift, this__9065.root, new_tail__9066, null)
  }else {
    var root_overflow_QMARK___9067 = this__9065.cnt >>> 5 > 1 << this__9065.shift;
    var new_shift__9068 = root_overflow_QMARK___9067 ? this__9065.shift + 5 : this__9065.shift;
    var new_root__9070 = root_overflow_QMARK___9067 ? function() {
      var n_r__9069 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9069, 0, this__9065.root);
      cljs.core.pv_aset.call(null, n_r__9069, 1, cljs.core.new_path.call(null, null, this__9065.shift, new cljs.core.VectorNode(null, this__9065.tail)));
      return n_r__9069
    }() : cljs.core.push_tail.call(null, coll, this__9065.shift, this__9065.root, new cljs.core.VectorNode(null, this__9065.tail));
    return new cljs.core.PersistentVector(this__9065.meta, this__9065.cnt + 1, new_shift__9068, new_root__9070, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9071 = this;
  if(this__9071.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9071.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9072 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9073 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9074 = this;
  var this__9075 = this;
  return cljs.core.pr_str.call(null, this__9075)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9076 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9077 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9078 = this;
  if(this__9078.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9079 = this;
  return this__9079.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9080 = this;
  if(this__9080.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9080.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9081 = this;
  if(this__9081.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9081.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9081.meta)
    }else {
      if(1 < this__9081.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9081.meta, this__9081.cnt - 1, this__9081.shift, this__9081.root, this__9081.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9082 = cljs.core.array_for.call(null, coll, this__9081.cnt - 2);
          var nr__9083 = cljs.core.pop_tail.call(null, coll, this__9081.shift, this__9081.root);
          var new_root__9084 = nr__9083 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9083;
          var cnt_1__9085 = this__9081.cnt - 1;
          if(function() {
            var and__3822__auto____9086 = 5 < this__9081.shift;
            if(and__3822__auto____9086) {
              return cljs.core.pv_aget.call(null, new_root__9084, 1) == null
            }else {
              return and__3822__auto____9086
            }
          }()) {
            return new cljs.core.PersistentVector(this__9081.meta, cnt_1__9085, this__9081.shift - 5, cljs.core.pv_aget.call(null, new_root__9084, 0), new_tail__9082, null)
          }else {
            return new cljs.core.PersistentVector(this__9081.meta, cnt_1__9085, this__9081.shift, new_root__9084, new_tail__9082, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9087 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9088 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9089 = this;
  return new cljs.core.PersistentVector(meta, this__9089.cnt, this__9089.shift, this__9089.root, this__9089.tail, this__9089.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9090 = this;
  return this__9090.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9091 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9092 = this;
  if(function() {
    var and__3822__auto____9093 = 0 <= n;
    if(and__3822__auto____9093) {
      return n < this__9092.cnt
    }else {
      return and__3822__auto____9093
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9094 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9094.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9099 = xs.length;
  var xs__9100 = no_clone === true ? xs : xs.slice();
  if(l__9099 < 32) {
    return new cljs.core.PersistentVector(null, l__9099, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9100, null)
  }else {
    var node__9101 = xs__9100.slice(0, 32);
    var v__9102 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9101, null);
    var i__9103 = 32;
    var out__9104 = cljs.core._as_transient.call(null, v__9102);
    while(true) {
      if(i__9103 < l__9099) {
        var G__9105 = i__9103 + 1;
        var G__9106 = cljs.core.conj_BANG_.call(null, out__9104, xs__9100[i__9103]);
        i__9103 = G__9105;
        out__9104 = G__9106;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9104)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9107) {
    var args = cljs.core.seq(arglist__9107);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9108 = this;
  if(this__9108.off + 1 < this__9108.node.length) {
    var s__9109 = cljs.core.chunked_seq.call(null, this__9108.vec, this__9108.node, this__9108.i, this__9108.off + 1);
    if(s__9109 == null) {
      return null
    }else {
      return s__9109
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9110 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9111 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9112 = this;
  return this__9112.node[this__9112.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9113 = this;
  if(this__9113.off + 1 < this__9113.node.length) {
    var s__9114 = cljs.core.chunked_seq.call(null, this__9113.vec, this__9113.node, this__9113.i, this__9113.off + 1);
    if(s__9114 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9114
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9115 = this;
  var l__9116 = this__9115.node.length;
  var s__9117 = this__9115.i + l__9116 < cljs.core._count.call(null, this__9115.vec) ? cljs.core.chunked_seq.call(null, this__9115.vec, this__9115.i + l__9116, 0) : null;
  if(s__9117 == null) {
    return null
  }else {
    return s__9117
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9118 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9119 = this;
  return cljs.core.chunked_seq.call(null, this__9119.vec, this__9119.node, this__9119.i, this__9119.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9120 = this;
  return this__9120.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9121 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9121.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9122 = this;
  return cljs.core.array_chunk.call(null, this__9122.node, this__9122.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9123 = this;
  var l__9124 = this__9123.node.length;
  var s__9125 = this__9123.i + l__9124 < cljs.core._count.call(null, this__9123.vec) ? cljs.core.chunked_seq.call(null, this__9123.vec, this__9123.i + l__9124, 0) : null;
  if(s__9125 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9125
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9128 = this;
  var h__2192__auto____9129 = this__9128.__hash;
  if(!(h__2192__auto____9129 == null)) {
    return h__2192__auto____9129
  }else {
    var h__2192__auto____9130 = cljs.core.hash_coll.call(null, coll);
    this__9128.__hash = h__2192__auto____9130;
    return h__2192__auto____9130
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9131 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9132 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9133 = this;
  var v_pos__9134 = this__9133.start + key;
  return new cljs.core.Subvec(this__9133.meta, cljs.core._assoc.call(null, this__9133.v, v_pos__9134, val), this__9133.start, this__9133.end > v_pos__9134 + 1 ? this__9133.end : v_pos__9134 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9160 = null;
  var G__9160__2 = function(this_sym9135, k) {
    var this__9137 = this;
    var this_sym9135__9138 = this;
    var coll__9139 = this_sym9135__9138;
    return coll__9139.cljs$core$ILookup$_lookup$arity$2(coll__9139, k)
  };
  var G__9160__3 = function(this_sym9136, k, not_found) {
    var this__9137 = this;
    var this_sym9136__9140 = this;
    var coll__9141 = this_sym9136__9140;
    return coll__9141.cljs$core$ILookup$_lookup$arity$3(coll__9141, k, not_found)
  };
  G__9160 = function(this_sym9136, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9160__2.call(this, this_sym9136, k);
      case 3:
        return G__9160__3.call(this, this_sym9136, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9160
}();
cljs.core.Subvec.prototype.apply = function(this_sym9126, args9127) {
  var this__9142 = this;
  return this_sym9126.call.apply(this_sym9126, [this_sym9126].concat(args9127.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9143 = this;
  return new cljs.core.Subvec(this__9143.meta, cljs.core._assoc_n.call(null, this__9143.v, this__9143.end, o), this__9143.start, this__9143.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9144 = this;
  var this__9145 = this;
  return cljs.core.pr_str.call(null, this__9145)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9146 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9147 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9148 = this;
  var subvec_seq__9149 = function subvec_seq(i) {
    if(i === this__9148.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9148.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9149.call(null, this__9148.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9150 = this;
  return this__9150.end - this__9150.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9151 = this;
  return cljs.core._nth.call(null, this__9151.v, this__9151.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9152 = this;
  if(this__9152.start === this__9152.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9152.meta, this__9152.v, this__9152.start, this__9152.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9153 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9154 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9155 = this;
  return new cljs.core.Subvec(meta, this__9155.v, this__9155.start, this__9155.end, this__9155.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9156 = this;
  return this__9156.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9157 = this;
  return cljs.core._nth.call(null, this__9157.v, this__9157.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9158 = this;
  return cljs.core._nth.call(null, this__9158.v, this__9158.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9159 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9159.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9162 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9162, 0, tl.length);
  return ret__9162
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9166 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9167 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9166, subidx__9167, level === 5 ? tail_node : function() {
    var child__9168 = cljs.core.pv_aget.call(null, ret__9166, subidx__9167);
    if(!(child__9168 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9168, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9166
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9173 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9174 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9175 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9173, subidx__9174));
    if(function() {
      var and__3822__auto____9176 = new_child__9175 == null;
      if(and__3822__auto____9176) {
        return subidx__9174 === 0
      }else {
        return and__3822__auto____9176
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9173, subidx__9174, new_child__9175);
      return node__9173
    }
  }else {
    if(subidx__9174 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9173, subidx__9174, null);
        return node__9173
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____9181 = 0 <= i;
    if(and__3822__auto____9181) {
      return i < tv.cnt
    }else {
      return and__3822__auto____9181
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9182 = tv.root;
      var node__9183 = root__9182;
      var level__9184 = tv.shift;
      while(true) {
        if(level__9184 > 0) {
          var G__9185 = cljs.core.tv_ensure_editable.call(null, root__9182.edit, cljs.core.pv_aget.call(null, node__9183, i >>> level__9184 & 31));
          var G__9186 = level__9184 - 5;
          node__9183 = G__9185;
          level__9184 = G__9186;
          continue
        }else {
          return node__9183.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9226 = null;
  var G__9226__2 = function(this_sym9189, k) {
    var this__9191 = this;
    var this_sym9189__9192 = this;
    var coll__9193 = this_sym9189__9192;
    return coll__9193.cljs$core$ILookup$_lookup$arity$2(coll__9193, k)
  };
  var G__9226__3 = function(this_sym9190, k, not_found) {
    var this__9191 = this;
    var this_sym9190__9194 = this;
    var coll__9195 = this_sym9190__9194;
    return coll__9195.cljs$core$ILookup$_lookup$arity$3(coll__9195, k, not_found)
  };
  G__9226 = function(this_sym9190, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9226__2.call(this, this_sym9190, k);
      case 3:
        return G__9226__3.call(this, this_sym9190, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9226
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9187, args9188) {
  var this__9196 = this;
  return this_sym9187.call.apply(this_sym9187, [this_sym9187].concat(args9188.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9197 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9198 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9199 = this;
  if(this__9199.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9200 = this;
  if(function() {
    var and__3822__auto____9201 = 0 <= n;
    if(and__3822__auto____9201) {
      return n < this__9200.cnt
    }else {
      return and__3822__auto____9201
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9202 = this;
  if(this__9202.root.edit) {
    return this__9202.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9203 = this;
  if(this__9203.root.edit) {
    if(function() {
      var and__3822__auto____9204 = 0 <= n;
      if(and__3822__auto____9204) {
        return n < this__9203.cnt
      }else {
        return and__3822__auto____9204
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9203.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9209 = function go(level, node) {
          var node__9207 = cljs.core.tv_ensure_editable.call(null, this__9203.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9207, n & 31, val);
            return node__9207
          }else {
            var subidx__9208 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9207, subidx__9208, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9207, subidx__9208)));
            return node__9207
          }
        }.call(null, this__9203.shift, this__9203.root);
        this__9203.root = new_root__9209;
        return tcoll
      }
    }else {
      if(n === this__9203.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9203.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9210 = this;
  if(this__9210.root.edit) {
    if(this__9210.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9210.cnt) {
        this__9210.cnt = 0;
        return tcoll
      }else {
        if((this__9210.cnt - 1 & 31) > 0) {
          this__9210.cnt = this__9210.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9211 = cljs.core.editable_array_for.call(null, tcoll, this__9210.cnt - 2);
            var new_root__9213 = function() {
              var nr__9212 = cljs.core.tv_pop_tail.call(null, tcoll, this__9210.shift, this__9210.root);
              if(!(nr__9212 == null)) {
                return nr__9212
              }else {
                return new cljs.core.VectorNode(this__9210.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____9214 = 5 < this__9210.shift;
              if(and__3822__auto____9214) {
                return cljs.core.pv_aget.call(null, new_root__9213, 1) == null
              }else {
                return and__3822__auto____9214
              }
            }()) {
              var new_root__9215 = cljs.core.tv_ensure_editable.call(null, this__9210.root.edit, cljs.core.pv_aget.call(null, new_root__9213, 0));
              this__9210.root = new_root__9215;
              this__9210.shift = this__9210.shift - 5;
              this__9210.cnt = this__9210.cnt - 1;
              this__9210.tail = new_tail__9211;
              return tcoll
            }else {
              this__9210.root = new_root__9213;
              this__9210.cnt = this__9210.cnt - 1;
              this__9210.tail = new_tail__9211;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9216 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9217 = this;
  if(this__9217.root.edit) {
    if(this__9217.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9217.tail[this__9217.cnt & 31] = o;
      this__9217.cnt = this__9217.cnt + 1;
      return tcoll
    }else {
      var tail_node__9218 = new cljs.core.VectorNode(this__9217.root.edit, this__9217.tail);
      var new_tail__9219 = cljs.core.make_array.call(null, 32);
      new_tail__9219[0] = o;
      this__9217.tail = new_tail__9219;
      if(this__9217.cnt >>> 5 > 1 << this__9217.shift) {
        var new_root_array__9220 = cljs.core.make_array.call(null, 32);
        var new_shift__9221 = this__9217.shift + 5;
        new_root_array__9220[0] = this__9217.root;
        new_root_array__9220[1] = cljs.core.new_path.call(null, this__9217.root.edit, this__9217.shift, tail_node__9218);
        this__9217.root = new cljs.core.VectorNode(this__9217.root.edit, new_root_array__9220);
        this__9217.shift = new_shift__9221;
        this__9217.cnt = this__9217.cnt + 1;
        return tcoll
      }else {
        var new_root__9222 = cljs.core.tv_push_tail.call(null, tcoll, this__9217.shift, this__9217.root, tail_node__9218);
        this__9217.root = new_root__9222;
        this__9217.cnt = this__9217.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9223 = this;
  if(this__9223.root.edit) {
    this__9223.root.edit = null;
    var len__9224 = this__9223.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9225 = cljs.core.make_array.call(null, len__9224);
    cljs.core.array_copy.call(null, this__9223.tail, 0, trimmed_tail__9225, 0, len__9224);
    return new cljs.core.PersistentVector(null, this__9223.cnt, this__9223.shift, this__9223.root, trimmed_tail__9225, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9227 = this;
  var h__2192__auto____9228 = this__9227.__hash;
  if(!(h__2192__auto____9228 == null)) {
    return h__2192__auto____9228
  }else {
    var h__2192__auto____9229 = cljs.core.hash_coll.call(null, coll);
    this__9227.__hash = h__2192__auto____9229;
    return h__2192__auto____9229
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9230 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9231 = this;
  var this__9232 = this;
  return cljs.core.pr_str.call(null, this__9232)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9233 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9234 = this;
  return cljs.core._first.call(null, this__9234.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9235 = this;
  var temp__3971__auto____9236 = cljs.core.next.call(null, this__9235.front);
  if(temp__3971__auto____9236) {
    var f1__9237 = temp__3971__auto____9236;
    return new cljs.core.PersistentQueueSeq(this__9235.meta, f1__9237, this__9235.rear, null)
  }else {
    if(this__9235.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9235.meta, this__9235.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9238 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9239 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9239.front, this__9239.rear, this__9239.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9240 = this;
  return this__9240.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9241 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9241.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9242 = this;
  var h__2192__auto____9243 = this__9242.__hash;
  if(!(h__2192__auto____9243 == null)) {
    return h__2192__auto____9243
  }else {
    var h__2192__auto____9244 = cljs.core.hash_coll.call(null, coll);
    this__9242.__hash = h__2192__auto____9244;
    return h__2192__auto____9244
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9245 = this;
  if(cljs.core.truth_(this__9245.front)) {
    return new cljs.core.PersistentQueue(this__9245.meta, this__9245.count + 1, this__9245.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____9246 = this__9245.rear;
      if(cljs.core.truth_(or__3824__auto____9246)) {
        return or__3824__auto____9246
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9245.meta, this__9245.count + 1, cljs.core.conj.call(null, this__9245.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9247 = this;
  var this__9248 = this;
  return cljs.core.pr_str.call(null, this__9248)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9249 = this;
  var rear__9250 = cljs.core.seq.call(null, this__9249.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____9251 = this__9249.front;
    if(cljs.core.truth_(or__3824__auto____9251)) {
      return or__3824__auto____9251
    }else {
      return rear__9250
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9249.front, cljs.core.seq.call(null, rear__9250), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9252 = this;
  return this__9252.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9253 = this;
  return cljs.core._first.call(null, this__9253.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9254 = this;
  if(cljs.core.truth_(this__9254.front)) {
    var temp__3971__auto____9255 = cljs.core.next.call(null, this__9254.front);
    if(temp__3971__auto____9255) {
      var f1__9256 = temp__3971__auto____9255;
      return new cljs.core.PersistentQueue(this__9254.meta, this__9254.count - 1, f1__9256, this__9254.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9254.meta, this__9254.count - 1, cljs.core.seq.call(null, this__9254.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9257 = this;
  return cljs.core.first.call(null, this__9257.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9258 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9259 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9260 = this;
  return new cljs.core.PersistentQueue(meta, this__9260.count, this__9260.front, this__9260.rear, this__9260.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9261 = this;
  return this__9261.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9262 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9263 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9266 = array.length;
  var i__9267 = 0;
  while(true) {
    if(i__9267 < len__9266) {
      if(k === array[i__9267]) {
        return i__9267
      }else {
        var G__9268 = i__9267 + incr;
        i__9267 = G__9268;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9271 = cljs.core.hash.call(null, a);
  var b__9272 = cljs.core.hash.call(null, b);
  if(a__9271 < b__9272) {
    return-1
  }else {
    if(a__9271 > b__9272) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9280 = m.keys;
  var len__9281 = ks__9280.length;
  var so__9282 = m.strobj;
  var out__9283 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9284 = 0;
  var out__9285 = cljs.core.transient$.call(null, out__9283);
  while(true) {
    if(i__9284 < len__9281) {
      var k__9286 = ks__9280[i__9284];
      var G__9287 = i__9284 + 1;
      var G__9288 = cljs.core.assoc_BANG_.call(null, out__9285, k__9286, so__9282[k__9286]);
      i__9284 = G__9287;
      out__9285 = G__9288;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9285, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9294 = {};
  var l__9295 = ks.length;
  var i__9296 = 0;
  while(true) {
    if(i__9296 < l__9295) {
      var k__9297 = ks[i__9296];
      new_obj__9294[k__9297] = obj[k__9297];
      var G__9298 = i__9296 + 1;
      i__9296 = G__9298;
      continue
    }else {
    }
    break
  }
  return new_obj__9294
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9301 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9302 = this;
  var h__2192__auto____9303 = this__9302.__hash;
  if(!(h__2192__auto____9303 == null)) {
    return h__2192__auto____9303
  }else {
    var h__2192__auto____9304 = cljs.core.hash_imap.call(null, coll);
    this__9302.__hash = h__2192__auto____9304;
    return h__2192__auto____9304
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9305 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9306 = this;
  if(function() {
    var and__3822__auto____9307 = goog.isString(k);
    if(and__3822__auto____9307) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9306.keys) == null)
    }else {
      return and__3822__auto____9307
    }
  }()) {
    return this__9306.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9308 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____9309 = this__9308.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____9309) {
        return or__3824__auto____9309
      }else {
        return this__9308.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9308.keys) == null)) {
        var new_strobj__9310 = cljs.core.obj_clone.call(null, this__9308.strobj, this__9308.keys);
        new_strobj__9310[k] = v;
        return new cljs.core.ObjMap(this__9308.meta, this__9308.keys, new_strobj__9310, this__9308.update_count + 1, null)
      }else {
        var new_strobj__9311 = cljs.core.obj_clone.call(null, this__9308.strobj, this__9308.keys);
        var new_keys__9312 = this__9308.keys.slice();
        new_strobj__9311[k] = v;
        new_keys__9312.push(k);
        return new cljs.core.ObjMap(this__9308.meta, new_keys__9312, new_strobj__9311, this__9308.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9313 = this;
  if(function() {
    var and__3822__auto____9314 = goog.isString(k);
    if(and__3822__auto____9314) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9313.keys) == null)
    }else {
      return and__3822__auto____9314
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9336 = null;
  var G__9336__2 = function(this_sym9315, k) {
    var this__9317 = this;
    var this_sym9315__9318 = this;
    var coll__9319 = this_sym9315__9318;
    return coll__9319.cljs$core$ILookup$_lookup$arity$2(coll__9319, k)
  };
  var G__9336__3 = function(this_sym9316, k, not_found) {
    var this__9317 = this;
    var this_sym9316__9320 = this;
    var coll__9321 = this_sym9316__9320;
    return coll__9321.cljs$core$ILookup$_lookup$arity$3(coll__9321, k, not_found)
  };
  G__9336 = function(this_sym9316, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9336__2.call(this, this_sym9316, k);
      case 3:
        return G__9336__3.call(this, this_sym9316, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9336
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9299, args9300) {
  var this__9322 = this;
  return this_sym9299.call.apply(this_sym9299, [this_sym9299].concat(args9300.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9323 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9324 = this;
  var this__9325 = this;
  return cljs.core.pr_str.call(null, this__9325)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9326 = this;
  if(this__9326.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9289_SHARP_) {
      return cljs.core.vector.call(null, p1__9289_SHARP_, this__9326.strobj[p1__9289_SHARP_])
    }, this__9326.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9327 = this;
  return this__9327.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9328 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9329 = this;
  return new cljs.core.ObjMap(meta, this__9329.keys, this__9329.strobj, this__9329.update_count, this__9329.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9330 = this;
  return this__9330.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9331 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9331.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9332 = this;
  if(function() {
    var and__3822__auto____9333 = goog.isString(k);
    if(and__3822__auto____9333) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9332.keys) == null)
    }else {
      return and__3822__auto____9333
    }
  }()) {
    var new_keys__9334 = this__9332.keys.slice();
    var new_strobj__9335 = cljs.core.obj_clone.call(null, this__9332.strobj, this__9332.keys);
    new_keys__9334.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9334), 1);
    cljs.core.js_delete.call(null, new_strobj__9335, k);
    return new cljs.core.ObjMap(this__9332.meta, new_keys__9334, new_strobj__9335, this__9332.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9340 = this;
  var h__2192__auto____9341 = this__9340.__hash;
  if(!(h__2192__auto____9341 == null)) {
    return h__2192__auto____9341
  }else {
    var h__2192__auto____9342 = cljs.core.hash_imap.call(null, coll);
    this__9340.__hash = h__2192__auto____9342;
    return h__2192__auto____9342
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9343 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9344 = this;
  var bucket__9345 = this__9344.hashobj[cljs.core.hash.call(null, k)];
  var i__9346 = cljs.core.truth_(bucket__9345) ? cljs.core.scan_array.call(null, 2, k, bucket__9345) : null;
  if(cljs.core.truth_(i__9346)) {
    return bucket__9345[i__9346 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9347 = this;
  var h__9348 = cljs.core.hash.call(null, k);
  var bucket__9349 = this__9347.hashobj[h__9348];
  if(cljs.core.truth_(bucket__9349)) {
    var new_bucket__9350 = bucket__9349.slice();
    var new_hashobj__9351 = goog.object.clone(this__9347.hashobj);
    new_hashobj__9351[h__9348] = new_bucket__9350;
    var temp__3971__auto____9352 = cljs.core.scan_array.call(null, 2, k, new_bucket__9350);
    if(cljs.core.truth_(temp__3971__auto____9352)) {
      var i__9353 = temp__3971__auto____9352;
      new_bucket__9350[i__9353 + 1] = v;
      return new cljs.core.HashMap(this__9347.meta, this__9347.count, new_hashobj__9351, null)
    }else {
      new_bucket__9350.push(k, v);
      return new cljs.core.HashMap(this__9347.meta, this__9347.count + 1, new_hashobj__9351, null)
    }
  }else {
    var new_hashobj__9354 = goog.object.clone(this__9347.hashobj);
    new_hashobj__9354[h__9348] = [k, v];
    return new cljs.core.HashMap(this__9347.meta, this__9347.count + 1, new_hashobj__9354, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9355 = this;
  var bucket__9356 = this__9355.hashobj[cljs.core.hash.call(null, k)];
  var i__9357 = cljs.core.truth_(bucket__9356) ? cljs.core.scan_array.call(null, 2, k, bucket__9356) : null;
  if(cljs.core.truth_(i__9357)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__9382 = null;
  var G__9382__2 = function(this_sym9358, k) {
    var this__9360 = this;
    var this_sym9358__9361 = this;
    var coll__9362 = this_sym9358__9361;
    return coll__9362.cljs$core$ILookup$_lookup$arity$2(coll__9362, k)
  };
  var G__9382__3 = function(this_sym9359, k, not_found) {
    var this__9360 = this;
    var this_sym9359__9363 = this;
    var coll__9364 = this_sym9359__9363;
    return coll__9364.cljs$core$ILookup$_lookup$arity$3(coll__9364, k, not_found)
  };
  G__9382 = function(this_sym9359, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9382__2.call(this, this_sym9359, k);
      case 3:
        return G__9382__3.call(this, this_sym9359, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9382
}();
cljs.core.HashMap.prototype.apply = function(this_sym9338, args9339) {
  var this__9365 = this;
  return this_sym9338.call.apply(this_sym9338, [this_sym9338].concat(args9339.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9366 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__9367 = this;
  var this__9368 = this;
  return cljs.core.pr_str.call(null, this__9368)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9369 = this;
  if(this__9369.count > 0) {
    var hashes__9370 = cljs.core.js_keys.call(null, this__9369.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9337_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__9369.hashobj[p1__9337_SHARP_]))
    }, hashes__9370)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9371 = this;
  return this__9371.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9372 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9373 = this;
  return new cljs.core.HashMap(meta, this__9373.count, this__9373.hashobj, this__9373.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9374 = this;
  return this__9374.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9375 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__9375.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9376 = this;
  var h__9377 = cljs.core.hash.call(null, k);
  var bucket__9378 = this__9376.hashobj[h__9377];
  var i__9379 = cljs.core.truth_(bucket__9378) ? cljs.core.scan_array.call(null, 2, k, bucket__9378) : null;
  if(cljs.core.not.call(null, i__9379)) {
    return coll
  }else {
    var new_hashobj__9380 = goog.object.clone(this__9376.hashobj);
    if(3 > bucket__9378.length) {
      cljs.core.js_delete.call(null, new_hashobj__9380, h__9377)
    }else {
      var new_bucket__9381 = bucket__9378.slice();
      new_bucket__9381.splice(i__9379, 2);
      new_hashobj__9380[h__9377] = new_bucket__9381
    }
    return new cljs.core.HashMap(this__9376.meta, this__9376.count - 1, new_hashobj__9380, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__9383 = ks.length;
  var i__9384 = 0;
  var out__9385 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__9384 < len__9383) {
      var G__9386 = i__9384 + 1;
      var G__9387 = cljs.core.assoc.call(null, out__9385, ks[i__9384], vs[i__9384]);
      i__9384 = G__9386;
      out__9385 = G__9387;
      continue
    }else {
      return out__9385
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__9391 = m.arr;
  var len__9392 = arr__9391.length;
  var i__9393 = 0;
  while(true) {
    if(len__9392 <= i__9393) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__9391[i__9393], k)) {
        return i__9393
      }else {
        if("\ufdd0'else") {
          var G__9394 = i__9393 + 2;
          i__9393 = G__9394;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9397 = this;
  return new cljs.core.TransientArrayMap({}, this__9397.arr.length, this__9397.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9398 = this;
  var h__2192__auto____9399 = this__9398.__hash;
  if(!(h__2192__auto____9399 == null)) {
    return h__2192__auto____9399
  }else {
    var h__2192__auto____9400 = cljs.core.hash_imap.call(null, coll);
    this__9398.__hash = h__2192__auto____9400;
    return h__2192__auto____9400
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9401 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9402 = this;
  var idx__9403 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9403 === -1) {
    return not_found
  }else {
    return this__9402.arr[idx__9403 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9404 = this;
  var idx__9405 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9405 === -1) {
    if(this__9404.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__9404.meta, this__9404.cnt + 1, function() {
        var G__9406__9407 = this__9404.arr.slice();
        G__9406__9407.push(k);
        G__9406__9407.push(v);
        return G__9406__9407
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__9404.arr[idx__9405 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__9404.meta, this__9404.cnt, function() {
          var G__9408__9409 = this__9404.arr.slice();
          G__9408__9409[idx__9405 + 1] = v;
          return G__9408__9409
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9410 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9442 = null;
  var G__9442__2 = function(this_sym9411, k) {
    var this__9413 = this;
    var this_sym9411__9414 = this;
    var coll__9415 = this_sym9411__9414;
    return coll__9415.cljs$core$ILookup$_lookup$arity$2(coll__9415, k)
  };
  var G__9442__3 = function(this_sym9412, k, not_found) {
    var this__9413 = this;
    var this_sym9412__9416 = this;
    var coll__9417 = this_sym9412__9416;
    return coll__9417.cljs$core$ILookup$_lookup$arity$3(coll__9417, k, not_found)
  };
  G__9442 = function(this_sym9412, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9442__2.call(this, this_sym9412, k);
      case 3:
        return G__9442__3.call(this, this_sym9412, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9442
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym9395, args9396) {
  var this__9418 = this;
  return this_sym9395.call.apply(this_sym9395, [this_sym9395].concat(args9396.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9419 = this;
  var len__9420 = this__9419.arr.length;
  var i__9421 = 0;
  var init__9422 = init;
  while(true) {
    if(i__9421 < len__9420) {
      var init__9423 = f.call(null, init__9422, this__9419.arr[i__9421], this__9419.arr[i__9421 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__9423)) {
        return cljs.core.deref.call(null, init__9423)
      }else {
        var G__9443 = i__9421 + 2;
        var G__9444 = init__9423;
        i__9421 = G__9443;
        init__9422 = G__9444;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9424 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__9425 = this;
  var this__9426 = this;
  return cljs.core.pr_str.call(null, this__9426)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9427 = this;
  if(this__9427.cnt > 0) {
    var len__9428 = this__9427.arr.length;
    var array_map_seq__9429 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__9428) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__9427.arr[i], this__9427.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__9429.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9430 = this;
  return this__9430.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9431 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9432 = this;
  return new cljs.core.PersistentArrayMap(meta, this__9432.cnt, this__9432.arr, this__9432.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9433 = this;
  return this__9433.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9434 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9434.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9435 = this;
  var idx__9436 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9436 >= 0) {
    var len__9437 = this__9435.arr.length;
    var new_len__9438 = len__9437 - 2;
    if(new_len__9438 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__9439 = cljs.core.make_array.call(null, new_len__9438);
      var s__9440 = 0;
      var d__9441 = 0;
      while(true) {
        if(s__9440 >= len__9437) {
          return new cljs.core.PersistentArrayMap(this__9435.meta, this__9435.cnt - 1, new_arr__9439, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__9435.arr[s__9440])) {
            var G__9445 = s__9440 + 2;
            var G__9446 = d__9441;
            s__9440 = G__9445;
            d__9441 = G__9446;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__9439[d__9441] = this__9435.arr[s__9440];
              new_arr__9439[d__9441 + 1] = this__9435.arr[s__9440 + 1];
              var G__9447 = s__9440 + 2;
              var G__9448 = d__9441 + 2;
              s__9440 = G__9447;
              d__9441 = G__9448;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__9449 = cljs.core.count.call(null, ks);
  var i__9450 = 0;
  var out__9451 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__9450 < len__9449) {
      var G__9452 = i__9450 + 1;
      var G__9453 = cljs.core.assoc_BANG_.call(null, out__9451, ks[i__9450], vs[i__9450]);
      i__9450 = G__9452;
      out__9451 = G__9453;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9451)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9454 = this;
  if(cljs.core.truth_(this__9454.editable_QMARK_)) {
    var idx__9455 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9455 >= 0) {
      this__9454.arr[idx__9455] = this__9454.arr[this__9454.len - 2];
      this__9454.arr[idx__9455 + 1] = this__9454.arr[this__9454.len - 1];
      var G__9456__9457 = this__9454.arr;
      G__9456__9457.pop();
      G__9456__9457.pop();
      G__9456__9457;
      this__9454.len = this__9454.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9458 = this;
  if(cljs.core.truth_(this__9458.editable_QMARK_)) {
    var idx__9459 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9459 === -1) {
      if(this__9458.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__9458.len = this__9458.len + 2;
        this__9458.arr.push(key);
        this__9458.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__9458.len, this__9458.arr), key, val)
      }
    }else {
      if(val === this__9458.arr[idx__9459 + 1]) {
        return tcoll
      }else {
        this__9458.arr[idx__9459 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9460 = this;
  if(cljs.core.truth_(this__9460.editable_QMARK_)) {
    if(function() {
      var G__9461__9462 = o;
      if(G__9461__9462) {
        if(function() {
          var or__3824__auto____9463 = G__9461__9462.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____9463) {
            return or__3824__auto____9463
          }else {
            return G__9461__9462.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9461__9462.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9461__9462)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9461__9462)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9464 = cljs.core.seq.call(null, o);
      var tcoll__9465 = tcoll;
      while(true) {
        var temp__3971__auto____9466 = cljs.core.first.call(null, es__9464);
        if(cljs.core.truth_(temp__3971__auto____9466)) {
          var e__9467 = temp__3971__auto____9466;
          var G__9473 = cljs.core.next.call(null, es__9464);
          var G__9474 = tcoll__9465.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__9465, cljs.core.key.call(null, e__9467), cljs.core.val.call(null, e__9467));
          es__9464 = G__9473;
          tcoll__9465 = G__9474;
          continue
        }else {
          return tcoll__9465
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9468 = this;
  if(cljs.core.truth_(this__9468.editable_QMARK_)) {
    this__9468.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__9468.len, 2), this__9468.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9469 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9470 = this;
  if(cljs.core.truth_(this__9470.editable_QMARK_)) {
    var idx__9471 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__9471 === -1) {
      return not_found
    }else {
      return this__9470.arr[idx__9471 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__9472 = this;
  if(cljs.core.truth_(this__9472.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__9472.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__9477 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__9478 = 0;
  while(true) {
    if(i__9478 < len) {
      var G__9479 = cljs.core.assoc_BANG_.call(null, out__9477, arr[i__9478], arr[i__9478 + 1]);
      var G__9480 = i__9478 + 2;
      out__9477 = G__9479;
      i__9478 = G__9480;
      continue
    }else {
      return out__9477
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9485__9486 = arr.slice();
    G__9485__9486[i] = a;
    return G__9485__9486
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9487__9488 = arr.slice();
    G__9487__9488[i] = a;
    G__9487__9488[j] = b;
    return G__9487__9488
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__9490 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__9490, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__9490, 2 * i, new_arr__9490.length - 2 * i);
  return new_arr__9490
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__9493 = inode.ensure_editable(edit);
    editable__9493.arr[i] = a;
    return editable__9493
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__9494 = inode.ensure_editable(edit);
    editable__9494.arr[i] = a;
    editable__9494.arr[j] = b;
    return editable__9494
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__9501 = arr.length;
  var i__9502 = 0;
  var init__9503 = init;
  while(true) {
    if(i__9502 < len__9501) {
      var init__9506 = function() {
        var k__9504 = arr[i__9502];
        if(!(k__9504 == null)) {
          return f.call(null, init__9503, k__9504, arr[i__9502 + 1])
        }else {
          var node__9505 = arr[i__9502 + 1];
          if(!(node__9505 == null)) {
            return node__9505.kv_reduce(f, init__9503)
          }else {
            return init__9503
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9506)) {
        return cljs.core.deref.call(null, init__9506)
      }else {
        var G__9507 = i__9502 + 2;
        var G__9508 = init__9506;
        i__9502 = G__9507;
        init__9503 = G__9508;
        continue
      }
    }else {
      return init__9503
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__9509 = this;
  var inode__9510 = this;
  if(this__9509.bitmap === bit) {
    return null
  }else {
    var editable__9511 = inode__9510.ensure_editable(e);
    var earr__9512 = editable__9511.arr;
    var len__9513 = earr__9512.length;
    editable__9511.bitmap = bit ^ editable__9511.bitmap;
    cljs.core.array_copy.call(null, earr__9512, 2 * (i + 1), earr__9512, 2 * i, len__9513 - 2 * (i + 1));
    earr__9512[len__9513 - 2] = null;
    earr__9512[len__9513 - 1] = null;
    return editable__9511
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9514 = this;
  var inode__9515 = this;
  var bit__9516 = 1 << (hash >>> shift & 31);
  var idx__9517 = cljs.core.bitmap_indexed_node_index.call(null, this__9514.bitmap, bit__9516);
  if((this__9514.bitmap & bit__9516) === 0) {
    var n__9518 = cljs.core.bit_count.call(null, this__9514.bitmap);
    if(2 * n__9518 < this__9514.arr.length) {
      var editable__9519 = inode__9515.ensure_editable(edit);
      var earr__9520 = editable__9519.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__9520, 2 * idx__9517, earr__9520, 2 * (idx__9517 + 1), 2 * (n__9518 - idx__9517));
      earr__9520[2 * idx__9517] = key;
      earr__9520[2 * idx__9517 + 1] = val;
      editable__9519.bitmap = editable__9519.bitmap | bit__9516;
      return editable__9519
    }else {
      if(n__9518 >= 16) {
        var nodes__9521 = cljs.core.make_array.call(null, 32);
        var jdx__9522 = hash >>> shift & 31;
        nodes__9521[jdx__9522] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__9523 = 0;
        var j__9524 = 0;
        while(true) {
          if(i__9523 < 32) {
            if((this__9514.bitmap >>> i__9523 & 1) === 0) {
              var G__9577 = i__9523 + 1;
              var G__9578 = j__9524;
              i__9523 = G__9577;
              j__9524 = G__9578;
              continue
            }else {
              nodes__9521[i__9523] = !(this__9514.arr[j__9524] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__9514.arr[j__9524]), this__9514.arr[j__9524], this__9514.arr[j__9524 + 1], added_leaf_QMARK_) : this__9514.arr[j__9524 + 1];
              var G__9579 = i__9523 + 1;
              var G__9580 = j__9524 + 2;
              i__9523 = G__9579;
              j__9524 = G__9580;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__9518 + 1, nodes__9521)
      }else {
        if("\ufdd0'else") {
          var new_arr__9525 = cljs.core.make_array.call(null, 2 * (n__9518 + 4));
          cljs.core.array_copy.call(null, this__9514.arr, 0, new_arr__9525, 0, 2 * idx__9517);
          new_arr__9525[2 * idx__9517] = key;
          new_arr__9525[2 * idx__9517 + 1] = val;
          cljs.core.array_copy.call(null, this__9514.arr, 2 * idx__9517, new_arr__9525, 2 * (idx__9517 + 1), 2 * (n__9518 - idx__9517));
          added_leaf_QMARK_.val = true;
          var editable__9526 = inode__9515.ensure_editable(edit);
          editable__9526.arr = new_arr__9525;
          editable__9526.bitmap = editable__9526.bitmap | bit__9516;
          return editable__9526
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__9527 = this__9514.arr[2 * idx__9517];
    var val_or_node__9528 = this__9514.arr[2 * idx__9517 + 1];
    if(key_or_nil__9527 == null) {
      var n__9529 = val_or_node__9528.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9529 === val_or_node__9528) {
        return inode__9515
      }else {
        return cljs.core.edit_and_set.call(null, inode__9515, edit, 2 * idx__9517 + 1, n__9529)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9527)) {
        if(val === val_or_node__9528) {
          return inode__9515
        }else {
          return cljs.core.edit_and_set.call(null, inode__9515, edit, 2 * idx__9517 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__9515, edit, 2 * idx__9517, null, 2 * idx__9517 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__9527, val_or_node__9528, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__9530 = this;
  var inode__9531 = this;
  return cljs.core.create_inode_seq.call(null, this__9530.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9532 = this;
  var inode__9533 = this;
  var bit__9534 = 1 << (hash >>> shift & 31);
  if((this__9532.bitmap & bit__9534) === 0) {
    return inode__9533
  }else {
    var idx__9535 = cljs.core.bitmap_indexed_node_index.call(null, this__9532.bitmap, bit__9534);
    var key_or_nil__9536 = this__9532.arr[2 * idx__9535];
    var val_or_node__9537 = this__9532.arr[2 * idx__9535 + 1];
    if(key_or_nil__9536 == null) {
      var n__9538 = val_or_node__9537.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__9538 === val_or_node__9537) {
        return inode__9533
      }else {
        if(!(n__9538 == null)) {
          return cljs.core.edit_and_set.call(null, inode__9533, edit, 2 * idx__9535 + 1, n__9538)
        }else {
          if(this__9532.bitmap === bit__9534) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__9533.edit_and_remove_pair(edit, bit__9534, idx__9535)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9536)) {
        removed_leaf_QMARK_[0] = true;
        return inode__9533.edit_and_remove_pair(edit, bit__9534, idx__9535)
      }else {
        if("\ufdd0'else") {
          return inode__9533
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__9539 = this;
  var inode__9540 = this;
  if(e === this__9539.edit) {
    return inode__9540
  }else {
    var n__9541 = cljs.core.bit_count.call(null, this__9539.bitmap);
    var new_arr__9542 = cljs.core.make_array.call(null, n__9541 < 0 ? 4 : 2 * (n__9541 + 1));
    cljs.core.array_copy.call(null, this__9539.arr, 0, new_arr__9542, 0, 2 * n__9541);
    return new cljs.core.BitmapIndexedNode(e, this__9539.bitmap, new_arr__9542)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__9543 = this;
  var inode__9544 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9543.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9545 = this;
  var inode__9546 = this;
  var bit__9547 = 1 << (hash >>> shift & 31);
  if((this__9545.bitmap & bit__9547) === 0) {
    return not_found
  }else {
    var idx__9548 = cljs.core.bitmap_indexed_node_index.call(null, this__9545.bitmap, bit__9547);
    var key_or_nil__9549 = this__9545.arr[2 * idx__9548];
    var val_or_node__9550 = this__9545.arr[2 * idx__9548 + 1];
    if(key_or_nil__9549 == null) {
      return val_or_node__9550.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9549)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__9549, val_or_node__9550], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__9551 = this;
  var inode__9552 = this;
  var bit__9553 = 1 << (hash >>> shift & 31);
  if((this__9551.bitmap & bit__9553) === 0) {
    return inode__9552
  }else {
    var idx__9554 = cljs.core.bitmap_indexed_node_index.call(null, this__9551.bitmap, bit__9553);
    var key_or_nil__9555 = this__9551.arr[2 * idx__9554];
    var val_or_node__9556 = this__9551.arr[2 * idx__9554 + 1];
    if(key_or_nil__9555 == null) {
      var n__9557 = val_or_node__9556.inode_without(shift + 5, hash, key);
      if(n__9557 === val_or_node__9556) {
        return inode__9552
      }else {
        if(!(n__9557 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__9551.bitmap, cljs.core.clone_and_set.call(null, this__9551.arr, 2 * idx__9554 + 1, n__9557))
        }else {
          if(this__9551.bitmap === bit__9553) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__9551.bitmap ^ bit__9553, cljs.core.remove_pair.call(null, this__9551.arr, idx__9554))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9555)) {
        return new cljs.core.BitmapIndexedNode(null, this__9551.bitmap ^ bit__9553, cljs.core.remove_pair.call(null, this__9551.arr, idx__9554))
      }else {
        if("\ufdd0'else") {
          return inode__9552
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9558 = this;
  var inode__9559 = this;
  var bit__9560 = 1 << (hash >>> shift & 31);
  var idx__9561 = cljs.core.bitmap_indexed_node_index.call(null, this__9558.bitmap, bit__9560);
  if((this__9558.bitmap & bit__9560) === 0) {
    var n__9562 = cljs.core.bit_count.call(null, this__9558.bitmap);
    if(n__9562 >= 16) {
      var nodes__9563 = cljs.core.make_array.call(null, 32);
      var jdx__9564 = hash >>> shift & 31;
      nodes__9563[jdx__9564] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__9565 = 0;
      var j__9566 = 0;
      while(true) {
        if(i__9565 < 32) {
          if((this__9558.bitmap >>> i__9565 & 1) === 0) {
            var G__9581 = i__9565 + 1;
            var G__9582 = j__9566;
            i__9565 = G__9581;
            j__9566 = G__9582;
            continue
          }else {
            nodes__9563[i__9565] = !(this__9558.arr[j__9566] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__9558.arr[j__9566]), this__9558.arr[j__9566], this__9558.arr[j__9566 + 1], added_leaf_QMARK_) : this__9558.arr[j__9566 + 1];
            var G__9583 = i__9565 + 1;
            var G__9584 = j__9566 + 2;
            i__9565 = G__9583;
            j__9566 = G__9584;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__9562 + 1, nodes__9563)
    }else {
      var new_arr__9567 = cljs.core.make_array.call(null, 2 * (n__9562 + 1));
      cljs.core.array_copy.call(null, this__9558.arr, 0, new_arr__9567, 0, 2 * idx__9561);
      new_arr__9567[2 * idx__9561] = key;
      new_arr__9567[2 * idx__9561 + 1] = val;
      cljs.core.array_copy.call(null, this__9558.arr, 2 * idx__9561, new_arr__9567, 2 * (idx__9561 + 1), 2 * (n__9562 - idx__9561));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__9558.bitmap | bit__9560, new_arr__9567)
    }
  }else {
    var key_or_nil__9568 = this__9558.arr[2 * idx__9561];
    var val_or_node__9569 = this__9558.arr[2 * idx__9561 + 1];
    if(key_or_nil__9568 == null) {
      var n__9570 = val_or_node__9569.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9570 === val_or_node__9569) {
        return inode__9559
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__9558.bitmap, cljs.core.clone_and_set.call(null, this__9558.arr, 2 * idx__9561 + 1, n__9570))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9568)) {
        if(val === val_or_node__9569) {
          return inode__9559
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__9558.bitmap, cljs.core.clone_and_set.call(null, this__9558.arr, 2 * idx__9561 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__9558.bitmap, cljs.core.clone_and_set.call(null, this__9558.arr, 2 * idx__9561, null, 2 * idx__9561 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__9568, val_or_node__9569, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9571 = this;
  var inode__9572 = this;
  var bit__9573 = 1 << (hash >>> shift & 31);
  if((this__9571.bitmap & bit__9573) === 0) {
    return not_found
  }else {
    var idx__9574 = cljs.core.bitmap_indexed_node_index.call(null, this__9571.bitmap, bit__9573);
    var key_or_nil__9575 = this__9571.arr[2 * idx__9574];
    var val_or_node__9576 = this__9571.arr[2 * idx__9574 + 1];
    if(key_or_nil__9575 == null) {
      return val_or_node__9576.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9575)) {
        return val_or_node__9576
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__9592 = array_node.arr;
  var len__9593 = 2 * (array_node.cnt - 1);
  var new_arr__9594 = cljs.core.make_array.call(null, len__9593);
  var i__9595 = 0;
  var j__9596 = 1;
  var bitmap__9597 = 0;
  while(true) {
    if(i__9595 < len__9593) {
      if(function() {
        var and__3822__auto____9598 = !(i__9595 === idx);
        if(and__3822__auto____9598) {
          return!(arr__9592[i__9595] == null)
        }else {
          return and__3822__auto____9598
        }
      }()) {
        new_arr__9594[j__9596] = arr__9592[i__9595];
        var G__9599 = i__9595 + 1;
        var G__9600 = j__9596 + 2;
        var G__9601 = bitmap__9597 | 1 << i__9595;
        i__9595 = G__9599;
        j__9596 = G__9600;
        bitmap__9597 = G__9601;
        continue
      }else {
        var G__9602 = i__9595 + 1;
        var G__9603 = j__9596;
        var G__9604 = bitmap__9597;
        i__9595 = G__9602;
        j__9596 = G__9603;
        bitmap__9597 = G__9604;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__9597, new_arr__9594)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9605 = this;
  var inode__9606 = this;
  var idx__9607 = hash >>> shift & 31;
  var node__9608 = this__9605.arr[idx__9607];
  if(node__9608 == null) {
    var editable__9609 = cljs.core.edit_and_set.call(null, inode__9606, edit, idx__9607, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__9609.cnt = editable__9609.cnt + 1;
    return editable__9609
  }else {
    var n__9610 = node__9608.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__9610 === node__9608) {
      return inode__9606
    }else {
      return cljs.core.edit_and_set.call(null, inode__9606, edit, idx__9607, n__9610)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__9611 = this;
  var inode__9612 = this;
  return cljs.core.create_array_node_seq.call(null, this__9611.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9613 = this;
  var inode__9614 = this;
  var idx__9615 = hash >>> shift & 31;
  var node__9616 = this__9613.arr[idx__9615];
  if(node__9616 == null) {
    return inode__9614
  }else {
    var n__9617 = node__9616.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__9617 === node__9616) {
      return inode__9614
    }else {
      if(n__9617 == null) {
        if(this__9613.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__9614, edit, idx__9615)
        }else {
          var editable__9618 = cljs.core.edit_and_set.call(null, inode__9614, edit, idx__9615, n__9617);
          editable__9618.cnt = editable__9618.cnt - 1;
          return editable__9618
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__9614, edit, idx__9615, n__9617)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__9619 = this;
  var inode__9620 = this;
  if(e === this__9619.edit) {
    return inode__9620
  }else {
    return new cljs.core.ArrayNode(e, this__9619.cnt, this__9619.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__9621 = this;
  var inode__9622 = this;
  var len__9623 = this__9621.arr.length;
  var i__9624 = 0;
  var init__9625 = init;
  while(true) {
    if(i__9624 < len__9623) {
      var node__9626 = this__9621.arr[i__9624];
      if(!(node__9626 == null)) {
        var init__9627 = node__9626.kv_reduce(f, init__9625);
        if(cljs.core.reduced_QMARK_.call(null, init__9627)) {
          return cljs.core.deref.call(null, init__9627)
        }else {
          var G__9646 = i__9624 + 1;
          var G__9647 = init__9627;
          i__9624 = G__9646;
          init__9625 = G__9647;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__9625
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9628 = this;
  var inode__9629 = this;
  var idx__9630 = hash >>> shift & 31;
  var node__9631 = this__9628.arr[idx__9630];
  if(!(node__9631 == null)) {
    return node__9631.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__9632 = this;
  var inode__9633 = this;
  var idx__9634 = hash >>> shift & 31;
  var node__9635 = this__9632.arr[idx__9634];
  if(!(node__9635 == null)) {
    var n__9636 = node__9635.inode_without(shift + 5, hash, key);
    if(n__9636 === node__9635) {
      return inode__9633
    }else {
      if(n__9636 == null) {
        if(this__9632.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__9633, null, idx__9634)
        }else {
          return new cljs.core.ArrayNode(null, this__9632.cnt - 1, cljs.core.clone_and_set.call(null, this__9632.arr, idx__9634, n__9636))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__9632.cnt, cljs.core.clone_and_set.call(null, this__9632.arr, idx__9634, n__9636))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__9633
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9637 = this;
  var inode__9638 = this;
  var idx__9639 = hash >>> shift & 31;
  var node__9640 = this__9637.arr[idx__9639];
  if(node__9640 == null) {
    return new cljs.core.ArrayNode(null, this__9637.cnt + 1, cljs.core.clone_and_set.call(null, this__9637.arr, idx__9639, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__9641 = node__9640.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__9641 === node__9640) {
      return inode__9638
    }else {
      return new cljs.core.ArrayNode(null, this__9637.cnt, cljs.core.clone_and_set.call(null, this__9637.arr, idx__9639, n__9641))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9642 = this;
  var inode__9643 = this;
  var idx__9644 = hash >>> shift & 31;
  var node__9645 = this__9642.arr[idx__9644];
  if(!(node__9645 == null)) {
    return node__9645.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__9650 = 2 * cnt;
  var i__9651 = 0;
  while(true) {
    if(i__9651 < lim__9650) {
      if(cljs.core.key_test.call(null, key, arr[i__9651])) {
        return i__9651
      }else {
        var G__9652 = i__9651 + 2;
        i__9651 = G__9652;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9653 = this;
  var inode__9654 = this;
  if(hash === this__9653.collision_hash) {
    var idx__9655 = cljs.core.hash_collision_node_find_index.call(null, this__9653.arr, this__9653.cnt, key);
    if(idx__9655 === -1) {
      if(this__9653.arr.length > 2 * this__9653.cnt) {
        var editable__9656 = cljs.core.edit_and_set.call(null, inode__9654, edit, 2 * this__9653.cnt, key, 2 * this__9653.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__9656.cnt = editable__9656.cnt + 1;
        return editable__9656
      }else {
        var len__9657 = this__9653.arr.length;
        var new_arr__9658 = cljs.core.make_array.call(null, len__9657 + 2);
        cljs.core.array_copy.call(null, this__9653.arr, 0, new_arr__9658, 0, len__9657);
        new_arr__9658[len__9657] = key;
        new_arr__9658[len__9657 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__9654.ensure_editable_array(edit, this__9653.cnt + 1, new_arr__9658)
      }
    }else {
      if(this__9653.arr[idx__9655 + 1] === val) {
        return inode__9654
      }else {
        return cljs.core.edit_and_set.call(null, inode__9654, edit, idx__9655 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__9653.collision_hash >>> shift & 31), [null, inode__9654, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__9659 = this;
  var inode__9660 = this;
  return cljs.core.create_inode_seq.call(null, this__9659.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9661 = this;
  var inode__9662 = this;
  var idx__9663 = cljs.core.hash_collision_node_find_index.call(null, this__9661.arr, this__9661.cnt, key);
  if(idx__9663 === -1) {
    return inode__9662
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__9661.cnt === 1) {
      return null
    }else {
      var editable__9664 = inode__9662.ensure_editable(edit);
      var earr__9665 = editable__9664.arr;
      earr__9665[idx__9663] = earr__9665[2 * this__9661.cnt - 2];
      earr__9665[idx__9663 + 1] = earr__9665[2 * this__9661.cnt - 1];
      earr__9665[2 * this__9661.cnt - 1] = null;
      earr__9665[2 * this__9661.cnt - 2] = null;
      editable__9664.cnt = editable__9664.cnt - 1;
      return editable__9664
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__9666 = this;
  var inode__9667 = this;
  if(e === this__9666.edit) {
    return inode__9667
  }else {
    var new_arr__9668 = cljs.core.make_array.call(null, 2 * (this__9666.cnt + 1));
    cljs.core.array_copy.call(null, this__9666.arr, 0, new_arr__9668, 0, 2 * this__9666.cnt);
    return new cljs.core.HashCollisionNode(e, this__9666.collision_hash, this__9666.cnt, new_arr__9668)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__9669 = this;
  var inode__9670 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9669.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9671 = this;
  var inode__9672 = this;
  var idx__9673 = cljs.core.hash_collision_node_find_index.call(null, this__9671.arr, this__9671.cnt, key);
  if(idx__9673 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__9671.arr[idx__9673])) {
      return cljs.core.PersistentVector.fromArray([this__9671.arr[idx__9673], this__9671.arr[idx__9673 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__9674 = this;
  var inode__9675 = this;
  var idx__9676 = cljs.core.hash_collision_node_find_index.call(null, this__9674.arr, this__9674.cnt, key);
  if(idx__9676 === -1) {
    return inode__9675
  }else {
    if(this__9674.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__9674.collision_hash, this__9674.cnt - 1, cljs.core.remove_pair.call(null, this__9674.arr, cljs.core.quot.call(null, idx__9676, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9677 = this;
  var inode__9678 = this;
  if(hash === this__9677.collision_hash) {
    var idx__9679 = cljs.core.hash_collision_node_find_index.call(null, this__9677.arr, this__9677.cnt, key);
    if(idx__9679 === -1) {
      var len__9680 = this__9677.arr.length;
      var new_arr__9681 = cljs.core.make_array.call(null, len__9680 + 2);
      cljs.core.array_copy.call(null, this__9677.arr, 0, new_arr__9681, 0, len__9680);
      new_arr__9681[len__9680] = key;
      new_arr__9681[len__9680 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__9677.collision_hash, this__9677.cnt + 1, new_arr__9681)
    }else {
      if(cljs.core._EQ_.call(null, this__9677.arr[idx__9679], val)) {
        return inode__9678
      }else {
        return new cljs.core.HashCollisionNode(null, this__9677.collision_hash, this__9677.cnt, cljs.core.clone_and_set.call(null, this__9677.arr, idx__9679 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__9677.collision_hash >>> shift & 31), [null, inode__9678])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9682 = this;
  var inode__9683 = this;
  var idx__9684 = cljs.core.hash_collision_node_find_index.call(null, this__9682.arr, this__9682.cnt, key);
  if(idx__9684 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__9682.arr[idx__9684])) {
      return this__9682.arr[idx__9684 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__9685 = this;
  var inode__9686 = this;
  if(e === this__9685.edit) {
    this__9685.arr = array;
    this__9685.cnt = count;
    return inode__9686
  }else {
    return new cljs.core.HashCollisionNode(this__9685.edit, this__9685.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__9691 = cljs.core.hash.call(null, key1);
    if(key1hash__9691 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__9691, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___9692 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__9691, key1, val1, added_leaf_QMARK___9692).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___9692)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__9693 = cljs.core.hash.call(null, key1);
    if(key1hash__9693 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__9693, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___9694 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__9693, key1, val1, added_leaf_QMARK___9694).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___9694)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9695 = this;
  var h__2192__auto____9696 = this__9695.__hash;
  if(!(h__2192__auto____9696 == null)) {
    return h__2192__auto____9696
  }else {
    var h__2192__auto____9697 = cljs.core.hash_coll.call(null, coll);
    this__9695.__hash = h__2192__auto____9697;
    return h__2192__auto____9697
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9698 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__9699 = this;
  var this__9700 = this;
  return cljs.core.pr_str.call(null, this__9700)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9701 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9702 = this;
  if(this__9702.s == null) {
    return cljs.core.PersistentVector.fromArray([this__9702.nodes[this__9702.i], this__9702.nodes[this__9702.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__9702.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9703 = this;
  if(this__9703.s == null) {
    return cljs.core.create_inode_seq.call(null, this__9703.nodes, this__9703.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__9703.nodes, this__9703.i, cljs.core.next.call(null, this__9703.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9704 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9705 = this;
  return new cljs.core.NodeSeq(meta, this__9705.nodes, this__9705.i, this__9705.s, this__9705.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9706 = this;
  return this__9706.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9707 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9707.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__9714 = nodes.length;
      var j__9715 = i;
      while(true) {
        if(j__9715 < len__9714) {
          if(!(nodes[j__9715] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__9715, null, null)
          }else {
            var temp__3971__auto____9716 = nodes[j__9715 + 1];
            if(cljs.core.truth_(temp__3971__auto____9716)) {
              var node__9717 = temp__3971__auto____9716;
              var temp__3971__auto____9718 = node__9717.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____9718)) {
                var node_seq__9719 = temp__3971__auto____9718;
                return new cljs.core.NodeSeq(null, nodes, j__9715 + 2, node_seq__9719, null)
              }else {
                var G__9720 = j__9715 + 2;
                j__9715 = G__9720;
                continue
              }
            }else {
              var G__9721 = j__9715 + 2;
              j__9715 = G__9721;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9722 = this;
  var h__2192__auto____9723 = this__9722.__hash;
  if(!(h__2192__auto____9723 == null)) {
    return h__2192__auto____9723
  }else {
    var h__2192__auto____9724 = cljs.core.hash_coll.call(null, coll);
    this__9722.__hash = h__2192__auto____9724;
    return h__2192__auto____9724
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9725 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__9726 = this;
  var this__9727 = this;
  return cljs.core.pr_str.call(null, this__9727)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9728 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9729 = this;
  return cljs.core.first.call(null, this__9729.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9730 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__9730.nodes, this__9730.i, cljs.core.next.call(null, this__9730.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9731 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9732 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__9732.nodes, this__9732.i, this__9732.s, this__9732.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9733 = this;
  return this__9733.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9734 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9734.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__9741 = nodes.length;
      var j__9742 = i;
      while(true) {
        if(j__9742 < len__9741) {
          var temp__3971__auto____9743 = nodes[j__9742];
          if(cljs.core.truth_(temp__3971__auto____9743)) {
            var nj__9744 = temp__3971__auto____9743;
            var temp__3971__auto____9745 = nj__9744.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____9745)) {
              var ns__9746 = temp__3971__auto____9745;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__9742 + 1, ns__9746, null)
            }else {
              var G__9747 = j__9742 + 1;
              j__9742 = G__9747;
              continue
            }
          }else {
            var G__9748 = j__9742 + 1;
            j__9742 = G__9748;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9751 = this;
  return new cljs.core.TransientHashMap({}, this__9751.root, this__9751.cnt, this__9751.has_nil_QMARK_, this__9751.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9752 = this;
  var h__2192__auto____9753 = this__9752.__hash;
  if(!(h__2192__auto____9753 == null)) {
    return h__2192__auto____9753
  }else {
    var h__2192__auto____9754 = cljs.core.hash_imap.call(null, coll);
    this__9752.__hash = h__2192__auto____9754;
    return h__2192__auto____9754
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9755 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9756 = this;
  if(k == null) {
    if(this__9756.has_nil_QMARK_) {
      return this__9756.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__9756.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__9756.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9757 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____9758 = this__9757.has_nil_QMARK_;
      if(and__3822__auto____9758) {
        return v === this__9757.nil_val
      }else {
        return and__3822__auto____9758
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__9757.meta, this__9757.has_nil_QMARK_ ? this__9757.cnt : this__9757.cnt + 1, this__9757.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___9759 = new cljs.core.Box(false);
    var new_root__9760 = (this__9757.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__9757.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___9759);
    if(new_root__9760 === this__9757.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__9757.meta, added_leaf_QMARK___9759.val ? this__9757.cnt + 1 : this__9757.cnt, new_root__9760, this__9757.has_nil_QMARK_, this__9757.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9761 = this;
  if(k == null) {
    return this__9761.has_nil_QMARK_
  }else {
    if(this__9761.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__9761.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9784 = null;
  var G__9784__2 = function(this_sym9762, k) {
    var this__9764 = this;
    var this_sym9762__9765 = this;
    var coll__9766 = this_sym9762__9765;
    return coll__9766.cljs$core$ILookup$_lookup$arity$2(coll__9766, k)
  };
  var G__9784__3 = function(this_sym9763, k, not_found) {
    var this__9764 = this;
    var this_sym9763__9767 = this;
    var coll__9768 = this_sym9763__9767;
    return coll__9768.cljs$core$ILookup$_lookup$arity$3(coll__9768, k, not_found)
  };
  G__9784 = function(this_sym9763, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9784__2.call(this, this_sym9763, k);
      case 3:
        return G__9784__3.call(this, this_sym9763, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9784
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym9749, args9750) {
  var this__9769 = this;
  return this_sym9749.call.apply(this_sym9749, [this_sym9749].concat(args9750.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9770 = this;
  var init__9771 = this__9770.has_nil_QMARK_ ? f.call(null, init, null, this__9770.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__9771)) {
    return cljs.core.deref.call(null, init__9771)
  }else {
    if(!(this__9770.root == null)) {
      return this__9770.root.kv_reduce(f, init__9771)
    }else {
      if("\ufdd0'else") {
        return init__9771
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9772 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__9773 = this;
  var this__9774 = this;
  return cljs.core.pr_str.call(null, this__9774)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9775 = this;
  if(this__9775.cnt > 0) {
    var s__9776 = !(this__9775.root == null) ? this__9775.root.inode_seq() : null;
    if(this__9775.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__9775.nil_val], true), s__9776)
    }else {
      return s__9776
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9777 = this;
  return this__9777.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9778 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9779 = this;
  return new cljs.core.PersistentHashMap(meta, this__9779.cnt, this__9779.root, this__9779.has_nil_QMARK_, this__9779.nil_val, this__9779.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9780 = this;
  return this__9780.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9781 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__9781.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9782 = this;
  if(k == null) {
    if(this__9782.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__9782.meta, this__9782.cnt - 1, this__9782.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__9782.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__9783 = this__9782.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__9783 === this__9782.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__9782.meta, this__9782.cnt - 1, new_root__9783, this__9782.has_nil_QMARK_, this__9782.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__9785 = ks.length;
  var i__9786 = 0;
  var out__9787 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__9786 < len__9785) {
      var G__9788 = i__9786 + 1;
      var G__9789 = cljs.core.assoc_BANG_.call(null, out__9787, ks[i__9786], vs[i__9786]);
      i__9786 = G__9788;
      out__9787 = G__9789;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9787)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9790 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9791 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__9792 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9793 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9794 = this;
  if(k == null) {
    if(this__9794.has_nil_QMARK_) {
      return this__9794.nil_val
    }else {
      return null
    }
  }else {
    if(this__9794.root == null) {
      return null
    }else {
      return this__9794.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9795 = this;
  if(k == null) {
    if(this__9795.has_nil_QMARK_) {
      return this__9795.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__9795.root == null) {
      return not_found
    }else {
      return this__9795.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9796 = this;
  if(this__9796.edit) {
    return this__9796.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__9797 = this;
  var tcoll__9798 = this;
  if(this__9797.edit) {
    if(function() {
      var G__9799__9800 = o;
      if(G__9799__9800) {
        if(function() {
          var or__3824__auto____9801 = G__9799__9800.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____9801) {
            return or__3824__auto____9801
          }else {
            return G__9799__9800.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9799__9800.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9799__9800)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9799__9800)
      }
    }()) {
      return tcoll__9798.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9802 = cljs.core.seq.call(null, o);
      var tcoll__9803 = tcoll__9798;
      while(true) {
        var temp__3971__auto____9804 = cljs.core.first.call(null, es__9802);
        if(cljs.core.truth_(temp__3971__auto____9804)) {
          var e__9805 = temp__3971__auto____9804;
          var G__9816 = cljs.core.next.call(null, es__9802);
          var G__9817 = tcoll__9803.assoc_BANG_(cljs.core.key.call(null, e__9805), cljs.core.val.call(null, e__9805));
          es__9802 = G__9816;
          tcoll__9803 = G__9817;
          continue
        }else {
          return tcoll__9803
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__9806 = this;
  var tcoll__9807 = this;
  if(this__9806.edit) {
    if(k == null) {
      if(this__9806.nil_val === v) {
      }else {
        this__9806.nil_val = v
      }
      if(this__9806.has_nil_QMARK_) {
      }else {
        this__9806.count = this__9806.count + 1;
        this__9806.has_nil_QMARK_ = true
      }
      return tcoll__9807
    }else {
      var added_leaf_QMARK___9808 = new cljs.core.Box(false);
      var node__9809 = (this__9806.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__9806.root).inode_assoc_BANG_(this__9806.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___9808);
      if(node__9809 === this__9806.root) {
      }else {
        this__9806.root = node__9809
      }
      if(added_leaf_QMARK___9808.val) {
        this__9806.count = this__9806.count + 1
      }else {
      }
      return tcoll__9807
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__9810 = this;
  var tcoll__9811 = this;
  if(this__9810.edit) {
    if(k == null) {
      if(this__9810.has_nil_QMARK_) {
        this__9810.has_nil_QMARK_ = false;
        this__9810.nil_val = null;
        this__9810.count = this__9810.count - 1;
        return tcoll__9811
      }else {
        return tcoll__9811
      }
    }else {
      if(this__9810.root == null) {
        return tcoll__9811
      }else {
        var removed_leaf_QMARK___9812 = new cljs.core.Box(false);
        var node__9813 = this__9810.root.inode_without_BANG_(this__9810.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___9812);
        if(node__9813 === this__9810.root) {
        }else {
          this__9810.root = node__9813
        }
        if(cljs.core.truth_(removed_leaf_QMARK___9812[0])) {
          this__9810.count = this__9810.count - 1
        }else {
        }
        return tcoll__9811
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__9814 = this;
  var tcoll__9815 = this;
  if(this__9814.edit) {
    this__9814.edit = null;
    return new cljs.core.PersistentHashMap(null, this__9814.count, this__9814.root, this__9814.has_nil_QMARK_, this__9814.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__9820 = node;
  var stack__9821 = stack;
  while(true) {
    if(!(t__9820 == null)) {
      var G__9822 = ascending_QMARK_ ? t__9820.left : t__9820.right;
      var G__9823 = cljs.core.conj.call(null, stack__9821, t__9820);
      t__9820 = G__9822;
      stack__9821 = G__9823;
      continue
    }else {
      return stack__9821
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9824 = this;
  var h__2192__auto____9825 = this__9824.__hash;
  if(!(h__2192__auto____9825 == null)) {
    return h__2192__auto____9825
  }else {
    var h__2192__auto____9826 = cljs.core.hash_coll.call(null, coll);
    this__9824.__hash = h__2192__auto____9826;
    return h__2192__auto____9826
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9827 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__9828 = this;
  var this__9829 = this;
  return cljs.core.pr_str.call(null, this__9829)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9830 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9831 = this;
  if(this__9831.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__9831.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__9832 = this;
  return cljs.core.peek.call(null, this__9832.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__9833 = this;
  var t__9834 = cljs.core.first.call(null, this__9833.stack);
  var next_stack__9835 = cljs.core.tree_map_seq_push.call(null, this__9833.ascending_QMARK_ ? t__9834.right : t__9834.left, cljs.core.next.call(null, this__9833.stack), this__9833.ascending_QMARK_);
  if(!(next_stack__9835 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__9835, this__9833.ascending_QMARK_, this__9833.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9836 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9837 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__9837.stack, this__9837.ascending_QMARK_, this__9837.cnt, this__9837.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9838 = this;
  return this__9838.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____9840 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____9840) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____9840
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____9842 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____9842) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____9842
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__9846 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__9846)) {
    return cljs.core.deref.call(null, init__9846)
  }else {
    var init__9847 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__9846) : init__9846;
    if(cljs.core.reduced_QMARK_.call(null, init__9847)) {
      return cljs.core.deref.call(null, init__9847)
    }else {
      var init__9848 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__9847) : init__9847;
      if(cljs.core.reduced_QMARK_.call(null, init__9848)) {
        return cljs.core.deref.call(null, init__9848)
      }else {
        return init__9848
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9851 = this;
  var h__2192__auto____9852 = this__9851.__hash;
  if(!(h__2192__auto____9852 == null)) {
    return h__2192__auto____9852
  }else {
    var h__2192__auto____9853 = cljs.core.hash_coll.call(null, coll);
    this__9851.__hash = h__2192__auto____9853;
    return h__2192__auto____9853
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__9854 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__9855 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__9856 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__9856.key, this__9856.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9904 = null;
  var G__9904__2 = function(this_sym9857, k) {
    var this__9859 = this;
    var this_sym9857__9860 = this;
    var node__9861 = this_sym9857__9860;
    return node__9861.cljs$core$ILookup$_lookup$arity$2(node__9861, k)
  };
  var G__9904__3 = function(this_sym9858, k, not_found) {
    var this__9859 = this;
    var this_sym9858__9862 = this;
    var node__9863 = this_sym9858__9862;
    return node__9863.cljs$core$ILookup$_lookup$arity$3(node__9863, k, not_found)
  };
  G__9904 = function(this_sym9858, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9904__2.call(this, this_sym9858, k);
      case 3:
        return G__9904__3.call(this, this_sym9858, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9904
}();
cljs.core.BlackNode.prototype.apply = function(this_sym9849, args9850) {
  var this__9864 = this;
  return this_sym9849.call.apply(this_sym9849, [this_sym9849].concat(args9850.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__9865 = this;
  return cljs.core.PersistentVector.fromArray([this__9865.key, this__9865.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__9866 = this;
  return this__9866.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__9867 = this;
  return this__9867.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__9868 = this;
  var node__9869 = this;
  return ins.balance_right(node__9869)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__9870 = this;
  var node__9871 = this;
  return new cljs.core.RedNode(this__9870.key, this__9870.val, this__9870.left, this__9870.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__9872 = this;
  var node__9873 = this;
  return cljs.core.balance_right_del.call(null, this__9872.key, this__9872.val, this__9872.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__9874 = this;
  var node__9875 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__9876 = this;
  var node__9877 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__9877, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__9878 = this;
  var node__9879 = this;
  return cljs.core.balance_left_del.call(null, this__9878.key, this__9878.val, del, this__9878.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__9880 = this;
  var node__9881 = this;
  return ins.balance_left(node__9881)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__9882 = this;
  var node__9883 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__9883, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__9905 = null;
  var G__9905__0 = function() {
    var this__9884 = this;
    var this__9886 = this;
    return cljs.core.pr_str.call(null, this__9886)
  };
  G__9905 = function() {
    switch(arguments.length) {
      case 0:
        return G__9905__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9905
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__9887 = this;
  var node__9888 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__9888, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__9889 = this;
  var node__9890 = this;
  return node__9890
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__9891 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__9892 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__9893 = this;
  return cljs.core.list.call(null, this__9893.key, this__9893.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__9894 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__9895 = this;
  return this__9895.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__9896 = this;
  return cljs.core.PersistentVector.fromArray([this__9896.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__9897 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__9897.key, this__9897.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9898 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__9899 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__9899.key, this__9899.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__9900 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__9901 = this;
  if(n === 0) {
    return this__9901.key
  }else {
    if(n === 1) {
      return this__9901.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__9902 = this;
  if(n === 0) {
    return this__9902.key
  }else {
    if(n === 1) {
      return this__9902.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__9903 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9908 = this;
  var h__2192__auto____9909 = this__9908.__hash;
  if(!(h__2192__auto____9909 == null)) {
    return h__2192__auto____9909
  }else {
    var h__2192__auto____9910 = cljs.core.hash_coll.call(null, coll);
    this__9908.__hash = h__2192__auto____9910;
    return h__2192__auto____9910
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__9911 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__9912 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__9913 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__9913.key, this__9913.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__9961 = null;
  var G__9961__2 = function(this_sym9914, k) {
    var this__9916 = this;
    var this_sym9914__9917 = this;
    var node__9918 = this_sym9914__9917;
    return node__9918.cljs$core$ILookup$_lookup$arity$2(node__9918, k)
  };
  var G__9961__3 = function(this_sym9915, k, not_found) {
    var this__9916 = this;
    var this_sym9915__9919 = this;
    var node__9920 = this_sym9915__9919;
    return node__9920.cljs$core$ILookup$_lookup$arity$3(node__9920, k, not_found)
  };
  G__9961 = function(this_sym9915, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9961__2.call(this, this_sym9915, k);
      case 3:
        return G__9961__3.call(this, this_sym9915, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9961
}();
cljs.core.RedNode.prototype.apply = function(this_sym9906, args9907) {
  var this__9921 = this;
  return this_sym9906.call.apply(this_sym9906, [this_sym9906].concat(args9907.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__9922 = this;
  return cljs.core.PersistentVector.fromArray([this__9922.key, this__9922.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__9923 = this;
  return this__9923.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__9924 = this;
  return this__9924.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__9925 = this;
  var node__9926 = this;
  return new cljs.core.RedNode(this__9925.key, this__9925.val, this__9925.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__9927 = this;
  var node__9928 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__9929 = this;
  var node__9930 = this;
  return new cljs.core.RedNode(this__9929.key, this__9929.val, this__9929.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__9931 = this;
  var node__9932 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__9933 = this;
  var node__9934 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__9934, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__9935 = this;
  var node__9936 = this;
  return new cljs.core.RedNode(this__9935.key, this__9935.val, del, this__9935.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__9937 = this;
  var node__9938 = this;
  return new cljs.core.RedNode(this__9937.key, this__9937.val, ins, this__9937.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__9939 = this;
  var node__9940 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9939.left)) {
    return new cljs.core.RedNode(this__9939.key, this__9939.val, this__9939.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__9939.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9939.right)) {
      return new cljs.core.RedNode(this__9939.right.key, this__9939.right.val, new cljs.core.BlackNode(this__9939.key, this__9939.val, this__9939.left, this__9939.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__9939.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__9940, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__9962 = null;
  var G__9962__0 = function() {
    var this__9941 = this;
    var this__9943 = this;
    return cljs.core.pr_str.call(null, this__9943)
  };
  G__9962 = function() {
    switch(arguments.length) {
      case 0:
        return G__9962__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9962
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__9944 = this;
  var node__9945 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9944.right)) {
    return new cljs.core.RedNode(this__9944.key, this__9944.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__9944.left, null), this__9944.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9944.left)) {
      return new cljs.core.RedNode(this__9944.left.key, this__9944.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__9944.left.left, null), new cljs.core.BlackNode(this__9944.key, this__9944.val, this__9944.left.right, this__9944.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__9945, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__9946 = this;
  var node__9947 = this;
  return new cljs.core.BlackNode(this__9946.key, this__9946.val, this__9946.left, this__9946.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__9948 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__9949 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__9950 = this;
  return cljs.core.list.call(null, this__9950.key, this__9950.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__9951 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__9952 = this;
  return this__9952.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__9953 = this;
  return cljs.core.PersistentVector.fromArray([this__9953.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__9954 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__9954.key, this__9954.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9955 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__9956 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__9956.key, this__9956.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__9957 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__9958 = this;
  if(n === 0) {
    return this__9958.key
  }else {
    if(n === 1) {
      return this__9958.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__9959 = this;
  if(n === 0) {
    return this__9959.key
  }else {
    if(n === 1) {
      return this__9959.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__9960 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__9966 = comp.call(null, k, tree.key);
    if(c__9966 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__9966 < 0) {
        var ins__9967 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__9967 == null)) {
          return tree.add_left(ins__9967)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__9968 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__9968 == null)) {
            return tree.add_right(ins__9968)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__9971 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__9971)) {
            return new cljs.core.RedNode(app__9971.key, app__9971.val, new cljs.core.RedNode(left.key, left.val, left.left, app__9971.left, null), new cljs.core.RedNode(right.key, right.val, app__9971.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__9971, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__9972 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__9972)) {
              return new cljs.core.RedNode(app__9972.key, app__9972.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__9972.left, null), new cljs.core.BlackNode(right.key, right.val, app__9972.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__9972, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__9978 = comp.call(null, k, tree.key);
    if(c__9978 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__9978 < 0) {
        var del__9979 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____9980 = !(del__9979 == null);
          if(or__3824__auto____9980) {
            return or__3824__auto____9980
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__9979, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__9979, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__9981 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____9982 = !(del__9981 == null);
            if(or__3824__auto____9982) {
              return or__3824__auto____9982
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__9981)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__9981, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__9985 = tree.key;
  var c__9986 = comp.call(null, k, tk__9985);
  if(c__9986 === 0) {
    return tree.replace(tk__9985, v, tree.left, tree.right)
  }else {
    if(c__9986 < 0) {
      return tree.replace(tk__9985, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__9985, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9989 = this;
  var h__2192__auto____9990 = this__9989.__hash;
  if(!(h__2192__auto____9990 == null)) {
    return h__2192__auto____9990
  }else {
    var h__2192__auto____9991 = cljs.core.hash_imap.call(null, coll);
    this__9989.__hash = h__2192__auto____9991;
    return h__2192__auto____9991
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9992 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9993 = this;
  var n__9994 = coll.entry_at(k);
  if(!(n__9994 == null)) {
    return n__9994.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9995 = this;
  var found__9996 = [null];
  var t__9997 = cljs.core.tree_map_add.call(null, this__9995.comp, this__9995.tree, k, v, found__9996);
  if(t__9997 == null) {
    var found_node__9998 = cljs.core.nth.call(null, found__9996, 0);
    if(cljs.core._EQ_.call(null, v, found_node__9998.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__9995.comp, cljs.core.tree_map_replace.call(null, this__9995.comp, this__9995.tree, k, v), this__9995.cnt, this__9995.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__9995.comp, t__9997.blacken(), this__9995.cnt + 1, this__9995.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9999 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10033 = null;
  var G__10033__2 = function(this_sym10000, k) {
    var this__10002 = this;
    var this_sym10000__10003 = this;
    var coll__10004 = this_sym10000__10003;
    return coll__10004.cljs$core$ILookup$_lookup$arity$2(coll__10004, k)
  };
  var G__10033__3 = function(this_sym10001, k, not_found) {
    var this__10002 = this;
    var this_sym10001__10005 = this;
    var coll__10006 = this_sym10001__10005;
    return coll__10006.cljs$core$ILookup$_lookup$arity$3(coll__10006, k, not_found)
  };
  G__10033 = function(this_sym10001, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10033__2.call(this, this_sym10001, k);
      case 3:
        return G__10033__3.call(this, this_sym10001, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10033
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym9987, args9988) {
  var this__10007 = this;
  return this_sym9987.call.apply(this_sym9987, [this_sym9987].concat(args9988.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10008 = this;
  if(!(this__10008.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10008.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10009 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10010 = this;
  if(this__10010.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10010.tree, false, this__10010.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10011 = this;
  var this__10012 = this;
  return cljs.core.pr_str.call(null, this__10012)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10013 = this;
  var coll__10014 = this;
  var t__10015 = this__10013.tree;
  while(true) {
    if(!(t__10015 == null)) {
      var c__10016 = this__10013.comp.call(null, k, t__10015.key);
      if(c__10016 === 0) {
        return t__10015
      }else {
        if(c__10016 < 0) {
          var G__10034 = t__10015.left;
          t__10015 = G__10034;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10035 = t__10015.right;
            t__10015 = G__10035;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10017 = this;
  if(this__10017.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10017.tree, ascending_QMARK_, this__10017.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10018 = this;
  if(this__10018.cnt > 0) {
    var stack__10019 = null;
    var t__10020 = this__10018.tree;
    while(true) {
      if(!(t__10020 == null)) {
        var c__10021 = this__10018.comp.call(null, k, t__10020.key);
        if(c__10021 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10019, t__10020), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10021 < 0) {
              var G__10036 = cljs.core.conj.call(null, stack__10019, t__10020);
              var G__10037 = t__10020.left;
              stack__10019 = G__10036;
              t__10020 = G__10037;
              continue
            }else {
              var G__10038 = stack__10019;
              var G__10039 = t__10020.right;
              stack__10019 = G__10038;
              t__10020 = G__10039;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10021 > 0) {
                var G__10040 = cljs.core.conj.call(null, stack__10019, t__10020);
                var G__10041 = t__10020.right;
                stack__10019 = G__10040;
                t__10020 = G__10041;
                continue
              }else {
                var G__10042 = stack__10019;
                var G__10043 = t__10020.left;
                stack__10019 = G__10042;
                t__10020 = G__10043;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10019 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10019, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10022 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10023 = this;
  return this__10023.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10024 = this;
  if(this__10024.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10024.tree, true, this__10024.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10025 = this;
  return this__10025.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10026 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10027 = this;
  return new cljs.core.PersistentTreeMap(this__10027.comp, this__10027.tree, this__10027.cnt, meta, this__10027.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10028 = this;
  return this__10028.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10029 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10029.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10030 = this;
  var found__10031 = [null];
  var t__10032 = cljs.core.tree_map_remove.call(null, this__10030.comp, this__10030.tree, k, found__10031);
  if(t__10032 == null) {
    if(cljs.core.nth.call(null, found__10031, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10030.comp, null, 0, this__10030.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10030.comp, t__10032.blacken(), this__10030.cnt - 1, this__10030.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10046 = cljs.core.seq.call(null, keyvals);
    var out__10047 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10046) {
        var G__10048 = cljs.core.nnext.call(null, in__10046);
        var G__10049 = cljs.core.assoc_BANG_.call(null, out__10047, cljs.core.first.call(null, in__10046), cljs.core.second.call(null, in__10046));
        in__10046 = G__10048;
        out__10047 = G__10049;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10047)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10050) {
    var keyvals = cljs.core.seq(arglist__10050);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10051) {
    var keyvals = cljs.core.seq(arglist__10051);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10055 = [];
    var obj__10056 = {};
    var kvs__10057 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10057) {
        ks__10055.push(cljs.core.first.call(null, kvs__10057));
        obj__10056[cljs.core.first.call(null, kvs__10057)] = cljs.core.second.call(null, kvs__10057);
        var G__10058 = cljs.core.nnext.call(null, kvs__10057);
        kvs__10057 = G__10058;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10055, obj__10056)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10059) {
    var keyvals = cljs.core.seq(arglist__10059);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10062 = cljs.core.seq.call(null, keyvals);
    var out__10063 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10062) {
        var G__10064 = cljs.core.nnext.call(null, in__10062);
        var G__10065 = cljs.core.assoc.call(null, out__10063, cljs.core.first.call(null, in__10062), cljs.core.second.call(null, in__10062));
        in__10062 = G__10064;
        out__10063 = G__10065;
        continue
      }else {
        return out__10063
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10066) {
    var keyvals = cljs.core.seq(arglist__10066);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10069 = cljs.core.seq.call(null, keyvals);
    var out__10070 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10069) {
        var G__10071 = cljs.core.nnext.call(null, in__10069);
        var G__10072 = cljs.core.assoc.call(null, out__10070, cljs.core.first.call(null, in__10069), cljs.core.second.call(null, in__10069));
        in__10069 = G__10071;
        out__10070 = G__10072;
        continue
      }else {
        return out__10070
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10073) {
    var comparator = cljs.core.first(arglist__10073);
    var keyvals = cljs.core.rest(arglist__10073);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10074_SHARP_, p2__10075_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____10077 = p1__10074_SHARP_;
          if(cljs.core.truth_(or__3824__auto____10077)) {
            return or__3824__auto____10077
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10075_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10078) {
    var maps = cljs.core.seq(arglist__10078);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10086 = function(m, e) {
        var k__10084 = cljs.core.first.call(null, e);
        var v__10085 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10084)) {
          return cljs.core.assoc.call(null, m, k__10084, f.call(null, cljs.core._lookup.call(null, m, k__10084, null), v__10085))
        }else {
          return cljs.core.assoc.call(null, m, k__10084, v__10085)
        }
      };
      var merge2__10088 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10086, function() {
          var or__3824__auto____10087 = m1;
          if(cljs.core.truth_(or__3824__auto____10087)) {
            return or__3824__auto____10087
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10088, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10089) {
    var f = cljs.core.first(arglist__10089);
    var maps = cljs.core.rest(arglist__10089);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10094 = cljs.core.ObjMap.EMPTY;
  var keys__10095 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10095) {
      var key__10096 = cljs.core.first.call(null, keys__10095);
      var entry__10097 = cljs.core._lookup.call(null, map, key__10096, "\ufdd0'cljs.core/not-found");
      var G__10098 = cljs.core.not_EQ_.call(null, entry__10097, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10094, key__10096, entry__10097) : ret__10094;
      var G__10099 = cljs.core.next.call(null, keys__10095);
      ret__10094 = G__10098;
      keys__10095 = G__10099;
      continue
    }else {
      return ret__10094
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10103 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10103.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10104 = this;
  var h__2192__auto____10105 = this__10104.__hash;
  if(!(h__2192__auto____10105 == null)) {
    return h__2192__auto____10105
  }else {
    var h__2192__auto____10106 = cljs.core.hash_iset.call(null, coll);
    this__10104.__hash = h__2192__auto____10106;
    return h__2192__auto____10106
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10107 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10108 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10108.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10129 = null;
  var G__10129__2 = function(this_sym10109, k) {
    var this__10111 = this;
    var this_sym10109__10112 = this;
    var coll__10113 = this_sym10109__10112;
    return coll__10113.cljs$core$ILookup$_lookup$arity$2(coll__10113, k)
  };
  var G__10129__3 = function(this_sym10110, k, not_found) {
    var this__10111 = this;
    var this_sym10110__10114 = this;
    var coll__10115 = this_sym10110__10114;
    return coll__10115.cljs$core$ILookup$_lookup$arity$3(coll__10115, k, not_found)
  };
  G__10129 = function(this_sym10110, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10129__2.call(this, this_sym10110, k);
      case 3:
        return G__10129__3.call(this, this_sym10110, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10129
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10101, args10102) {
  var this__10116 = this;
  return this_sym10101.call.apply(this_sym10101, [this_sym10101].concat(args10102.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10117 = this;
  return new cljs.core.PersistentHashSet(this__10117.meta, cljs.core.assoc.call(null, this__10117.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10118 = this;
  var this__10119 = this;
  return cljs.core.pr_str.call(null, this__10119)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10120 = this;
  return cljs.core.keys.call(null, this__10120.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10121 = this;
  return new cljs.core.PersistentHashSet(this__10121.meta, cljs.core.dissoc.call(null, this__10121.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10122 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10123 = this;
  var and__3822__auto____10124 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10124) {
    var and__3822__auto____10125 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10125) {
      return cljs.core.every_QMARK_.call(null, function(p1__10100_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10100_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10125
    }
  }else {
    return and__3822__auto____10124
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10126 = this;
  return new cljs.core.PersistentHashSet(meta, this__10126.hash_map, this__10126.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10127 = this;
  return this__10127.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10128 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10128.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10130 = cljs.core.count.call(null, items);
  var i__10131 = 0;
  var out__10132 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10131 < len__10130) {
      var G__10133 = i__10131 + 1;
      var G__10134 = cljs.core.conj_BANG_.call(null, out__10132, items[i__10131]);
      i__10131 = G__10133;
      out__10132 = G__10134;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10132)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10152 = null;
  var G__10152__2 = function(this_sym10138, k) {
    var this__10140 = this;
    var this_sym10138__10141 = this;
    var tcoll__10142 = this_sym10138__10141;
    if(cljs.core._lookup.call(null, this__10140.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10152__3 = function(this_sym10139, k, not_found) {
    var this__10140 = this;
    var this_sym10139__10143 = this;
    var tcoll__10144 = this_sym10139__10143;
    if(cljs.core._lookup.call(null, this__10140.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10152 = function(this_sym10139, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10152__2.call(this, this_sym10139, k);
      case 3:
        return G__10152__3.call(this, this_sym10139, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10152
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10136, args10137) {
  var this__10145 = this;
  return this_sym10136.call.apply(this_sym10136, [this_sym10136].concat(args10137.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10146 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10147 = this;
  if(cljs.core._lookup.call(null, this__10147.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10148 = this;
  return cljs.core.count.call(null, this__10148.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10149 = this;
  this__10149.transient_map = cljs.core.dissoc_BANG_.call(null, this__10149.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10150 = this;
  this__10150.transient_map = cljs.core.assoc_BANG_.call(null, this__10150.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10151 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10151.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10155 = this;
  var h__2192__auto____10156 = this__10155.__hash;
  if(!(h__2192__auto____10156 == null)) {
    return h__2192__auto____10156
  }else {
    var h__2192__auto____10157 = cljs.core.hash_iset.call(null, coll);
    this__10155.__hash = h__2192__auto____10157;
    return h__2192__auto____10157
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10158 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10159 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10159.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10185 = null;
  var G__10185__2 = function(this_sym10160, k) {
    var this__10162 = this;
    var this_sym10160__10163 = this;
    var coll__10164 = this_sym10160__10163;
    return coll__10164.cljs$core$ILookup$_lookup$arity$2(coll__10164, k)
  };
  var G__10185__3 = function(this_sym10161, k, not_found) {
    var this__10162 = this;
    var this_sym10161__10165 = this;
    var coll__10166 = this_sym10161__10165;
    return coll__10166.cljs$core$ILookup$_lookup$arity$3(coll__10166, k, not_found)
  };
  G__10185 = function(this_sym10161, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10185__2.call(this, this_sym10161, k);
      case 3:
        return G__10185__3.call(this, this_sym10161, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10185
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10153, args10154) {
  var this__10167 = this;
  return this_sym10153.call.apply(this_sym10153, [this_sym10153].concat(args10154.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10168 = this;
  return new cljs.core.PersistentTreeSet(this__10168.meta, cljs.core.assoc.call(null, this__10168.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10169 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10169.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10170 = this;
  var this__10171 = this;
  return cljs.core.pr_str.call(null, this__10171)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10172 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10172.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10173 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10173.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10174 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10175 = this;
  return cljs.core._comparator.call(null, this__10175.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10176 = this;
  return cljs.core.keys.call(null, this__10176.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10177 = this;
  return new cljs.core.PersistentTreeSet(this__10177.meta, cljs.core.dissoc.call(null, this__10177.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10178 = this;
  return cljs.core.count.call(null, this__10178.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10179 = this;
  var and__3822__auto____10180 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10180) {
    var and__3822__auto____10181 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10181) {
      return cljs.core.every_QMARK_.call(null, function(p1__10135_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10135_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10181
    }
  }else {
    return and__3822__auto____10180
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10182 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10182.tree_map, this__10182.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10183 = this;
  return this__10183.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10184 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10184.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10190__delegate = function(keys) {
      var in__10188 = cljs.core.seq.call(null, keys);
      var out__10189 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10188)) {
          var G__10191 = cljs.core.next.call(null, in__10188);
          var G__10192 = cljs.core.conj_BANG_.call(null, out__10189, cljs.core.first.call(null, in__10188));
          in__10188 = G__10191;
          out__10189 = G__10192;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10189)
        }
        break
      }
    };
    var G__10190 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10190__delegate.call(this, keys)
    };
    G__10190.cljs$lang$maxFixedArity = 0;
    G__10190.cljs$lang$applyTo = function(arglist__10193) {
      var keys = cljs.core.seq(arglist__10193);
      return G__10190__delegate(keys)
    };
    G__10190.cljs$lang$arity$variadic = G__10190__delegate;
    return G__10190
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10194) {
    var keys = cljs.core.seq(arglist__10194);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10196) {
    var comparator = cljs.core.first(arglist__10196);
    var keys = cljs.core.rest(arglist__10196);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10202 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____10203 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____10203)) {
        var e__10204 = temp__3971__auto____10203;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10204))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10202, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10195_SHARP_) {
      var temp__3971__auto____10205 = cljs.core.find.call(null, smap, p1__10195_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____10205)) {
        var e__10206 = temp__3971__auto____10205;
        return cljs.core.second.call(null, e__10206)
      }else {
        return p1__10195_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10236 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10229, seen) {
        while(true) {
          var vec__10230__10231 = p__10229;
          var f__10232 = cljs.core.nth.call(null, vec__10230__10231, 0, null);
          var xs__10233 = vec__10230__10231;
          var temp__3974__auto____10234 = cljs.core.seq.call(null, xs__10233);
          if(temp__3974__auto____10234) {
            var s__10235 = temp__3974__auto____10234;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10232)) {
              var G__10237 = cljs.core.rest.call(null, s__10235);
              var G__10238 = seen;
              p__10229 = G__10237;
              seen = G__10238;
              continue
            }else {
              return cljs.core.cons.call(null, f__10232, step.call(null, cljs.core.rest.call(null, s__10235), cljs.core.conj.call(null, seen, f__10232)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10236.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__10241 = cljs.core.PersistentVector.EMPTY;
  var s__10242 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10242)) {
      var G__10243 = cljs.core.conj.call(null, ret__10241, cljs.core.first.call(null, s__10242));
      var G__10244 = cljs.core.next.call(null, s__10242);
      ret__10241 = G__10243;
      s__10242 = G__10244;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10241)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____10247 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____10247) {
        return or__3824__auto____10247
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10248 = x.lastIndexOf("/");
      if(i__10248 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10248 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____10251 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____10251) {
      return or__3824__auto____10251
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10252 = x.lastIndexOf("/");
    if(i__10252 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10252)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10259 = cljs.core.ObjMap.EMPTY;
  var ks__10260 = cljs.core.seq.call(null, keys);
  var vs__10261 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____10262 = ks__10260;
      if(and__3822__auto____10262) {
        return vs__10261
      }else {
        return and__3822__auto____10262
      }
    }()) {
      var G__10263 = cljs.core.assoc.call(null, map__10259, cljs.core.first.call(null, ks__10260), cljs.core.first.call(null, vs__10261));
      var G__10264 = cljs.core.next.call(null, ks__10260);
      var G__10265 = cljs.core.next.call(null, vs__10261);
      map__10259 = G__10263;
      ks__10260 = G__10264;
      vs__10261 = G__10265;
      continue
    }else {
      return map__10259
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10268__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10253_SHARP_, p2__10254_SHARP_) {
        return max_key.call(null, k, p1__10253_SHARP_, p2__10254_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10268 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10268__delegate.call(this, k, x, y, more)
    };
    G__10268.cljs$lang$maxFixedArity = 3;
    G__10268.cljs$lang$applyTo = function(arglist__10269) {
      var k = cljs.core.first(arglist__10269);
      var x = cljs.core.first(cljs.core.next(arglist__10269));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10269)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10269)));
      return G__10268__delegate(k, x, y, more)
    };
    G__10268.cljs$lang$arity$variadic = G__10268__delegate;
    return G__10268
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10270__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10266_SHARP_, p2__10267_SHARP_) {
        return min_key.call(null, k, p1__10266_SHARP_, p2__10267_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10270 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10270__delegate.call(this, k, x, y, more)
    };
    G__10270.cljs$lang$maxFixedArity = 3;
    G__10270.cljs$lang$applyTo = function(arglist__10271) {
      var k = cljs.core.first(arglist__10271);
      var x = cljs.core.first(cljs.core.next(arglist__10271));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10271)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10271)));
      return G__10270__delegate(k, x, y, more)
    };
    G__10270.cljs$lang$arity$variadic = G__10270__delegate;
    return G__10270
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10274 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10274) {
        var s__10275 = temp__3974__auto____10274;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10275), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10275)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10278 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10278) {
      var s__10279 = temp__3974__auto____10278;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10279)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10279), take_while.call(null, pred, cljs.core.rest.call(null, s__10279)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10281 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10281.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10293 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____10294 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____10294)) {
        var vec__10295__10296 = temp__3974__auto____10294;
        var e__10297 = cljs.core.nth.call(null, vec__10295__10296, 0, null);
        var s__10298 = vec__10295__10296;
        if(cljs.core.truth_(include__10293.call(null, e__10297))) {
          return s__10298
        }else {
          return cljs.core.next.call(null, s__10298)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10293, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10299 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____10299)) {
      var vec__10300__10301 = temp__3974__auto____10299;
      var e__10302 = cljs.core.nth.call(null, vec__10300__10301, 0, null);
      var s__10303 = vec__10300__10301;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10302)) ? s__10303 : cljs.core.next.call(null, s__10303))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10315 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____10316 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____10316)) {
        var vec__10317__10318 = temp__3974__auto____10316;
        var e__10319 = cljs.core.nth.call(null, vec__10317__10318, 0, null);
        var s__10320 = vec__10317__10318;
        if(cljs.core.truth_(include__10315.call(null, e__10319))) {
          return s__10320
        }else {
          return cljs.core.next.call(null, s__10320)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10315, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10321 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____10321)) {
      var vec__10322__10323 = temp__3974__auto____10321;
      var e__10324 = cljs.core.nth.call(null, vec__10322__10323, 0, null);
      var s__10325 = vec__10322__10323;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10324)) ? s__10325 : cljs.core.next.call(null, s__10325))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10326 = this;
  var h__2192__auto____10327 = this__10326.__hash;
  if(!(h__2192__auto____10327 == null)) {
    return h__2192__auto____10327
  }else {
    var h__2192__auto____10328 = cljs.core.hash_coll.call(null, rng);
    this__10326.__hash = h__2192__auto____10328;
    return h__2192__auto____10328
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10329 = this;
  if(this__10329.step > 0) {
    if(this__10329.start + this__10329.step < this__10329.end) {
      return new cljs.core.Range(this__10329.meta, this__10329.start + this__10329.step, this__10329.end, this__10329.step, null)
    }else {
      return null
    }
  }else {
    if(this__10329.start + this__10329.step > this__10329.end) {
      return new cljs.core.Range(this__10329.meta, this__10329.start + this__10329.step, this__10329.end, this__10329.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10330 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10331 = this;
  var this__10332 = this;
  return cljs.core.pr_str.call(null, this__10332)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10333 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10334 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10335 = this;
  if(this__10335.step > 0) {
    if(this__10335.start < this__10335.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10335.start > this__10335.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10336 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10336.end - this__10336.start) / this__10336.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10337 = this;
  return this__10337.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10338 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10338.meta, this__10338.start + this__10338.step, this__10338.end, this__10338.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10339 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10340 = this;
  return new cljs.core.Range(meta, this__10340.start, this__10340.end, this__10340.step, this__10340.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10341 = this;
  return this__10341.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10342 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10342.start + n * this__10342.step
  }else {
    if(function() {
      var and__3822__auto____10343 = this__10342.start > this__10342.end;
      if(and__3822__auto____10343) {
        return this__10342.step === 0
      }else {
        return and__3822__auto____10343
      }
    }()) {
      return this__10342.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10344 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10344.start + n * this__10344.step
  }else {
    if(function() {
      var and__3822__auto____10345 = this__10344.start > this__10344.end;
      if(and__3822__auto____10345) {
        return this__10344.step === 0
      }else {
        return and__3822__auto____10345
      }
    }()) {
      return this__10344.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10346 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10346.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10349 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10349) {
      var s__10350 = temp__3974__auto____10349;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10350), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10350)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10357 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10357) {
      var s__10358 = temp__3974__auto____10357;
      var fst__10359 = cljs.core.first.call(null, s__10358);
      var fv__10360 = f.call(null, fst__10359);
      var run__10361 = cljs.core.cons.call(null, fst__10359, cljs.core.take_while.call(null, function(p1__10351_SHARP_) {
        return cljs.core._EQ_.call(null, fv__10360, f.call(null, p1__10351_SHARP_))
      }, cljs.core.next.call(null, s__10358)));
      return cljs.core.cons.call(null, run__10361, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__10361), s__10358))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____10376 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____10376) {
        var s__10377 = temp__3971__auto____10376;
        return reductions.call(null, f, cljs.core.first.call(null, s__10377), cljs.core.rest.call(null, s__10377))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10378 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10378) {
        var s__10379 = temp__3974__auto____10378;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__10379)), cljs.core.rest.call(null, s__10379))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10382 = null;
      var G__10382__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10382__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10382__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10382__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10382__4 = function() {
        var G__10383__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10383 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10383__delegate.call(this, x, y, z, args)
        };
        G__10383.cljs$lang$maxFixedArity = 3;
        G__10383.cljs$lang$applyTo = function(arglist__10384) {
          var x = cljs.core.first(arglist__10384);
          var y = cljs.core.first(cljs.core.next(arglist__10384));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10384)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10384)));
          return G__10383__delegate(x, y, z, args)
        };
        G__10383.cljs$lang$arity$variadic = G__10383__delegate;
        return G__10383
      }();
      G__10382 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10382__0.call(this);
          case 1:
            return G__10382__1.call(this, x);
          case 2:
            return G__10382__2.call(this, x, y);
          case 3:
            return G__10382__3.call(this, x, y, z);
          default:
            return G__10382__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10382.cljs$lang$maxFixedArity = 3;
      G__10382.cljs$lang$applyTo = G__10382__4.cljs$lang$applyTo;
      return G__10382
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10385 = null;
      var G__10385__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10385__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10385__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10385__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10385__4 = function() {
        var G__10386__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10386 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10386__delegate.call(this, x, y, z, args)
        };
        G__10386.cljs$lang$maxFixedArity = 3;
        G__10386.cljs$lang$applyTo = function(arglist__10387) {
          var x = cljs.core.first(arglist__10387);
          var y = cljs.core.first(cljs.core.next(arglist__10387));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10387)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10387)));
          return G__10386__delegate(x, y, z, args)
        };
        G__10386.cljs$lang$arity$variadic = G__10386__delegate;
        return G__10386
      }();
      G__10385 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10385__0.call(this);
          case 1:
            return G__10385__1.call(this, x);
          case 2:
            return G__10385__2.call(this, x, y);
          case 3:
            return G__10385__3.call(this, x, y, z);
          default:
            return G__10385__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10385.cljs$lang$maxFixedArity = 3;
      G__10385.cljs$lang$applyTo = G__10385__4.cljs$lang$applyTo;
      return G__10385
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10388 = null;
      var G__10388__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10388__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10388__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10388__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10388__4 = function() {
        var G__10389__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10389 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10389__delegate.call(this, x, y, z, args)
        };
        G__10389.cljs$lang$maxFixedArity = 3;
        G__10389.cljs$lang$applyTo = function(arglist__10390) {
          var x = cljs.core.first(arglist__10390);
          var y = cljs.core.first(cljs.core.next(arglist__10390));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10390)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10390)));
          return G__10389__delegate(x, y, z, args)
        };
        G__10389.cljs$lang$arity$variadic = G__10389__delegate;
        return G__10389
      }();
      G__10388 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10388__0.call(this);
          case 1:
            return G__10388__1.call(this, x);
          case 2:
            return G__10388__2.call(this, x, y);
          case 3:
            return G__10388__3.call(this, x, y, z);
          default:
            return G__10388__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10388.cljs$lang$maxFixedArity = 3;
      G__10388.cljs$lang$applyTo = G__10388__4.cljs$lang$applyTo;
      return G__10388
    }()
  };
  var juxt__4 = function() {
    var G__10391__delegate = function(f, g, h, fs) {
      var fs__10381 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10392 = null;
        var G__10392__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10362_SHARP_, p2__10363_SHARP_) {
            return cljs.core.conj.call(null, p1__10362_SHARP_, p2__10363_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__10381)
        };
        var G__10392__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10364_SHARP_, p2__10365_SHARP_) {
            return cljs.core.conj.call(null, p1__10364_SHARP_, p2__10365_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__10381)
        };
        var G__10392__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10366_SHARP_, p2__10367_SHARP_) {
            return cljs.core.conj.call(null, p1__10366_SHARP_, p2__10367_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__10381)
        };
        var G__10392__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10368_SHARP_, p2__10369_SHARP_) {
            return cljs.core.conj.call(null, p1__10368_SHARP_, p2__10369_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__10381)
        };
        var G__10392__4 = function() {
          var G__10393__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10370_SHARP_, p2__10371_SHARP_) {
              return cljs.core.conj.call(null, p1__10370_SHARP_, cljs.core.apply.call(null, p2__10371_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__10381)
          };
          var G__10393 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10393__delegate.call(this, x, y, z, args)
          };
          G__10393.cljs$lang$maxFixedArity = 3;
          G__10393.cljs$lang$applyTo = function(arglist__10394) {
            var x = cljs.core.first(arglist__10394);
            var y = cljs.core.first(cljs.core.next(arglist__10394));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10394)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10394)));
            return G__10393__delegate(x, y, z, args)
          };
          G__10393.cljs$lang$arity$variadic = G__10393__delegate;
          return G__10393
        }();
        G__10392 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10392__0.call(this);
            case 1:
              return G__10392__1.call(this, x);
            case 2:
              return G__10392__2.call(this, x, y);
            case 3:
              return G__10392__3.call(this, x, y, z);
            default:
              return G__10392__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__10392.cljs$lang$maxFixedArity = 3;
        G__10392.cljs$lang$applyTo = G__10392__4.cljs$lang$applyTo;
        return G__10392
      }()
    };
    var G__10391 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10391__delegate.call(this, f, g, h, fs)
    };
    G__10391.cljs$lang$maxFixedArity = 3;
    G__10391.cljs$lang$applyTo = function(arglist__10395) {
      var f = cljs.core.first(arglist__10395);
      var g = cljs.core.first(cljs.core.next(arglist__10395));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10395)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10395)));
      return G__10391__delegate(f, g, h, fs)
    };
    G__10391.cljs$lang$arity$variadic = G__10391__delegate;
    return G__10391
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10398 = cljs.core.next.call(null, coll);
        coll = G__10398;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____10397 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____10397) {
          return n > 0
        }else {
          return and__3822__auto____10397
        }
      }())) {
        var G__10399 = n - 1;
        var G__10400 = cljs.core.next.call(null, coll);
        n = G__10399;
        coll = G__10400;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__10402 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__10402), s)) {
    if(cljs.core.count.call(null, matches__10402) === 1) {
      return cljs.core.first.call(null, matches__10402)
    }else {
      return cljs.core.vec.call(null, matches__10402)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__10404 = re.exec(s);
  if(matches__10404 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__10404) === 1) {
      return cljs.core.first.call(null, matches__10404)
    }else {
      return cljs.core.vec.call(null, matches__10404)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__10409 = cljs.core.re_find.call(null, re, s);
  var match_idx__10410 = s.search(re);
  var match_str__10411 = cljs.core.coll_QMARK_.call(null, match_data__10409) ? cljs.core.first.call(null, match_data__10409) : match_data__10409;
  var post_match__10412 = cljs.core.subs.call(null, s, match_idx__10410 + cljs.core.count.call(null, match_str__10411));
  if(cljs.core.truth_(match_data__10409)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__10409, re_seq.call(null, re, post_match__10412))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10419__10420 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___10421 = cljs.core.nth.call(null, vec__10419__10420, 0, null);
  var flags__10422 = cljs.core.nth.call(null, vec__10419__10420, 1, null);
  var pattern__10423 = cljs.core.nth.call(null, vec__10419__10420, 2, null);
  return new RegExp(pattern__10423, flags__10422)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__10413_SHARP_) {
    return print_one.call(null, p1__10413_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____10433 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____10433)) {
            var and__3822__auto____10437 = function() {
              var G__10434__10435 = obj;
              if(G__10434__10435) {
                if(function() {
                  var or__3824__auto____10436 = G__10434__10435.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____10436) {
                    return or__3824__auto____10436
                  }else {
                    return G__10434__10435.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__10434__10435.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10434__10435)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10434__10435)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____10437)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____10437
            }
          }else {
            return and__3822__auto____10433
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____10438 = !(obj == null);
          if(and__3822__auto____10438) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____10438
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__10439__10440 = obj;
          if(G__10439__10440) {
            if(function() {
              var or__3824__auto____10441 = G__10439__10440.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____10441) {
                return or__3824__auto____10441
              }else {
                return G__10439__10440.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__10439__10440.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10439__10440)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10439__10440)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__10461 = new goog.string.StringBuffer;
  var G__10462__10463 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10462__10463) {
    var string__10464 = cljs.core.first.call(null, G__10462__10463);
    var G__10462__10465 = G__10462__10463;
    while(true) {
      sb__10461.append(string__10464);
      var temp__3974__auto____10466 = cljs.core.next.call(null, G__10462__10465);
      if(temp__3974__auto____10466) {
        var G__10462__10467 = temp__3974__auto____10466;
        var G__10480 = cljs.core.first.call(null, G__10462__10467);
        var G__10481 = G__10462__10467;
        string__10464 = G__10480;
        G__10462__10465 = G__10481;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10468__10469 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10468__10469) {
    var obj__10470 = cljs.core.first.call(null, G__10468__10469);
    var G__10468__10471 = G__10468__10469;
    while(true) {
      sb__10461.append(" ");
      var G__10472__10473 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10470, opts));
      if(G__10472__10473) {
        var string__10474 = cljs.core.first.call(null, G__10472__10473);
        var G__10472__10475 = G__10472__10473;
        while(true) {
          sb__10461.append(string__10474);
          var temp__3974__auto____10476 = cljs.core.next.call(null, G__10472__10475);
          if(temp__3974__auto____10476) {
            var G__10472__10477 = temp__3974__auto____10476;
            var G__10482 = cljs.core.first.call(null, G__10472__10477);
            var G__10483 = G__10472__10477;
            string__10474 = G__10482;
            G__10472__10475 = G__10483;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____10478 = cljs.core.next.call(null, G__10468__10471);
      if(temp__3974__auto____10478) {
        var G__10468__10479 = temp__3974__auto____10478;
        var G__10484 = cljs.core.first.call(null, G__10468__10479);
        var G__10485 = G__10468__10479;
        obj__10470 = G__10484;
        G__10468__10471 = G__10485;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__10461
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__10487 = cljs.core.pr_sb.call(null, objs, opts);
  sb__10487.append("\n");
  return[cljs.core.str(sb__10487)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__10506__10507 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10506__10507) {
    var string__10508 = cljs.core.first.call(null, G__10506__10507);
    var G__10506__10509 = G__10506__10507;
    while(true) {
      cljs.core.string_print.call(null, string__10508);
      var temp__3974__auto____10510 = cljs.core.next.call(null, G__10506__10509);
      if(temp__3974__auto____10510) {
        var G__10506__10511 = temp__3974__auto____10510;
        var G__10524 = cljs.core.first.call(null, G__10506__10511);
        var G__10525 = G__10506__10511;
        string__10508 = G__10524;
        G__10506__10509 = G__10525;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10512__10513 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10512__10513) {
    var obj__10514 = cljs.core.first.call(null, G__10512__10513);
    var G__10512__10515 = G__10512__10513;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__10516__10517 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10514, opts));
      if(G__10516__10517) {
        var string__10518 = cljs.core.first.call(null, G__10516__10517);
        var G__10516__10519 = G__10516__10517;
        while(true) {
          cljs.core.string_print.call(null, string__10518);
          var temp__3974__auto____10520 = cljs.core.next.call(null, G__10516__10519);
          if(temp__3974__auto____10520) {
            var G__10516__10521 = temp__3974__auto____10520;
            var G__10526 = cljs.core.first.call(null, G__10516__10521);
            var G__10527 = G__10516__10521;
            string__10518 = G__10526;
            G__10516__10519 = G__10527;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____10522 = cljs.core.next.call(null, G__10512__10515);
      if(temp__3974__auto____10522) {
        var G__10512__10523 = temp__3974__auto____10522;
        var G__10528 = cljs.core.first.call(null, G__10512__10523);
        var G__10529 = G__10512__10523;
        obj__10514 = G__10528;
        G__10512__10515 = G__10529;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10530) {
    var objs = cljs.core.seq(arglist__10530);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10531) {
    var objs = cljs.core.seq(arglist__10531);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10532) {
    var objs = cljs.core.seq(arglist__10532);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10533) {
    var objs = cljs.core.seq(arglist__10533);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10534) {
    var objs = cljs.core.seq(arglist__10534);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10535) {
    var objs = cljs.core.seq(arglist__10535);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10536) {
    var objs = cljs.core.seq(arglist__10536);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10537) {
    var objs = cljs.core.seq(arglist__10537);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__10538) {
    var fmt = cljs.core.first(arglist__10538);
    var args = cljs.core.rest(arglist__10538);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10539 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10539, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10540 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10540, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10541 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10541, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____10542 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____10542)) {
        var nspc__10543 = temp__3974__auto____10542;
        return[cljs.core.str(nspc__10543), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____10544 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____10544)) {
          var nspc__10545 = temp__3974__auto____10544;
          return[cljs.core.str(nspc__10545), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10546 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10546, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__10548 = function(n, len) {
    var ns__10547 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__10547) < len) {
        var G__10550 = [cljs.core.str("0"), cljs.core.str(ns__10547)].join("");
        ns__10547 = G__10550;
        continue
      }else {
        return ns__10547
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__10548.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__10548.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__10548.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10548.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10548.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__10548.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10549 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10549, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10551 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__10552 = this;
  var G__10553__10554 = cljs.core.seq.call(null, this__10552.watches);
  if(G__10553__10554) {
    var G__10556__10558 = cljs.core.first.call(null, G__10553__10554);
    var vec__10557__10559 = G__10556__10558;
    var key__10560 = cljs.core.nth.call(null, vec__10557__10559, 0, null);
    var f__10561 = cljs.core.nth.call(null, vec__10557__10559, 1, null);
    var G__10553__10562 = G__10553__10554;
    var G__10556__10563 = G__10556__10558;
    var G__10553__10564 = G__10553__10562;
    while(true) {
      var vec__10565__10566 = G__10556__10563;
      var key__10567 = cljs.core.nth.call(null, vec__10565__10566, 0, null);
      var f__10568 = cljs.core.nth.call(null, vec__10565__10566, 1, null);
      var G__10553__10569 = G__10553__10564;
      f__10568.call(null, key__10567, this$, oldval, newval);
      var temp__3974__auto____10570 = cljs.core.next.call(null, G__10553__10569);
      if(temp__3974__auto____10570) {
        var G__10553__10571 = temp__3974__auto____10570;
        var G__10578 = cljs.core.first.call(null, G__10553__10571);
        var G__10579 = G__10553__10571;
        G__10556__10563 = G__10578;
        G__10553__10564 = G__10579;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__10572 = this;
  return this$.watches = cljs.core.assoc.call(null, this__10572.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__10573 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__10573.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__10574 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__10574.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__10575 = this;
  return this__10575.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10576 = this;
  return this__10576.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10577 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__10591__delegate = function(x, p__10580) {
      var map__10586__10587 = p__10580;
      var map__10586__10588 = cljs.core.seq_QMARK_.call(null, map__10586__10587) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10586__10587) : map__10586__10587;
      var validator__10589 = cljs.core._lookup.call(null, map__10586__10588, "\ufdd0'validator", null);
      var meta__10590 = cljs.core._lookup.call(null, map__10586__10588, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__10590, validator__10589, null)
    };
    var G__10591 = function(x, var_args) {
      var p__10580 = null;
      if(goog.isDef(var_args)) {
        p__10580 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10591__delegate.call(this, x, p__10580)
    };
    G__10591.cljs$lang$maxFixedArity = 1;
    G__10591.cljs$lang$applyTo = function(arglist__10592) {
      var x = cljs.core.first(arglist__10592);
      var p__10580 = cljs.core.rest(arglist__10592);
      return G__10591__delegate(x, p__10580)
    };
    G__10591.cljs$lang$arity$variadic = G__10591__delegate;
    return G__10591
  }();
  atom = function(x, var_args) {
    var p__10580 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____10596 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____10596)) {
    var validate__10597 = temp__3974__auto____10596;
    if(cljs.core.truth_(validate__10597.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__10598 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__10598, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__10599__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__10599 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10599__delegate.call(this, a, f, x, y, z, more)
    };
    G__10599.cljs$lang$maxFixedArity = 5;
    G__10599.cljs$lang$applyTo = function(arglist__10600) {
      var a = cljs.core.first(arglist__10600);
      var f = cljs.core.first(cljs.core.next(arglist__10600));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10600)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10600))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10600)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10600)))));
      return G__10599__delegate(a, f, x, y, z, more)
    };
    G__10599.cljs$lang$arity$variadic = G__10599__delegate;
    return G__10599
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10601) {
    var iref = cljs.core.first(arglist__10601);
    var f = cljs.core.first(cljs.core.next(arglist__10601));
    var args = cljs.core.rest(cljs.core.next(arglist__10601));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__10602 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__10602.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10603 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__10603.state, function(p__10604) {
    var map__10605__10606 = p__10604;
    var map__10605__10607 = cljs.core.seq_QMARK_.call(null, map__10605__10606) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10605__10606) : map__10605__10606;
    var curr_state__10608 = map__10605__10607;
    var done__10609 = cljs.core._lookup.call(null, map__10605__10607, "\ufdd0'done", null);
    if(cljs.core.truth_(done__10609)) {
      return curr_state__10608
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__10603.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__10630__10631 = options;
    var map__10630__10632 = cljs.core.seq_QMARK_.call(null, map__10630__10631) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10630__10631) : map__10630__10631;
    var keywordize_keys__10633 = cljs.core._lookup.call(null, map__10630__10632, "\ufdd0'keywordize-keys", null);
    var keyfn__10634 = cljs.core.truth_(keywordize_keys__10633) ? cljs.core.keyword : cljs.core.str;
    var f__10649 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2462__auto____10648 = function iter__10642(s__10643) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__10643__10646 = s__10643;
                    while(true) {
                      if(cljs.core.seq.call(null, s__10643__10646)) {
                        var k__10647 = cljs.core.first.call(null, s__10643__10646);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__10634.call(null, k__10647), thisfn.call(null, x[k__10647])], true), iter__10642.call(null, cljs.core.rest.call(null, s__10643__10646)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2462__auto____10648.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__10649.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__10650) {
    var x = cljs.core.first(arglist__10650);
    var options = cljs.core.rest(arglist__10650);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__10655 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__10659__delegate = function(args) {
      var temp__3971__auto____10656 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__10655), args, null);
      if(cljs.core.truth_(temp__3971__auto____10656)) {
        var v__10657 = temp__3971__auto____10656;
        return v__10657
      }else {
        var ret__10658 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__10655, cljs.core.assoc, args, ret__10658);
        return ret__10658
      }
    };
    var G__10659 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10659__delegate.call(this, args)
    };
    G__10659.cljs$lang$maxFixedArity = 0;
    G__10659.cljs$lang$applyTo = function(arglist__10660) {
      var args = cljs.core.seq(arglist__10660);
      return G__10659__delegate(args)
    };
    G__10659.cljs$lang$arity$variadic = G__10659__delegate;
    return G__10659
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__10662 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__10662)) {
        var G__10663 = ret__10662;
        f = G__10663;
        continue
      }else {
        return ret__10662
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__10664__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__10664 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10664__delegate.call(this, f, args)
    };
    G__10664.cljs$lang$maxFixedArity = 1;
    G__10664.cljs$lang$applyTo = function(arglist__10665) {
      var f = cljs.core.first(arglist__10665);
      var args = cljs.core.rest(arglist__10665);
      return G__10664__delegate(f, args)
    };
    G__10664.cljs$lang$arity$variadic = G__10664__delegate;
    return G__10664
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__10667 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__10667, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__10667, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____10676 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____10676) {
      return or__3824__auto____10676
    }else {
      var or__3824__auto____10677 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____10677) {
        return or__3824__auto____10677
      }else {
        var and__3822__auto____10678 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____10678) {
          var and__3822__auto____10679 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____10679) {
            var and__3822__auto____10680 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____10680) {
              var ret__10681 = true;
              var i__10682 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____10683 = cljs.core.not.call(null, ret__10681);
                  if(or__3824__auto____10683) {
                    return or__3824__auto____10683
                  }else {
                    return i__10682 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__10681
                }else {
                  var G__10684 = isa_QMARK_.call(null, h, child.call(null, i__10682), parent.call(null, i__10682));
                  var G__10685 = i__10682 + 1;
                  ret__10681 = G__10684;
                  i__10682 = G__10685;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____10680
            }
          }else {
            return and__3822__auto____10679
          }
        }else {
          return and__3822__auto____10678
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__10694 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__10695 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__10696 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__10697 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____10698 = cljs.core.contains_QMARK_.call(null, tp__10694.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__10696.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__10696.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__10694, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__10697.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__10695, parent, ta__10696), "\ufdd0'descendants":tf__10697.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__10696, tag, td__10695)})
    }();
    if(cljs.core.truth_(or__3824__auto____10698)) {
      return or__3824__auto____10698
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__10703 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__10704 = cljs.core.truth_(parentMap__10703.call(null, tag)) ? cljs.core.disj.call(null, parentMap__10703.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__10705 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__10704)) ? cljs.core.assoc.call(null, parentMap__10703, tag, childsParents__10704) : cljs.core.dissoc.call(null, parentMap__10703, tag);
    var deriv_seq__10706 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__10686_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10686_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10686_SHARP_), cljs.core.second.call(null, p1__10686_SHARP_)))
    }, cljs.core.seq.call(null, newParents__10705)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__10703.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__10687_SHARP_, p2__10688_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__10687_SHARP_, p2__10688_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__10706))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__10714 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____10716 = cljs.core.truth_(function() {
    var and__3822__auto____10715 = xprefs__10714;
    if(cljs.core.truth_(and__3822__auto____10715)) {
      return xprefs__10714.call(null, y)
    }else {
      return and__3822__auto____10715
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____10716)) {
    return or__3824__auto____10716
  }else {
    var or__3824__auto____10718 = function() {
      var ps__10717 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__10717) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__10717), prefer_table))) {
          }else {
          }
          var G__10721 = cljs.core.rest.call(null, ps__10717);
          ps__10717 = G__10721;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____10718)) {
      return or__3824__auto____10718
    }else {
      var or__3824__auto____10720 = function() {
        var ps__10719 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__10719) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__10719), y, prefer_table))) {
            }else {
            }
            var G__10722 = cljs.core.rest.call(null, ps__10719);
            ps__10719 = G__10722;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____10720)) {
        return or__3824__auto____10720
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____10724 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____10724)) {
    return or__3824__auto____10724
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__10742 = cljs.core.reduce.call(null, function(be, p__10734) {
    var vec__10735__10736 = p__10734;
    var k__10737 = cljs.core.nth.call(null, vec__10735__10736, 0, null);
    var ___10738 = cljs.core.nth.call(null, vec__10735__10736, 1, null);
    var e__10739 = vec__10735__10736;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__10737)) {
      var be2__10741 = cljs.core.truth_(function() {
        var or__3824__auto____10740 = be == null;
        if(or__3824__auto____10740) {
          return or__3824__auto____10740
        }else {
          return cljs.core.dominates.call(null, k__10737, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__10739 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__10741), k__10737, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__10737), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__10741)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__10741
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__10742)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__10742));
      return cljs.core.second.call(null, best_entry__10742)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____10747 = mf;
    if(and__3822__auto____10747) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____10747
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2363__auto____10748 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10749 = cljs.core._reset[goog.typeOf(x__2363__auto____10748)];
      if(or__3824__auto____10749) {
        return or__3824__auto____10749
      }else {
        var or__3824__auto____10750 = cljs.core._reset["_"];
        if(or__3824__auto____10750) {
          return or__3824__auto____10750
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____10755 = mf;
    if(and__3822__auto____10755) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____10755
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2363__auto____10756 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10757 = cljs.core._add_method[goog.typeOf(x__2363__auto____10756)];
      if(or__3824__auto____10757) {
        return or__3824__auto____10757
      }else {
        var or__3824__auto____10758 = cljs.core._add_method["_"];
        if(or__3824__auto____10758) {
          return or__3824__auto____10758
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____10763 = mf;
    if(and__3822__auto____10763) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____10763
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____10764 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10765 = cljs.core._remove_method[goog.typeOf(x__2363__auto____10764)];
      if(or__3824__auto____10765) {
        return or__3824__auto____10765
      }else {
        var or__3824__auto____10766 = cljs.core._remove_method["_"];
        if(or__3824__auto____10766) {
          return or__3824__auto____10766
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____10771 = mf;
    if(and__3822__auto____10771) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____10771
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2363__auto____10772 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10773 = cljs.core._prefer_method[goog.typeOf(x__2363__auto____10772)];
      if(or__3824__auto____10773) {
        return or__3824__auto____10773
      }else {
        var or__3824__auto____10774 = cljs.core._prefer_method["_"];
        if(or__3824__auto____10774) {
          return or__3824__auto____10774
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____10779 = mf;
    if(and__3822__auto____10779) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____10779
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____10780 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10781 = cljs.core._get_method[goog.typeOf(x__2363__auto____10780)];
      if(or__3824__auto____10781) {
        return or__3824__auto____10781
      }else {
        var or__3824__auto____10782 = cljs.core._get_method["_"];
        if(or__3824__auto____10782) {
          return or__3824__auto____10782
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____10787 = mf;
    if(and__3822__auto____10787) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____10787
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2363__auto____10788 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10789 = cljs.core._methods[goog.typeOf(x__2363__auto____10788)];
      if(or__3824__auto____10789) {
        return or__3824__auto____10789
      }else {
        var or__3824__auto____10790 = cljs.core._methods["_"];
        if(or__3824__auto____10790) {
          return or__3824__auto____10790
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____10795 = mf;
    if(and__3822__auto____10795) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____10795
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2363__auto____10796 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10797 = cljs.core._prefers[goog.typeOf(x__2363__auto____10796)];
      if(or__3824__auto____10797) {
        return or__3824__auto____10797
      }else {
        var or__3824__auto____10798 = cljs.core._prefers["_"];
        if(or__3824__auto____10798) {
          return or__3824__auto____10798
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____10803 = mf;
    if(and__3822__auto____10803) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____10803
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2363__auto____10804 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10805 = cljs.core._dispatch[goog.typeOf(x__2363__auto____10804)];
      if(or__3824__auto____10805) {
        return or__3824__auto____10805
      }else {
        var or__3824__auto____10806 = cljs.core._dispatch["_"];
        if(or__3824__auto____10806) {
          return or__3824__auto____10806
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__10809 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__10810 = cljs.core._get_method.call(null, mf, dispatch_val__10809);
  if(cljs.core.truth_(target_fn__10810)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__10809)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__10810, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10811 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__10812 = this;
  cljs.core.swap_BANG_.call(null, this__10812.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10812.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10812.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10812.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__10813 = this;
  cljs.core.swap_BANG_.call(null, this__10813.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__10813.method_cache, this__10813.method_table, this__10813.cached_hierarchy, this__10813.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__10814 = this;
  cljs.core.swap_BANG_.call(null, this__10814.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__10814.method_cache, this__10814.method_table, this__10814.cached_hierarchy, this__10814.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__10815 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__10815.cached_hierarchy), cljs.core.deref.call(null, this__10815.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__10815.method_cache, this__10815.method_table, this__10815.cached_hierarchy, this__10815.hierarchy)
  }
  var temp__3971__auto____10816 = cljs.core.deref.call(null, this__10815.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____10816)) {
    var target_fn__10817 = temp__3971__auto____10816;
    return target_fn__10817
  }else {
    var temp__3971__auto____10818 = cljs.core.find_and_cache_best_method.call(null, this__10815.name, dispatch_val, this__10815.hierarchy, this__10815.method_table, this__10815.prefer_table, this__10815.method_cache, this__10815.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____10818)) {
      var target_fn__10819 = temp__3971__auto____10818;
      return target_fn__10819
    }else {
      return cljs.core.deref.call(null, this__10815.method_table).call(null, this__10815.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__10820 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__10820.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__10820.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__10820.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__10820.method_cache, this__10820.method_table, this__10820.cached_hierarchy, this__10820.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__10821 = this;
  return cljs.core.deref.call(null, this__10821.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__10822 = this;
  return cljs.core.deref.call(null, this__10822.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__10823 = this;
  return cljs.core.do_dispatch.call(null, mf, this__10823.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__10825__delegate = function(_, args) {
    var self__10824 = this;
    return cljs.core._dispatch.call(null, self__10824, args)
  };
  var G__10825 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__10825__delegate.call(this, _, args)
  };
  G__10825.cljs$lang$maxFixedArity = 1;
  G__10825.cljs$lang$applyTo = function(arglist__10826) {
    var _ = cljs.core.first(arglist__10826);
    var args = cljs.core.rest(arglist__10826);
    return G__10825__delegate(_, args)
  };
  G__10825.cljs$lang$arity$variadic = G__10825__delegate;
  return G__10825
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__10827 = this;
  return cljs.core._dispatch.call(null, self__10827, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10828 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_10830, _) {
  var this__10829 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__10829.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__10831 = this;
  var and__3822__auto____10832 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____10832) {
    return this__10831.uuid === other.uuid
  }else {
    return and__3822__auto____10832
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__10833 = this;
  var this__10834 = this;
  return cljs.core.pr_str.call(null, this__10834)
};
cljs.core.UUID;
goog.provide("tikvha.widgets");
goog.require("cljs.core");
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, goog.Uri.reDisallowedInPath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInPath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____11639 = this$;
    if(and__3822__auto____11639) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____11639
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2363__auto____11640 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11641 = clojure.browser.event.event_types[goog.typeOf(x__2363__auto____11640)];
      if(or__3824__auto____11641) {
        return or__3824__auto____11641
      }else {
        var or__3824__auto____11642 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____11642) {
          return or__3824__auto____11642
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11643) {
    var vec__11644__11645 = p__11643;
    var k__11646 = cljs.core.nth.call(null, vec__11644__11645, 0, null);
    var v__11647 = cljs.core.nth.call(null, vec__11644__11645, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11646.toLowerCase()), v__11647], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11648) {
    var vec__11649__11650 = p__11648;
    var k__11651 = cljs.core.nth.call(null, vec__11649__11650, 0, null);
    var v__11652 = cljs.core.nth.call(null, vec__11649__11650, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11651.toLowerCase()), v__11652], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  payload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(payload)) {
    service.callback(payload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.provide("goog.net.xpc.CrossPageChannel.Role");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI] && this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
            transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
          }
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect()
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(this.peerWindowObject_.closed) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.Role = {OUTER:0, INNER:1};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannel.Role.INNER : goog.net.xpc.CrossPageChannel.Role.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name]
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11502) {
  var vec__11503__11504 = p__11502;
  var k__11505 = cljs.core.nth.call(null, vec__11503__11504, 0, null);
  var v__11506 = cljs.core.nth.call(null, vec__11503__11504, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11505.toLowerCase()), v__11506], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____11523 = this$;
      if(and__3822__auto____11523) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____11523
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2363__auto____11524 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11525 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11524)];
        if(or__3824__auto____11525) {
          return or__3824__auto____11525
        }else {
          var or__3824__auto____11526 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11526) {
            return or__3824__auto____11526
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____11527 = this$;
      if(and__3822__auto____11527) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____11527
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2363__auto____11528 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11529 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11528)];
        if(or__3824__auto____11529) {
          return or__3824__auto____11529
        }else {
          var or__3824__auto____11530 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11530) {
            return or__3824__auto____11530
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____11531 = this$;
      if(and__3822__auto____11531) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____11531
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2363__auto____11532 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11533 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11532)];
        if(or__3824__auto____11533) {
          return or__3824__auto____11533
        }else {
          var or__3824__auto____11534 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11534) {
            return or__3824__auto____11534
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____11535 = this$;
      if(and__3822__auto____11535) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____11535
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2363__auto____11536 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11537 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11536)];
        if(or__3824__auto____11537) {
          return or__3824__auto____11537
        }else {
          var or__3824__auto____11538 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11538) {
            return or__3824__auto____11538
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____11559 = this$;
      if(and__3822__auto____11559) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____11559
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2363__auto____11560 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11561 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11560)];
        if(or__3824__auto____11561) {
          return or__3824__auto____11561
        }else {
          var or__3824__auto____11562 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11562) {
            return or__3824__auto____11562
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____11563 = this$;
      if(and__3822__auto____11563) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____11563
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2363__auto____11564 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11565 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11564)];
        if(or__3824__auto____11565) {
          return or__3824__auto____11565
        }else {
          var or__3824__auto____11566 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11566) {
            return or__3824__auto____11566
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____11567 = this$;
      if(and__3822__auto____11567) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____11567
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2363__auto____11568 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11569 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11568)];
        if(or__3824__auto____11569) {
          return or__3824__auto____11569
        }else {
          var or__3824__auto____11570 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11570) {
            return or__3824__auto____11570
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____11571 = this$;
      if(and__3822__auto____11571) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____11571
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2363__auto____11572 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11573 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11572)];
        if(or__3824__auto____11573) {
          return or__3824__auto____11573
        }else {
          var or__3824__auto____11574 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11574) {
            return or__3824__auto____11574
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____11575 = this$;
      if(and__3822__auto____11575) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____11575
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2363__auto____11576 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11577 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11576)];
        if(or__3824__auto____11577) {
          return or__3824__auto____11577
        }else {
          var or__3824__auto____11578 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11578) {
            return or__3824__auto____11578
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____11583 = this$;
    if(and__3822__auto____11583) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____11583
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2363__auto____11584 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11585 = clojure.browser.net.close[goog.typeOf(x__2363__auto____11584)];
      if(or__3824__auto____11585) {
        return or__3824__auto____11585
      }else {
        var or__3824__auto____11586 = clojure.browser.net.close["_"];
        if(or__3824__auto____11586) {
          return or__3824__auto____11586
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11587) {
    var vec__11588__11589 = p__11587;
    var k__11590 = cljs.core.nth.call(null, vec__11588__11589, 0, null);
    var v__11591 = cljs.core.nth.call(null, vec__11588__11589, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11590.toLowerCase()), v__11591], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11592) {
  var vec__11593__11594 = p__11592;
  var k__11595 = cljs.core.nth.call(null, vec__11593__11594, 0, null);
  var v__11596 = cljs.core.nth.call(null, vec__11593__11594, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11595.toLowerCase()), v__11596], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____11605 = this$;
      if(and__3822__auto____11605) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____11605
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2363__auto____11606 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11607 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____11606)];
        if(or__3824__auto____11607) {
          return or__3824__auto____11607
        }else {
          var or__3824__auto____11608 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11608) {
            return or__3824__auto____11608
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____11609 = this$;
      if(and__3822__auto____11609) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____11609
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2363__auto____11610 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11611 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____11610)];
        if(or__3824__auto____11611) {
          return or__3824__auto____11611
        }else {
          var or__3824__auto____11612 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11612) {
            return or__3824__auto____11612
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____11624 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____11624)) {
      var config__11625 = temp__3974__auto____11624;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__11625))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__11626) {
      var vec__11627__11628 = p__11626;
      var k__11629 = cljs.core.nth.call(null, vec__11627__11628, 0, null);
      var v__11630 = cljs.core.nth.call(null, vec__11627__11628, 1, null);
      var temp__3971__auto____11631 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__11629, null);
      if(cljs.core.truth_(temp__3971__auto____11631)) {
        var field__11632 = temp__3971__auto____11631;
        var G__11633__11634 = sum;
        G__11633__11634[field__11632] = v__11630;
        return G__11633__11634
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____11484 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____11484)) {
    var conn__11485 = temp__3971__auto____11484;
    return clojure.browser.net.transmit.call(null, conn__11485, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__11491 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e11489) {
      if(cljs.core.instance_QMARK_.call(null, Error, e11489)) {
        var e__11490 = e11489;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__11490), "\ufdd0'stacktrace":cljs.core.truth_(e__11490.hasOwnProperty("stack")) ? e__11490.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e11489;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__11491)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__11493 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__11493, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__11493, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____11497 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____11497)) {
    var repl_connection__11498 = temp__3971__auto____11497;
    var connection__11499 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__11499, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__11498, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11498, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__11499, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11498, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__11498, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__11499, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__11501 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__11501));
  clojure.browser.net.register_service.call(null, repl_connection__11501, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__11501, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__11501, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__11501, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("tikvah.home");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__11439 = document.createElement("div");
var test_html__11440 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__11439.innerHTML = test_html__11440;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__11439.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__11439.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__11439.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11447 = s;
      var limit__11448 = limit;
      var parts__11449 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11448, 1)) {
          return cljs.core.conj.call(null, parts__11449, s__11447)
        }else {
          var temp__3971__auto____11450 = cljs.core.re_find.call(null, re, s__11447);
          if(cljs.core.truth_(temp__3971__auto____11450)) {
            var m__11451 = temp__3971__auto____11450;
            var index__11452 = s__11447.indexOf(m__11451);
            var G__11453 = s__11447.substring(index__11452 + cljs.core.count.call(null, m__11451));
            var G__11454 = limit__11448 - 1;
            var G__11455 = cljs.core.conj.call(null, parts__11449, s__11447.substring(0, index__11452));
            s__11447 = G__11453;
            limit__11448 = G__11454;
            parts__11449 = G__11455;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11449, s__11447)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11459 = s.length;
  while(true) {
    if(index__11459 === 0) {
      return""
    }else {
      var ch__11460 = cljs.core._lookup.call(null, s, index__11459 - 1, null);
      if(function() {
        var or__3824__auto____11461 = cljs.core._EQ_.call(null, ch__11460, "\n");
        if(or__3824__auto____11461) {
          return or__3824__auto____11461
        }else {
          return cljs.core._EQ_.call(null, ch__11460, "\r")
        }
      }()) {
        var G__11462 = index__11459 - 1;
        index__11459 = G__11462;
        continue
      }else {
        return s.substring(0, index__11459)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__11466 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____11467 = cljs.core.not.call(null, s__11466);
    if(or__3824__auto____11467) {
      return or__3824__auto____11467
    }else {
      var or__3824__auto____11468 = cljs.core._EQ_.call(null, "", s__11466);
      if(or__3824__auto____11468) {
        return or__3824__auto____11468
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__11466)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11475 = new goog.string.StringBuffer;
  var length__11476 = s.length;
  var index__11477 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11476, index__11477)) {
      return buffer__11475.toString()
    }else {
      var ch__11478 = s.charAt(index__11477);
      var temp__3971__auto____11479 = cljs.core._lookup.call(null, cmap, ch__11478, null);
      if(cljs.core.truth_(temp__3971__auto____11479)) {
        var replacement__11480 = temp__3971__auto____11479;
        buffer__11475.append([cljs.core.str(replacement__11480)].join(""))
      }else {
        buffer__11475.append(ch__11478)
      }
      var G__11481 = index__11477 + 1;
      index__11477 = G__11481;
      continue
    }
    break
  }
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__11032 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__11033 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__11034 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__11033, "caption":table_section_wrapper__11033, "optgroup":opt_wrapper__11032, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__11034, "thead":table_section_wrapper__11033, "th":cell_wrapper__11034, "option":opt_wrapper__11032, "tbody":table_section_wrapper__11033, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__11033});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___11047 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__11051 = function() {
    var and__3822__auto____11048 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3822__auto____11048) {
      return no_tbody_QMARK___11047
    }else {
      return and__3822__auto____11048
    }
  }() ? function() {
    var and__3822__auto____11049 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____11049)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____11049
    }
  }() : function() {
    var and__3822__auto____11050 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3822__auto____11050) {
      return no_tbody_QMARK___11047
    }else {
      return and__3822__auto____11050
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__11052__11053 = cljs.core.seq.call(null, tbody__11051);
  if(G__11052__11053) {
    var child__11054 = cljs.core.first.call(null, G__11052__11053);
    var G__11052__11055 = G__11052__11053;
    while(true) {
      if(function() {
        var and__3822__auto____11056 = cljs.core._EQ_.call(null, child__11054.nodeName, "tbody");
        if(and__3822__auto____11056) {
          return cljs.core._EQ_.call(null, child__11054.childNodes.length, 0)
        }else {
          return and__3822__auto____11056
        }
      }()) {
        child__11054.parentNode.removeChild(child__11054)
      }else {
      }
      var temp__3974__auto____11057 = cljs.core.next.call(null, G__11052__11055);
      if(temp__3974__auto____11057) {
        var G__11052__11058 = temp__3974__auto____11057;
        var G__11059 = cljs.core.first.call(null, G__11052__11058);
        var G__11060 = G__11052__11058;
        child__11054 = G__11059;
        G__11052__11055 = G__11060;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__11074 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__11075 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__11074)))].join("").toLowerCase();
  var vec__11073__11076 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__11075, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__11077 = cljs.core.nth.call(null, vec__11073__11076, 0, null);
  var start_wrap__11078 = cljs.core.nth.call(null, vec__11073__11076, 1, null);
  var end_wrap__11079 = cljs.core.nth.call(null, vec__11073__11076, 2, null);
  var div__11083 = function() {
    var wrapper__11081 = function() {
      var div__11080 = document.createElement("div");
      div__11080.innerHTML = [cljs.core.str(start_wrap__11078), cljs.core.str(html__11074), cljs.core.str(end_wrap__11079)].join("");
      return div__11080
    }();
    var level__11082 = depth__11077;
    while(true) {
      if(level__11082 > 0) {
        var G__11085 = wrapper__11081.lastChild;
        var G__11086 = level__11082 - 1;
        wrapper__11081 = G__11085;
        level__11082 = G__11086;
        continue
      }else {
        return wrapper__11081
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__11083, html__11074)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____11084 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____11084) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__11074)
    }else {
      return and__3822__auto____11084
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__11083, html__11074)
  }else {
  }
  return div__11083.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____11091 = content;
    if(and__3822__auto____11091) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____11091
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2363__auto____11092 = content == null ? null : content;
    return function() {
      var or__3824__auto____11093 = domina.nodes[goog.typeOf(x__2363__auto____11092)];
      if(or__3824__auto____11093) {
        return or__3824__auto____11093
      }else {
        var or__3824__auto____11094 = domina.nodes["_"];
        if(or__3824__auto____11094) {
          return or__3824__auto____11094
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____11099 = nodeseq;
    if(and__3822__auto____11099) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____11099
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2363__auto____11100 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____11101 = domina.single_node[goog.typeOf(x__2363__auto____11100)];
      if(or__3824__auto____11101) {
        return or__3824__auto____11101
      }else {
        var or__3824__auto____11102 = domina.single_node["_"];
        if(or__3824__auto____11102) {
          return or__3824__auto____11102
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____11104 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____11104)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____11104
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__11105) {
    var mesg = cljs.core.seq(arglist__11105);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__11106) {
    var mesg = cljs.core.seq(arglist__11106);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t11114) {
    domina.t11114 = function(class_name, by_class, meta11115) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta11115 = meta11115;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t11114.cljs$lang$type = true;
    domina.t11114.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
      return cljs.core.list.call(null, "domina/t11114")
    };
    domina.t11114.prototype.domina$DomContent$ = true;
    domina.t11114.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__11117 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__11117.class_name)))
    };
    domina.t11114.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__11118 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__11118.class_name)))
    };
    domina.t11114.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11116) {
      var this__11119 = this;
      return this__11119.meta11115
    };
    domina.t11114.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11116, meta11115) {
      var this__11120 = this;
      return new domina.t11114(this__11120.class_name, this__11120.by_class, meta11115)
    };
    domina.t11114
  }else {
  }
  return new domina.t11114(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__11121_SHARP_) {
    return p1__11121_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__11122_SHARP_, p2__11123_SHARP_) {
    return goog.dom.insertChildAt(p1__11122_SHARP_, p2__11123_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11125_SHARP_, p2__11124_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__11124_SHARP_, p1__11125_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11127_SHARP_, p2__11126_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__11126_SHARP_, p1__11127_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11129_SHARP_, p2__11128_SHARP_) {
    return goog.dom.replaceNode(p2__11128_SHARP_, p1__11129_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__11131 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__11131))) {
    return null
  }else {
    return s__11131
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__11138__11139 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11138__11139) {
      var n__11140 = cljs.core.first.call(null, G__11138__11139);
      var G__11138__11141 = G__11138__11139;
      while(true) {
        goog.style.setStyle(n__11140, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____11142 = cljs.core.next.call(null, G__11138__11141);
        if(temp__3974__auto____11142) {
          var G__11138__11143 = temp__3974__auto____11142;
          var G__11144 = cljs.core.first.call(null, G__11138__11143);
          var G__11145 = G__11138__11143;
          n__11140 = G__11144;
          G__11138__11141 = G__11145;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__11146) {
    var content = cljs.core.first(arglist__11146);
    var name = cljs.core.first(cljs.core.next(arglist__11146));
    var value = cljs.core.rest(cljs.core.next(arglist__11146));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__11153__11154 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11153__11154) {
      var n__11155 = cljs.core.first.call(null, G__11153__11154);
      var G__11153__11156 = G__11153__11154;
      while(true) {
        n__11155.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____11157 = cljs.core.next.call(null, G__11153__11156);
        if(temp__3974__auto____11157) {
          var G__11153__11158 = temp__3974__auto____11157;
          var G__11159 = cljs.core.first.call(null, G__11153__11158);
          var G__11160 = G__11153__11158;
          n__11155 = G__11159;
          G__11153__11156 = G__11160;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__11161) {
    var content = cljs.core.first(arglist__11161);
    var name = cljs.core.first(cljs.core.next(arglist__11161));
    var value = cljs.core.rest(cljs.core.next(arglist__11161));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__11168__11169 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11168__11169) {
    var n__11170 = cljs.core.first.call(null, G__11168__11169);
    var G__11168__11171 = G__11168__11169;
    while(true) {
      n__11170.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____11172 = cljs.core.next.call(null, G__11168__11171);
      if(temp__3974__auto____11172) {
        var G__11168__11173 = temp__3974__auto____11172;
        var G__11174 = cljs.core.first.call(null, G__11168__11173);
        var G__11175 = G__11168__11173;
        n__11170 = G__11174;
        G__11168__11171 = G__11175;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__11181__11182 = pair.split(/\s*:\s*/);
    var k__11183 = cljs.core.nth.call(null, vec__11181__11182, 0, null);
    var v__11184 = cljs.core.nth.call(null, vec__11181__11182, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____11185 = k__11183;
      if(cljs.core.truth_(and__3822__auto____11185)) {
        return v__11184
      }else {
        return and__3822__auto____11185
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__11183.toLowerCase()), v__11184)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__11188 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__11188)) {
    return domina.parse_style_attributes.call(null, style__11188)
  }else {
    if(cljs.core.truth_(style__11188.cssText)) {
      return domina.parse_style_attributes.call(null, style__11188.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__11194 = domina.single_node.call(null, content);
  var attrs__11195 = node__11194.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__11186_SHARP_) {
    var attr__11196 = attrs__11195.item(p1__11186_SHARP_);
    var value__11197 = attr__11196.nodeValue;
    if(function() {
      var and__3822__auto____11198 = cljs.core.not_EQ_.call(null, null, value__11197);
      if(and__3822__auto____11198) {
        return cljs.core.not_EQ_.call(null, "", value__11197)
      }else {
        return and__3822__auto____11198
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__11196.nodeName.toLowerCase())], [attr__11196.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__11195.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__11218__11219 = cljs.core.seq.call(null, styles);
  if(G__11218__11219) {
    var G__11221__11223 = cljs.core.first.call(null, G__11218__11219);
    var vec__11222__11224 = G__11221__11223;
    var name__11225 = cljs.core.nth.call(null, vec__11222__11224, 0, null);
    var value__11226 = cljs.core.nth.call(null, vec__11222__11224, 1, null);
    var G__11218__11227 = G__11218__11219;
    var G__11221__11228 = G__11221__11223;
    var G__11218__11229 = G__11218__11227;
    while(true) {
      var vec__11230__11231 = G__11221__11228;
      var name__11232 = cljs.core.nth.call(null, vec__11230__11231, 0, null);
      var value__11233 = cljs.core.nth.call(null, vec__11230__11231, 1, null);
      var G__11218__11234 = G__11218__11229;
      domina.set_style_BANG_.call(null, content, name__11232, value__11233);
      var temp__3974__auto____11235 = cljs.core.next.call(null, G__11218__11234);
      if(temp__3974__auto____11235) {
        var G__11218__11236 = temp__3974__auto____11235;
        var G__11237 = cljs.core.first.call(null, G__11218__11236);
        var G__11238 = G__11218__11236;
        G__11221__11228 = G__11237;
        G__11218__11229 = G__11238;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__11258__11259 = cljs.core.seq.call(null, attrs);
  if(G__11258__11259) {
    var G__11261__11263 = cljs.core.first.call(null, G__11258__11259);
    var vec__11262__11264 = G__11261__11263;
    var name__11265 = cljs.core.nth.call(null, vec__11262__11264, 0, null);
    var value__11266 = cljs.core.nth.call(null, vec__11262__11264, 1, null);
    var G__11258__11267 = G__11258__11259;
    var G__11261__11268 = G__11261__11263;
    var G__11258__11269 = G__11258__11267;
    while(true) {
      var vec__11270__11271 = G__11261__11268;
      var name__11272 = cljs.core.nth.call(null, vec__11270__11271, 0, null);
      var value__11273 = cljs.core.nth.call(null, vec__11270__11271, 1, null);
      var G__11258__11274 = G__11258__11269;
      domina.set_attr_BANG_.call(null, content, name__11272, value__11273);
      var temp__3974__auto____11275 = cljs.core.next.call(null, G__11258__11274);
      if(temp__3974__auto____11275) {
        var G__11258__11276 = temp__3974__auto____11275;
        var G__11277 = cljs.core.first.call(null, G__11258__11276);
        var G__11278 = G__11258__11276;
        G__11261__11268 = G__11277;
        G__11258__11269 = G__11278;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__11285__11286 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11285__11286) {
    var node__11287 = cljs.core.first.call(null, G__11285__11286);
    var G__11285__11288 = G__11285__11286;
    while(true) {
      goog.dom.classes.add(node__11287, class$);
      var temp__3974__auto____11289 = cljs.core.next.call(null, G__11285__11288);
      if(temp__3974__auto____11289) {
        var G__11285__11290 = temp__3974__auto____11289;
        var G__11291 = cljs.core.first.call(null, G__11285__11290);
        var G__11292 = G__11285__11290;
        node__11287 = G__11291;
        G__11285__11288 = G__11292;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__11299__11300 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11299__11300) {
    var node__11301 = cljs.core.first.call(null, G__11299__11300);
    var G__11299__11302 = G__11299__11300;
    while(true) {
      goog.dom.classes.remove(node__11301, class$);
      var temp__3974__auto____11303 = cljs.core.next.call(null, G__11299__11302);
      if(temp__3974__auto____11303) {
        var G__11299__11304 = temp__3974__auto____11303;
        var G__11305 = cljs.core.first.call(null, G__11299__11304);
        var G__11306 = G__11299__11304;
        node__11301 = G__11305;
        G__11299__11302 = G__11306;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__11314 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__11315__11316 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11315__11316) {
    var node__11317 = cljs.core.first.call(null, G__11315__11316);
    var G__11315__11318 = G__11315__11316;
    while(true) {
      goog.dom.classes.set(node__11317, classes__11314);
      var temp__3974__auto____11319 = cljs.core.next.call(null, G__11315__11318);
      if(temp__3974__auto____11319) {
        var G__11315__11320 = temp__3974__auto____11319;
        var G__11321 = cljs.core.first.call(null, G__11315__11320);
        var G__11322 = G__11315__11320;
        node__11317 = G__11321;
        G__11315__11318 = G__11322;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__11329__11330 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11329__11330) {
    var node__11331 = cljs.core.first.call(null, G__11329__11330);
    var G__11329__11332 = G__11329__11330;
    while(true) {
      goog.dom.setTextContent(node__11331, value);
      var temp__3974__auto____11333 = cljs.core.next.call(null, G__11329__11332);
      if(temp__3974__auto____11333) {
        var G__11329__11334 = temp__3974__auto____11333;
        var G__11335 = cljs.core.first.call(null, G__11329__11334);
        var G__11336 = G__11329__11334;
        node__11331 = G__11335;
        G__11329__11332 = G__11336;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__11343__11344 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11343__11344) {
    var node__11345 = cljs.core.first.call(null, G__11343__11344);
    var G__11343__11346 = G__11343__11344;
    while(true) {
      goog.dom.forms.setValue(node__11345, value);
      var temp__3974__auto____11347 = cljs.core.next.call(null, G__11343__11346);
      if(temp__3974__auto____11347) {
        var G__11343__11348 = temp__3974__auto____11347;
        var G__11349 = cljs.core.first.call(null, G__11343__11348);
        var G__11350 = G__11343__11348;
        node__11345 = G__11349;
        G__11343__11346 = G__11350;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___11367 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___11368 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__11369 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___11370 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__11369);
  if(cljs.core.truth_(function() {
    var and__3822__auto____11371 = allows_inner_html_QMARK___11367;
    if(and__3822__auto____11371) {
      var and__3822__auto____11373 = function() {
        var or__3824__auto____11372 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____11372)) {
          return or__3824__auto____11372
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___11368)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____11373)) {
        return!special_tag_QMARK___11370
      }else {
        return and__3822__auto____11373
      }
    }else {
      return and__3822__auto____11371
    }
  }())) {
    var value__11374 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__11377__11378 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__11377__11378) {
        var node__11379 = cljs.core.first.call(null, G__11377__11378);
        var G__11377__11380 = G__11377__11378;
        while(true) {
          goog.events.removeAll(node__11379);
          node__11379.innerHTML = value__11374;
          var temp__3974__auto____11381 = cljs.core.next.call(null, G__11377__11380);
          if(temp__3974__auto____11381) {
            var G__11377__11382 = temp__3974__auto____11381;
            var G__11383 = cljs.core.first.call(null, G__11377__11382);
            var G__11384 = G__11377__11382;
            node__11379 = G__11383;
            G__11377__11380 = G__11384;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e11375) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e11375)) {
        var e__11376 = e11375;
        domina.replace_children_BANG_.call(null, content, value__11374)
      }else {
        if("\ufdd0'else") {
          throw e11375;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__11390 = domina.single_node.call(null, node).__domina_data;
    var value__11391 = cljs.core.truth_(m__11390) ? cljs.core._lookup.call(null, m__11390, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____11392 = bubble;
      if(cljs.core.truth_(and__3822__auto____11392)) {
        return value__11391 == null
      }else {
        return and__3822__auto____11392
      }
    }())) {
      var temp__3974__auto____11393 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____11393)) {
        var parent__11394 = temp__3974__auto____11393;
        return get_data.call(null, parent__11394, key, true)
      }else {
        return null
      }
    }else {
      return value__11391
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__11400 = function() {
    var or__3824__auto____11399 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____11399)) {
      return or__3824__auto____11399
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__11400, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__11412 = domina.nodes.call(null, parent_content);
  var children__11413 = domina.nodes.call(null, child_content);
  var first_child__11421 = function() {
    var frag__11414 = document.createDocumentFragment();
    var G__11415__11416 = cljs.core.seq.call(null, children__11413);
    if(G__11415__11416) {
      var child__11417 = cljs.core.first.call(null, G__11415__11416);
      var G__11415__11418 = G__11415__11416;
      while(true) {
        frag__11414.appendChild(child__11417);
        var temp__3974__auto____11419 = cljs.core.next.call(null, G__11415__11418);
        if(temp__3974__auto____11419) {
          var G__11415__11420 = temp__3974__auto____11419;
          var G__11423 = cljs.core.first.call(null, G__11415__11420);
          var G__11424 = G__11415__11420;
          child__11417 = G__11423;
          G__11415__11418 = G__11424;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__11414
  }();
  var other_children__11422 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__11412) - 1, function() {
    return first_child__11421.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__11412)) {
    f.call(null, cljs.core.first.call(null, parents__11412), first_child__11421);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__11395_SHARP_, p2__11396_SHARP_) {
      return f.call(null, p1__11395_SHARP_, p2__11396_SHARP_)
    }, cljs.core.rest.call(null, parents__11412), other_children__11422))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____11426 = obj;
  if(cljs.core.truth_(and__3822__auto____11426)) {
    return obj.length
  }else {
    return and__3822__auto____11426
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__11430__11431 = list_thing;
      if(G__11430__11431) {
        if(function() {
          var or__3824__auto____11432 = G__11430__11431.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____11432) {
            return or__3824__auto____11432
          }else {
            return G__11430__11431.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11430__11431.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11430__11431)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11430__11431)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__11433__11434 = content;
      if(G__11433__11434) {
        if(function() {
          var or__3824__auto____11435 = G__11433__11434.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____11435) {
            return or__3824__auto____11435
          }else {
            return G__11433__11434.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11433__11434.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11433__11434)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11433__11434)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__11436__11437 = content;
      if(G__11436__11437) {
        if(function() {
          var or__3824__auto____11438 = G__11436__11437.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____11438) {
            return or__3824__auto____11438
          }else {
            return G__11436__11437.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11436__11437.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11436__11437)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11436__11437)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = {};
domina.events.prevent_default = function prevent_default(evt) {
  if(function() {
    var and__3822__auto____10839 = evt;
    if(and__3822__auto____10839) {
      return evt.domina$events$Event$prevent_default$arity$1
    }else {
      return and__3822__auto____10839
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt)
  }else {
    var x__2363__auto____10840 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10841 = domina.events.prevent_default[goog.typeOf(x__2363__auto____10840)];
      if(or__3824__auto____10841) {
        return or__3824__auto____10841
      }else {
        var or__3824__auto____10842 = domina.events.prevent_default["_"];
        if(or__3824__auto____10842) {
          return or__3824__auto____10842
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if(function() {
    var and__3822__auto____10847 = evt;
    if(and__3822__auto____10847) {
      return evt.domina$events$Event$stop_propagation$arity$1
    }else {
      return and__3822__auto____10847
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt)
  }else {
    var x__2363__auto____10848 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10849 = domina.events.stop_propagation[goog.typeOf(x__2363__auto____10848)];
      if(or__3824__auto____10849) {
        return or__3824__auto____10849
      }else {
        var or__3824__auto____10850 = domina.events.stop_propagation["_"];
        if(or__3824__auto____10850) {
          return or__3824__auto____10850
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.target = function target(evt) {
  if(function() {
    var and__3822__auto____10855 = evt;
    if(and__3822__auto____10855) {
      return evt.domina$events$Event$target$arity$1
    }else {
      return and__3822__auto____10855
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt)
  }else {
    var x__2363__auto____10856 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10857 = domina.events.target[goog.typeOf(x__2363__auto____10856)];
      if(or__3824__auto____10857) {
        return or__3824__auto____10857
      }else {
        var or__3824__auto____10858 = domina.events.target["_"];
        if(or__3824__auto____10858) {
          return or__3824__auto____10858
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.current_target = function current_target(evt) {
  if(function() {
    var and__3822__auto____10863 = evt;
    if(and__3822__auto____10863) {
      return evt.domina$events$Event$current_target$arity$1
    }else {
      return and__3822__auto____10863
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt)
  }else {
    var x__2363__auto____10864 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10865 = domina.events.current_target[goog.typeOf(x__2363__auto____10864)];
      if(or__3824__auto____10865) {
        return or__3824__auto____10865
      }else {
        var or__3824__auto____10866 = domina.events.current_target["_"];
        if(or__3824__auto____10866) {
          return or__3824__auto____10866
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.event_type = function event_type(evt) {
  if(function() {
    var and__3822__auto____10871 = evt;
    if(and__3822__auto____10871) {
      return evt.domina$events$Event$event_type$arity$1
    }else {
      return and__3822__auto____10871
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt)
  }else {
    var x__2363__auto____10872 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10873 = domina.events.event_type[goog.typeOf(x__2363__auto____10872)];
      if(or__3824__auto____10873) {
        return or__3824__auto____10873
      }else {
        var or__3824__auto____10874 = domina.events.event_type["_"];
        if(or__3824__auto____10874) {
          return or__3824__auto____10874
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.raw_event = function raw_event(evt) {
  if(function() {
    var and__3822__auto____10879 = evt;
    if(and__3822__auto____10879) {
      return evt.domina$events$Event$raw_event$arity$1
    }else {
      return and__3822__auto____10879
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt)
  }else {
    var x__2363__auto____10880 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10881 = domina.events.raw_event[goog.typeOf(x__2363__auto____10880)];
      if(or__3824__auto____10881) {
        return or__3824__auto____10881
      }else {
        var or__3824__auto____10882 = domina.events.raw_event["_"];
        if(or__3824__auto____10882) {
          return or__3824__auto____10882
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.builtin_events = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.keyword, goog.object.getValues(goog.events.EventType)));
domina.events.root_element = window.document.documentElement;
domina.events.find_builtin_type = function find_builtin_type(evt_type) {
  if(cljs.core.contains_QMARK_.call(null, domina.events.builtin_events, evt_type)) {
    return cljs.core.name.call(null, evt_type)
  }else {
    return evt_type
  }
};
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if(void 0 === domina.events.t10899) {
        domina.events.t10899 = function(evt, f, create_listener_function, meta10900) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta10900 = meta10900;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472
        };
        domina.events.t10899.cljs$lang$type = true;
        domina.events.t10899.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
          return cljs.core.list.call(null, "domina.events/t10899")
        };
        domina.events.t10899.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var this__10902 = this;
          var temp__3971__auto____10903 = this__10902.evt[k];
          if(cljs.core.truth_(temp__3971__auto____10903)) {
            var val__10904 = temp__3971__auto____10903;
            return val__10904
          }else {
            return this__10902.evt[cljs.core.name.call(null, k)]
          }
        };
        domina.events.t10899.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var this__10905 = this;
          var or__3824__auto____10906 = o.cljs$core$ILookup$_lookup$arity$2(o, k);
          if(cljs.core.truth_(or__3824__auto____10906)) {
            return or__3824__auto____10906
          }else {
            return not_found
          }
        };
        domina.events.t10899.prototype.domina$events$Event$ = true;
        domina.events.t10899.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var this__10907 = this;
          return this__10907.evt.preventDefault()
        };
        domina.events.t10899.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var this__10908 = this;
          return this__10908.evt.stopPropagation()
        };
        domina.events.t10899.prototype.domina$events$Event$target$arity$1 = function(_) {
          var this__10909 = this;
          return this__10909.evt.target
        };
        domina.events.t10899.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var this__10910 = this;
          return this__10910.evt.currentTarget
        };
        domina.events.t10899.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var this__10911 = this;
          return this__10911.evt.type
        };
        domina.events.t10899.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var this__10912 = this;
          return this__10912.evt
        };
        domina.events.t10899.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10901) {
          var this__10913 = this;
          return this__10913.meta10900
        };
        domina.events.t10899.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10901, meta10900) {
          var this__10914 = this;
          return new domina.events.t10899(this__10914.evt, this__10914.f, this__10914.create_listener_function, meta10900)
        };
        domina.events.t10899
      }else {
      }
      return new domina.events.t10899(evt, f, create_listener_function, null)
    }());
    return true
  }
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f__10924 = domina.events.create_listener_function.call(null, listener);
  var t__10925 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__2462__auto____10932 = function iter__10926(s__10927) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10927__10930 = s__10927;
        while(true) {
          if(cljs.core.seq.call(null, s__10927__10930)) {
            var node__10931 = cljs.core.first.call(null, s__10927__10930);
            return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node__10931, t__10925, f__10924, capture) : goog.events.listen(node__10931, t__10925, f__10924, capture), iter__10926.call(null, cljs.core.rest.call(null, s__10927__10930)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____10932.call(null, domina.nodes.call(null, content))
  }())
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false)
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_BANG_.cljs$lang$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$lang$arity$3 = listen_BANG___3;
  return listen_BANG_
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false)
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_BANG_.cljs$lang$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$lang$arity$3 = capture_BANG___3;
  return capture_BANG_
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true)
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once_BANG_.cljs$lang$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$lang$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true)
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_once_BANG_.cljs$lang$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$lang$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element)
  };
  var unlisten_BANG___1 = function(content) {
    var G__10940__10941 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__10940__10941) {
      var node__10942 = cljs.core.first.call(null, G__10940__10941);
      var G__10940__10943 = G__10940__10941;
      while(true) {
        goog.events.removeAll(node__10942);
        var temp__3974__auto____10944 = cljs.core.next.call(null, G__10940__10943);
        if(temp__3974__auto____10944) {
          var G__10940__10945 = temp__3974__auto____10944;
          var G__10947 = cljs.core.first.call(null, G__10940__10945);
          var G__10948 = G__10940__10945;
          node__10942 = G__10947;
          G__10940__10943 = G__10948;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__10946 = domina.events.find_builtin_type.call(null, type);
    return goog.events.removeAll(domina.events.node, type__10946)
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten_BANG_.cljs$lang$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$lang$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$lang$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, cljs.core.PersistentVector.fromArray([n], true))
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while(true) {
      var temp__3971__auto____10951 = n.parentNode;
      if(cljs.core.truth_(temp__3971__auto____10951)) {
        var parent__10952 = temp__3971__auto____10951;
        var G__10953 = parent__10952;
        var G__10954 = cljs.core.cons.call(null, parent__10952, so_far);
        n = G__10953;
        so_far = G__10954;
        continue
      }else {
        return so_far
      }
      break
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestor_nodes.cljs$lang$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$lang$arity$2 = ancestor_nodes__2;
  return ancestor_nodes
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors__10968 = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var G__10969__10970 = cljs.core.seq.call(null, ancestors__10968);
  if(G__10969__10970) {
    var n__10971 = cljs.core.first.call(null, G__10969__10970);
    var G__10969__10972 = G__10969__10970;
    while(true) {
      if(cljs.core.truth_(n__10971.propagationStopped)) {
      }else {
        evt.currentTarget = n__10971;
        goog.events.fireListeners(n__10971, evt.type, true, evt)
      }
      var temp__3974__auto____10973 = cljs.core.next.call(null, G__10969__10972);
      if(temp__3974__auto____10973) {
        var G__10969__10974 = temp__3974__auto____10973;
        var G__10981 = cljs.core.first.call(null, G__10969__10974);
        var G__10982 = G__10969__10974;
        n__10971 = G__10981;
        G__10969__10972 = G__10982;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10975__10976 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors__10968));
  if(G__10975__10976) {
    var n__10977 = cljs.core.first.call(null, G__10975__10976);
    var G__10975__10978 = G__10975__10976;
    while(true) {
      if(cljs.core.truth_(n__10977.propagationStopped)) {
      }else {
        evt.currentTarget = n__10977;
        goog.events.fireListeners(n__10977, evt.type, false, evt)
      }
      var temp__3974__auto____10979 = cljs.core.next.call(null, G__10975__10978);
      if(temp__3974__auto____10979) {
        var G__10975__10980 = temp__3974__auto____10979;
        var G__10983 = cljs.core.first.call(null, G__10975__10980);
        var G__10984 = G__10975__10980;
        n__10977 = G__10983;
        G__10975__10978 = G__10984;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return evt.returnValue_
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt)
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3822__auto____10986 = o.getParentEventTarget;
  if(cljs.core.truth_(and__3822__auto____10986)) {
    return o.dispatchEvent
  }else {
    return and__3822__auto____10986
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map)
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt__11007 = new goog.events.Event(domina.events.find_builtin_type.call(null, type));
    var G__11008__11009 = cljs.core.seq.call(null, evt_map);
    if(G__11008__11009) {
      var G__11011__11013 = cljs.core.first.call(null, G__11008__11009);
      var vec__11012__11014 = G__11011__11013;
      var k__11015 = cljs.core.nth.call(null, vec__11012__11014, 0, null);
      var v__11016 = cljs.core.nth.call(null, vec__11012__11014, 1, null);
      var G__11008__11017 = G__11008__11009;
      var G__11011__11018 = G__11011__11013;
      var G__11008__11019 = G__11008__11017;
      while(true) {
        var vec__11020__11021 = G__11011__11018;
        var k__11022 = cljs.core.nth.call(null, vec__11020__11021, 0, null);
        var v__11023 = cljs.core.nth.call(null, vec__11020__11021, 1, null);
        var G__11008__11024 = G__11008__11019;
        evt__11007[k__11022] = v__11023;
        var temp__3974__auto____11025 = cljs.core.next.call(null, G__11008__11024);
        if(temp__3974__auto____11025) {
          var G__11008__11026 = temp__3974__auto____11025;
          var G__11027 = cljs.core.first.call(null, G__11008__11026);
          var G__11028 = G__11008__11026;
          G__11011__11018 = G__11027;
          G__11008__11019 = G__11028;
          continue
        }else {
        }
        break
      }
    }else {
    }
    if(cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt__11007)
    }else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt__11007)
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dispatch_BANG_.cljs$lang$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$lang$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key)
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__11031 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.mapcat.call(null, function(p1__11029_SHARP_) {
    return goog.events.getListeners(p1__11029_SHARP_, type__11031, false)
  }, domina.nodes.call(null, content))
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f) {
  return function() {
    return f.call(this)
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = ">~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if(specials.indexOf(query.slice(-1)) >= 0) {
      query += " * "
    }else {
      query += " "
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e))
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if(inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if(specials.indexOf(tv) < 0) {
          currentPart.tag = tv
        }else {
          currentPart.oper = tv
        }
        inTag = -1
      }
    };
    var endId = function() {
      if(inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1
      }
    };
    var endClass = function() {
      if(inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass()
    };
    var endPart = function() {
      endAll();
      if(inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)})
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if(currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase()
      }
      if(queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query
      }
      queryParts.push(currentPart);
      currentPart = null
    };
    for(;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if(lc == "\\") {
        continue
      }
      if(!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag
        }};
        inTag = x
      }
      if(inBrackets >= 0) {
        if(cc == "]") {
          if(!cp.attr) {
            cp.attr = ts(inBrackets + 1, x)
          }else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x)
          }
          var cmf = cp.matchFor;
          if(cmf) {
            if(cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1)
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1
        }else {
          if(cc == "=") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1
          }
        }
      }else {
        if(inParens >= 0) {
          if(cc == ")") {
            if(inPseudo >= 0) {
              cp.value = ts(inParens + 1, x)
            }
            inPseudo = inParens = -1
          }
        }else {
          if(cc == "#") {
            endAll();
            inId = x + 1
          }else {
            if(cc == ".") {
              endAll();
              inClass = x
            }else {
              if(cc == ":") {
                endAll();
                inPseudo = x
              }else {
                if(cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {}
                }else {
                  if(cc == "(") {
                    if(inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp)
                    }
                    inParens = x
                  }else {
                    if(cc == " " && lc != cc) {
                      endPart()
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts
  };
  var agree = function(first, second) {
    if(!first) {
      return second
    }
    if(!second) {
      return first
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments)
    }
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if(i) {
      r.push(i)
    }
    return r
  }
  var isElement = function(n) {
    return 1 == n.nodeType
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if(!elem) {
      return blank
    }
    if(attr == "class") {
      return elem.className || blank
    }
    if(attr == "for") {
      return elem.htmlFor || blank
    }
    if(attr == "style") {
      return elem.style.cssText || blank
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank
  };
  var attrs = {"*=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0
    }
  }, "^=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0
    }
  }, "$=":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length
    }
  }, "~=":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0
    }
  }, "|=":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0
    }
  }, "=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value
    }
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while(node = node[pSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var _lookRight = function(node) {
    while(node = node[nSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if(!tret) {
      return-1
    }
    var l = tret.length;
    if(cl == l && ci >= 0 && cl >= 0) {
      return ci
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for(;te;te = te[nSibling]) {
      if(simpleNodeTest(te)) {
        te["_i"] = ++i;
        if(node === te) {
          ci = i
        }
      }
    }
    return ci
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2)
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"]
    }
  }, "first-child":function() {
    return _lookLeft
  }, "last-child":function() {
    return _lookRight
  }, "only-child":function(name, condition) {
    return function(node) {
      if(!_lookLeft(node)) {
        return false
      }
      if(!_lookRight(node)) {
        return false
      }
      return true
    }
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for(var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if(nt === 1 || nt == 3) {
          return false
        }
      }
      return true
    }
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if(cz == '"' || cz == "'") {
      condition = condition.slice(1, -1)
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0
    }
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if(p.tag != "*") {
      ignores.tag = 1
    }
    if(!p.classes.length) {
      ignores.classes = 1
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem)
    }
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10)
    }
    if(condition == "odd") {
      return isOdd
    }else {
      if(condition == "even") {
        return isEven
      }
    }
    if(condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if(pred > 0) {
        if(idx < 0) {
          idx = idx % pred && pred + idx % pred
        }else {
          if(idx > 0) {
            if(idx >= pred) {
              lb = idx - idx % pred
            }
            idx = idx % pred
          }
        }
      }else {
        if(pred < 0) {
          pred *= -1;
          if(idx > 0) {
            ub = idx;
            idx = idx % pred
          }
        }
      }
      if(pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx
        }
      }else {
        condition = idx
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount
    }
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if(clc == "class") {
      cond = "className"
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc]
    }
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond)
    }
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if(!query) {
      return goog.functions.TRUE
    }
    ignores = ignores || {};
    var ff = null;
    if(!ignores.el) {
      ff = agree(ff, isElement)
    }
    if(!ignores.tag) {
      if(query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag()
        })
      }
    }
    if(!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className)
        });
        ff.count = idx
      })
    }
    if(!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if(pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value))
        }
      })
    }
    if(!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if(attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor)
        }else {
          if(a.length) {
            matcher = defaultGetter(a)
          }
        }
        if(matcher) {
          ff = agree(ff, matcher)
        }
      })
    }
    if(!ignores.id) {
      if(query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id
        })
      }
    }
    if(!ff) {
      if(!("default" in ignores)) {
        ff = goog.functions.TRUE
      }
    }
    return ff
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while(node = node[nSibling]) {
        if(noNextElementSibling && !isElement(node)) {
          continue
        }
        if((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node)
        }
        break
      }
      return ret
    }
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while(te) {
        if(simpleNodeTest(te)) {
          if(bag && !_isUnique(te, bag)) {
            break
          }
          if(filterFunc(te)) {
            ret.push(te)
          }
        }
        te = te[nSibling]
      }
      return ret
    }
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while(te = tret[x++]) {
        if(simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te)
        }
      }
      return ret
    }
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while(pn) {
      if(pn == root) {
        break
      }
      pn = pn.parentNode
    }
    return!!pn
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if(retFunc) {
      return retFunc
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if(!oper) {
      if(query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if(!te || !filterFunc(te)) {
            return
          }
          if(9 == root.nodeType) {
            return getArr(te, arr)
          }else {
            if(_isDescendant(te, root)) {
              return getArr(te, arr)
            }
          }
        }
      }else {
        if(ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while(te = tret[x++]) {
              if(filterFunc(te, root)) {
                ret.push(te)
              }
            }
            return ret
          }
        }else {
          if(!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                ret.push(te)
              }
              return ret
            }
          }else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                if(filterFunc(te, root)) {
                  ret.push(te)
                }
              }
              return ret
            }
          }
        }
      }
    }else {
      var skipFilters = {el:1};
      if(wildcardTag) {
        skipFilters.tag = 1
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc)
      }else {
        if("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc)
        }else {
          if(">" == oper) {
            retFunc = _childElements(filterFunc)
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for(var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if(x > 0) {
        bag = {};
        ret.nozip = true
      }
      var gef = getElementsFunc(qp);
      for(var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag)
      }
      if(!ret.length) {
        break
      }
      candidates = ret
    }
    return ret
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if(qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if(r) {
          r.nozip = true
        }
        return r
      }
    }
    return function(root) {
      return filterDown(root, qparts)
    }
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if(qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if(qsaCached && !opt_forceDOM) {
        return qsaCached
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if(domCached) {
      return domCached
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if(query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|=") == -1;
    if(useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if(!(9 == root.nodeType || nospace)) {
            throw"";
          }
          var r = root[qsa](tq);
          if(goog.userAgent.IE) {
            r.commentStrip = true
          }else {
            r.nozip = true
          }
          return r
        }catch(e) {
          return getQueryFunc(query, true)(root)
        }
      }
    }else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while(tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root))
        }
        return ret
      }
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if(caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx
    }else {
      return node.uniqueID
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx)
  };
  var _isUnique = function(node, bag) {
    if(!bag) {
      return 1
    }
    var id = _nodeUID(node);
    if(!bag[id]) {
      return bag[id] = 1
    }
    return 0
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if(arr && arr.nozip) {
      return arr
    }
    var ret = [];
    if(!arr || !arr.length) {
      return ret
    }
    if(arr[0]) {
      ret.push(arr[0])
    }
    if(arr.length < 2) {
      return ret
    }
    _zipIdx++;
    if(goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for(var x = 1, te;te = arr[x];x++) {
        if(arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te)
        }
        te.setAttribute(_zipIdxName, szidx)
      }
    }else {
      if(goog.userAgent.IE && arr.commentStrip) {
        try {
          for(var x = 1, te;te = arr[x];x++) {
            if(isElement(te)) {
              ret.push(te)
            }
          }
        }catch(e) {
        }
      }else {
        if(arr[0]) {
          arr[0][_zipIdxName] = _zipIdx
        }
        for(var x = 1, te;te = arr[x];x++) {
          if(arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te)
          }
          te[_zipIdxName] = _zipIdx
        }
      }
    }
    return ret
  };
  var query = function(query, root) {
    if(!query) {
      return[]
    }
    if(query.constructor == Array) {
      return query
    }
    if(!goog.isString(query)) {
      return[query]
    }
    if(goog.isString(root)) {
      root = goog.dom.getElement(root);
      if(!root) {
        return[]
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if(r && r.nozip) {
      return r
    }
    return _zip(r)
  };
  query.pseudos = pseudos;
  return query
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr)
  };
  var sel__2 = function(base, expr) {
    if(void 0 === domina.css.t6739) {
      domina.css.t6739 = function(expr, base, sel, meta6740) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta6740 = meta6740;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.css.t6739.cljs$lang$type = true;
      domina.css.t6739.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
        return cljs.core.list.call(null, "domina.css/t6739")
      };
      domina.css.t6739.prototype.domina$DomContent$ = true;
      domina.css.t6739.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var this__6742 = this;
        return cljs.core.mapcat.call(null, function(p1__6730_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__6742.expr, p1__6730_SHARP_))
        }, domina.nodes.call(null, this__6742.base))
      };
      domina.css.t6739.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var this__6743 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(p1__6731_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__6743.expr, p1__6731_SHARP_))
        }, domina.nodes.call(null, this__6743.base))))
      };
      domina.css.t6739.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6741) {
        var this__6744 = this;
        return this__6744.meta6740
      };
      domina.css.t6739.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6741, meta6740) {
        var this__6745 = this;
        return new domina.css.t6739(this__6745.expr, this__6745.base, this__6745.sel, meta6740)
      };
      domina.css.t6739
    }else {
    }
    return new domina.css.t6739(expr, base, sel, null)
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sel.cljs$lang$arity$1 = sel__1;
  sel.cljs$lang$arity$2 = sel__2;
  return sel
}();
goog.provide("tikvah.widgets.autocomplete");
goog.require("cljs.core");
goog.require("domina.events");
goog.require("domina.css");
goog.require("domina");
goog.require("goog.net.XhrIo");
var text_box__6728 = domina.css.sel.call(null, "#sample");
var ___6729 = domina.events.listen_BANG_.call(null, text_box__6728, "\ufdd0'keypress", function(e) {
  return domina.log.call(null, "key pressed", JSON.stringify.call(null, e))
});
goog.provide("tikvah.client");
goog.require("cljs.core");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.net.XhrIo");
tikvah.client.result_id = "eval-result";
tikvah.client.expr_id = "eval-expr";
tikvah.client.button_id = "eval-button";
tikvah.client.url = "/eval";
tikvah.client.receive_result = function receive_result(event) {
  return domina.set_text_BANG_.call(null, domina.by_id.call(null, tikvah.client.result_id), event.target.getResponseText())
};
tikvah.client.post_for_eval = function post_for_eval(expr_str) {
  return goog.net.XhrIo.send(tikvah.client.url, tikvah.client.receive_result, "POST", expr_str)
};
tikvah.client.get_expr = function get_expr() {
  return domina.by_id.call(null, tikvah.client.expr_id).value
};
tikvah.client.main = function main() {
  return domina.events.listen_BANG_.call(null, domina.by_id.call(null, tikvah.client.button_id), "\ufdd0'click", function(event) {
    tikvah.client.post_for_eval.call(null, tikvah.client.get_expr.call(null));
    domina.events.stop_propagation.call(null, event);
    return domina.events.prevent_default.call(null, event)
  })
};
goog.exportSymbol("tikvah.client.main", tikvah.client.main);
goog.provide("tikvah.framework");
goog.require("cljs.core");
tikvah.framework.behaviours = cljs.core.ObjMap.fromObject(["\ufdd0'speak"], {"\ufdd0'speak":function behaviours(this$) {
  return cljs.core.println.call(null, this$, "is speaking..")
}});
tikvah.framework.Entity = {};
tikvah.framework.call = function call(this$, behaviour) {
  if(function() {
    var and__3822__auto____6105 = this$;
    if(and__3822__auto____6105) {
      return this$.tikvah$framework$Entity$call$arity$2
    }else {
      return and__3822__auto____6105
    }
  }()) {
    return this$.tikvah$framework$Entity$call$arity$2(this$, behaviour)
  }else {
    var x__2363__auto____6106 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____6107 = tikvah.framework.call[goog.typeOf(x__2363__auto____6106)];
      if(or__3824__auto____6107) {
        return or__3824__auto____6107
      }else {
        var or__3824__auto____6108 = tikvah.framework.call["_"];
        if(or__3824__auto____6108) {
          return or__3824__auto____6108
        }else {
          throw cljs.core.missing_protocol.call(null, "Entity.call", this$);
        }
      }
    }().call(null, this$, behaviour)
  }
};
cljs.core.PersistentHashMap.prototype.tikvah$framework$Entity$ = true;
cljs.core.PersistentHashMap.prototype.tikvah$framework$Entity$call$arity$2 = function(this$, behaviour) {
  return behaviour.call(null, tikvah.framework.behaviours).call(null, this$)
};
tikvah.framework.entity = function() {
  var entity__delegate = function(id, attributes) {
    return cljs.core.apply.call(null, cljs.core.merge, cljs.core.ObjMap.fromObject(["\ufdd0'id"], {"\ufdd0'id":id}), cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, attributes)))
  };
  var entity = function(id, var_args) {
    var attributes = null;
    if(goog.isDef(var_args)) {
      attributes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return entity__delegate.call(this, id, attributes)
  };
  entity.cljs$lang$maxFixedArity = 1;
  entity.cljs$lang$applyTo = function(arglist__6109) {
    var id = cljs.core.first(arglist__6109);
    var attributes = cljs.core.rest(arglist__6109);
    return entity__delegate(id, attributes)
  };
  entity.cljs$lang$arity$variadic = entity__delegate;
  return entity
}();

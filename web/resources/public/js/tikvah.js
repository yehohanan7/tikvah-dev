var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__6884 = x == null ? null : x;
  if(p[goog.typeOf(x__6884)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__6885__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__6885 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6885__delegate.call(this, array, i, idxs)
    };
    G__6885.cljs$lang$maxFixedArity = 2;
    G__6885.cljs$lang$applyTo = function(arglist__6886) {
      var array = cljs.core.first(arglist__6886);
      var i = cljs.core.first(cljs.core.next(arglist__6886));
      var idxs = cljs.core.rest(cljs.core.next(arglist__6886));
      return G__6885__delegate(array, i, idxs)
    };
    G__6885.cljs$lang$arity$variadic = G__6885__delegate;
    return G__6885
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____6971 = this$;
      if(and__3822__auto____6971) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____6971
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2363__auto____6972 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6973 = cljs.core._invoke[goog.typeOf(x__2363__auto____6972)];
        if(or__3824__auto____6973) {
          return or__3824__auto____6973
        }else {
          var or__3824__auto____6974 = cljs.core._invoke["_"];
          if(or__3824__auto____6974) {
            return or__3824__auto____6974
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____6975 = this$;
      if(and__3822__auto____6975) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____6975
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2363__auto____6976 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6977 = cljs.core._invoke[goog.typeOf(x__2363__auto____6976)];
        if(or__3824__auto____6977) {
          return or__3824__auto____6977
        }else {
          var or__3824__auto____6978 = cljs.core._invoke["_"];
          if(or__3824__auto____6978) {
            return or__3824__auto____6978
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____6979 = this$;
      if(and__3822__auto____6979) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____6979
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2363__auto____6980 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6981 = cljs.core._invoke[goog.typeOf(x__2363__auto____6980)];
        if(or__3824__auto____6981) {
          return or__3824__auto____6981
        }else {
          var or__3824__auto____6982 = cljs.core._invoke["_"];
          if(or__3824__auto____6982) {
            return or__3824__auto____6982
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____6983 = this$;
      if(and__3822__auto____6983) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____6983
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2363__auto____6984 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6985 = cljs.core._invoke[goog.typeOf(x__2363__auto____6984)];
        if(or__3824__auto____6985) {
          return or__3824__auto____6985
        }else {
          var or__3824__auto____6986 = cljs.core._invoke["_"];
          if(or__3824__auto____6986) {
            return or__3824__auto____6986
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____6987 = this$;
      if(and__3822__auto____6987) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____6987
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2363__auto____6988 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6989 = cljs.core._invoke[goog.typeOf(x__2363__auto____6988)];
        if(or__3824__auto____6989) {
          return or__3824__auto____6989
        }else {
          var or__3824__auto____6990 = cljs.core._invoke["_"];
          if(or__3824__auto____6990) {
            return or__3824__auto____6990
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____6991 = this$;
      if(and__3822__auto____6991) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____6991
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2363__auto____6992 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6993 = cljs.core._invoke[goog.typeOf(x__2363__auto____6992)];
        if(or__3824__auto____6993) {
          return or__3824__auto____6993
        }else {
          var or__3824__auto____6994 = cljs.core._invoke["_"];
          if(or__3824__auto____6994) {
            return or__3824__auto____6994
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____6995 = this$;
      if(and__3822__auto____6995) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____6995
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2363__auto____6996 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6997 = cljs.core._invoke[goog.typeOf(x__2363__auto____6996)];
        if(or__3824__auto____6997) {
          return or__3824__auto____6997
        }else {
          var or__3824__auto____6998 = cljs.core._invoke["_"];
          if(or__3824__auto____6998) {
            return or__3824__auto____6998
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____6999 = this$;
      if(and__3822__auto____6999) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____6999
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2363__auto____7000 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7001 = cljs.core._invoke[goog.typeOf(x__2363__auto____7000)];
        if(or__3824__auto____7001) {
          return or__3824__auto____7001
        }else {
          var or__3824__auto____7002 = cljs.core._invoke["_"];
          if(or__3824__auto____7002) {
            return or__3824__auto____7002
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____7003 = this$;
      if(and__3822__auto____7003) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____7003
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2363__auto____7004 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7005 = cljs.core._invoke[goog.typeOf(x__2363__auto____7004)];
        if(or__3824__auto____7005) {
          return or__3824__auto____7005
        }else {
          var or__3824__auto____7006 = cljs.core._invoke["_"];
          if(or__3824__auto____7006) {
            return or__3824__auto____7006
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____7007 = this$;
      if(and__3822__auto____7007) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____7007
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2363__auto____7008 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7009 = cljs.core._invoke[goog.typeOf(x__2363__auto____7008)];
        if(or__3824__auto____7009) {
          return or__3824__auto____7009
        }else {
          var or__3824__auto____7010 = cljs.core._invoke["_"];
          if(or__3824__auto____7010) {
            return or__3824__auto____7010
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____7011 = this$;
      if(and__3822__auto____7011) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____7011
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2363__auto____7012 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7013 = cljs.core._invoke[goog.typeOf(x__2363__auto____7012)];
        if(or__3824__auto____7013) {
          return or__3824__auto____7013
        }else {
          var or__3824__auto____7014 = cljs.core._invoke["_"];
          if(or__3824__auto____7014) {
            return or__3824__auto____7014
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____7015 = this$;
      if(and__3822__auto____7015) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____7015
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2363__auto____7016 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7017 = cljs.core._invoke[goog.typeOf(x__2363__auto____7016)];
        if(or__3824__auto____7017) {
          return or__3824__auto____7017
        }else {
          var or__3824__auto____7018 = cljs.core._invoke["_"];
          if(or__3824__auto____7018) {
            return or__3824__auto____7018
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____7019 = this$;
      if(and__3822__auto____7019) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____7019
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2363__auto____7020 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7021 = cljs.core._invoke[goog.typeOf(x__2363__auto____7020)];
        if(or__3824__auto____7021) {
          return or__3824__auto____7021
        }else {
          var or__3824__auto____7022 = cljs.core._invoke["_"];
          if(or__3824__auto____7022) {
            return or__3824__auto____7022
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____7023 = this$;
      if(and__3822__auto____7023) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____7023
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2363__auto____7024 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7025 = cljs.core._invoke[goog.typeOf(x__2363__auto____7024)];
        if(or__3824__auto____7025) {
          return or__3824__auto____7025
        }else {
          var or__3824__auto____7026 = cljs.core._invoke["_"];
          if(or__3824__auto____7026) {
            return or__3824__auto____7026
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____7027 = this$;
      if(and__3822__auto____7027) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____7027
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2363__auto____7028 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7029 = cljs.core._invoke[goog.typeOf(x__2363__auto____7028)];
        if(or__3824__auto____7029) {
          return or__3824__auto____7029
        }else {
          var or__3824__auto____7030 = cljs.core._invoke["_"];
          if(or__3824__auto____7030) {
            return or__3824__auto____7030
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____7031 = this$;
      if(and__3822__auto____7031) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____7031
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2363__auto____7032 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7033 = cljs.core._invoke[goog.typeOf(x__2363__auto____7032)];
        if(or__3824__auto____7033) {
          return or__3824__auto____7033
        }else {
          var or__3824__auto____7034 = cljs.core._invoke["_"];
          if(or__3824__auto____7034) {
            return or__3824__auto____7034
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____7035 = this$;
      if(and__3822__auto____7035) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____7035
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2363__auto____7036 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7037 = cljs.core._invoke[goog.typeOf(x__2363__auto____7036)];
        if(or__3824__auto____7037) {
          return or__3824__auto____7037
        }else {
          var or__3824__auto____7038 = cljs.core._invoke["_"];
          if(or__3824__auto____7038) {
            return or__3824__auto____7038
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____7039 = this$;
      if(and__3822__auto____7039) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____7039
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2363__auto____7040 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7041 = cljs.core._invoke[goog.typeOf(x__2363__auto____7040)];
        if(or__3824__auto____7041) {
          return or__3824__auto____7041
        }else {
          var or__3824__auto____7042 = cljs.core._invoke["_"];
          if(or__3824__auto____7042) {
            return or__3824__auto____7042
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____7043 = this$;
      if(and__3822__auto____7043) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____7043
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2363__auto____7044 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7045 = cljs.core._invoke[goog.typeOf(x__2363__auto____7044)];
        if(or__3824__auto____7045) {
          return or__3824__auto____7045
        }else {
          var or__3824__auto____7046 = cljs.core._invoke["_"];
          if(or__3824__auto____7046) {
            return or__3824__auto____7046
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____7047 = this$;
      if(and__3822__auto____7047) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____7047
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2363__auto____7048 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7049 = cljs.core._invoke[goog.typeOf(x__2363__auto____7048)];
        if(or__3824__auto____7049) {
          return or__3824__auto____7049
        }else {
          var or__3824__auto____7050 = cljs.core._invoke["_"];
          if(or__3824__auto____7050) {
            return or__3824__auto____7050
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____7051 = this$;
      if(and__3822__auto____7051) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____7051
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2363__auto____7052 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7053 = cljs.core._invoke[goog.typeOf(x__2363__auto____7052)];
        if(or__3824__auto____7053) {
          return or__3824__auto____7053
        }else {
          var or__3824__auto____7054 = cljs.core._invoke["_"];
          if(or__3824__auto____7054) {
            return or__3824__auto____7054
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____7059 = coll;
    if(and__3822__auto____7059) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____7059
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2363__auto____7060 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7061 = cljs.core._count[goog.typeOf(x__2363__auto____7060)];
      if(or__3824__auto____7061) {
        return or__3824__auto____7061
      }else {
        var or__3824__auto____7062 = cljs.core._count["_"];
        if(or__3824__auto____7062) {
          return or__3824__auto____7062
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____7067 = coll;
    if(and__3822__auto____7067) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____7067
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2363__auto____7068 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7069 = cljs.core._empty[goog.typeOf(x__2363__auto____7068)];
      if(or__3824__auto____7069) {
        return or__3824__auto____7069
      }else {
        var or__3824__auto____7070 = cljs.core._empty["_"];
        if(or__3824__auto____7070) {
          return or__3824__auto____7070
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____7075 = coll;
    if(and__3822__auto____7075) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____7075
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2363__auto____7076 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7077 = cljs.core._conj[goog.typeOf(x__2363__auto____7076)];
      if(or__3824__auto____7077) {
        return or__3824__auto____7077
      }else {
        var or__3824__auto____7078 = cljs.core._conj["_"];
        if(or__3824__auto____7078) {
          return or__3824__auto____7078
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____7087 = coll;
      if(and__3822__auto____7087) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____7087
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2363__auto____7088 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7089 = cljs.core._nth[goog.typeOf(x__2363__auto____7088)];
        if(or__3824__auto____7089) {
          return or__3824__auto____7089
        }else {
          var or__3824__auto____7090 = cljs.core._nth["_"];
          if(or__3824__auto____7090) {
            return or__3824__auto____7090
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____7091 = coll;
      if(and__3822__auto____7091) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____7091
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2363__auto____7092 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7093 = cljs.core._nth[goog.typeOf(x__2363__auto____7092)];
        if(or__3824__auto____7093) {
          return or__3824__auto____7093
        }else {
          var or__3824__auto____7094 = cljs.core._nth["_"];
          if(or__3824__auto____7094) {
            return or__3824__auto____7094
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____7099 = coll;
    if(and__3822__auto____7099) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____7099
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2363__auto____7100 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7101 = cljs.core._first[goog.typeOf(x__2363__auto____7100)];
      if(or__3824__auto____7101) {
        return or__3824__auto____7101
      }else {
        var or__3824__auto____7102 = cljs.core._first["_"];
        if(or__3824__auto____7102) {
          return or__3824__auto____7102
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____7107 = coll;
    if(and__3822__auto____7107) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____7107
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2363__auto____7108 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7109 = cljs.core._rest[goog.typeOf(x__2363__auto____7108)];
      if(or__3824__auto____7109) {
        return or__3824__auto____7109
      }else {
        var or__3824__auto____7110 = cljs.core._rest["_"];
        if(or__3824__auto____7110) {
          return or__3824__auto____7110
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____7115 = coll;
    if(and__3822__auto____7115) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____7115
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2363__auto____7116 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7117 = cljs.core._next[goog.typeOf(x__2363__auto____7116)];
      if(or__3824__auto____7117) {
        return or__3824__auto____7117
      }else {
        var or__3824__auto____7118 = cljs.core._next["_"];
        if(or__3824__auto____7118) {
          return or__3824__auto____7118
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____7127 = o;
      if(and__3822__auto____7127) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____7127
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2363__auto____7128 = o == null ? null : o;
      return function() {
        var or__3824__auto____7129 = cljs.core._lookup[goog.typeOf(x__2363__auto____7128)];
        if(or__3824__auto____7129) {
          return or__3824__auto____7129
        }else {
          var or__3824__auto____7130 = cljs.core._lookup["_"];
          if(or__3824__auto____7130) {
            return or__3824__auto____7130
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____7131 = o;
      if(and__3822__auto____7131) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____7131
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2363__auto____7132 = o == null ? null : o;
      return function() {
        var or__3824__auto____7133 = cljs.core._lookup[goog.typeOf(x__2363__auto____7132)];
        if(or__3824__auto____7133) {
          return or__3824__auto____7133
        }else {
          var or__3824__auto____7134 = cljs.core._lookup["_"];
          if(or__3824__auto____7134) {
            return or__3824__auto____7134
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____7139 = coll;
    if(and__3822__auto____7139) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____7139
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2363__auto____7140 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7141 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2363__auto____7140)];
      if(or__3824__auto____7141) {
        return or__3824__auto____7141
      }else {
        var or__3824__auto____7142 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____7142) {
          return or__3824__auto____7142
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____7147 = coll;
    if(and__3822__auto____7147) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____7147
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2363__auto____7148 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7149 = cljs.core._assoc[goog.typeOf(x__2363__auto____7148)];
      if(or__3824__auto____7149) {
        return or__3824__auto____7149
      }else {
        var or__3824__auto____7150 = cljs.core._assoc["_"];
        if(or__3824__auto____7150) {
          return or__3824__auto____7150
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____7155 = coll;
    if(and__3822__auto____7155) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____7155
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2363__auto____7156 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7157 = cljs.core._dissoc[goog.typeOf(x__2363__auto____7156)];
      if(or__3824__auto____7157) {
        return or__3824__auto____7157
      }else {
        var or__3824__auto____7158 = cljs.core._dissoc["_"];
        if(or__3824__auto____7158) {
          return or__3824__auto____7158
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____7163 = coll;
    if(and__3822__auto____7163) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____7163
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2363__auto____7164 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7165 = cljs.core._key[goog.typeOf(x__2363__auto____7164)];
      if(or__3824__auto____7165) {
        return or__3824__auto____7165
      }else {
        var or__3824__auto____7166 = cljs.core._key["_"];
        if(or__3824__auto____7166) {
          return or__3824__auto____7166
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____7171 = coll;
    if(and__3822__auto____7171) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____7171
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2363__auto____7172 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7173 = cljs.core._val[goog.typeOf(x__2363__auto____7172)];
      if(or__3824__auto____7173) {
        return or__3824__auto____7173
      }else {
        var or__3824__auto____7174 = cljs.core._val["_"];
        if(or__3824__auto____7174) {
          return or__3824__auto____7174
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____7179 = coll;
    if(and__3822__auto____7179) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____7179
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2363__auto____7180 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7181 = cljs.core._disjoin[goog.typeOf(x__2363__auto____7180)];
      if(or__3824__auto____7181) {
        return or__3824__auto____7181
      }else {
        var or__3824__auto____7182 = cljs.core._disjoin["_"];
        if(or__3824__auto____7182) {
          return or__3824__auto____7182
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____7187 = coll;
    if(and__3822__auto____7187) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____7187
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2363__auto____7188 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7189 = cljs.core._peek[goog.typeOf(x__2363__auto____7188)];
      if(or__3824__auto____7189) {
        return or__3824__auto____7189
      }else {
        var or__3824__auto____7190 = cljs.core._peek["_"];
        if(or__3824__auto____7190) {
          return or__3824__auto____7190
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____7195 = coll;
    if(and__3822__auto____7195) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____7195
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2363__auto____7196 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7197 = cljs.core._pop[goog.typeOf(x__2363__auto____7196)];
      if(or__3824__auto____7197) {
        return or__3824__auto____7197
      }else {
        var or__3824__auto____7198 = cljs.core._pop["_"];
        if(or__3824__auto____7198) {
          return or__3824__auto____7198
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____7203 = coll;
    if(and__3822__auto____7203) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____7203
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2363__auto____7204 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7205 = cljs.core._assoc_n[goog.typeOf(x__2363__auto____7204)];
      if(or__3824__auto____7205) {
        return or__3824__auto____7205
      }else {
        var or__3824__auto____7206 = cljs.core._assoc_n["_"];
        if(or__3824__auto____7206) {
          return or__3824__auto____7206
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____7211 = o;
    if(and__3822__auto____7211) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____7211
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2363__auto____7212 = o == null ? null : o;
    return function() {
      var or__3824__auto____7213 = cljs.core._deref[goog.typeOf(x__2363__auto____7212)];
      if(or__3824__auto____7213) {
        return or__3824__auto____7213
      }else {
        var or__3824__auto____7214 = cljs.core._deref["_"];
        if(or__3824__auto____7214) {
          return or__3824__auto____7214
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____7219 = o;
    if(and__3822__auto____7219) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____7219
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2363__auto____7220 = o == null ? null : o;
    return function() {
      var or__3824__auto____7221 = cljs.core._deref_with_timeout[goog.typeOf(x__2363__auto____7220)];
      if(or__3824__auto____7221) {
        return or__3824__auto____7221
      }else {
        var or__3824__auto____7222 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____7222) {
          return or__3824__auto____7222
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____7227 = o;
    if(and__3822__auto____7227) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____7227
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2363__auto____7228 = o == null ? null : o;
    return function() {
      var or__3824__auto____7229 = cljs.core._meta[goog.typeOf(x__2363__auto____7228)];
      if(or__3824__auto____7229) {
        return or__3824__auto____7229
      }else {
        var or__3824__auto____7230 = cljs.core._meta["_"];
        if(or__3824__auto____7230) {
          return or__3824__auto____7230
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____7235 = o;
    if(and__3822__auto____7235) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____7235
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2363__auto____7236 = o == null ? null : o;
    return function() {
      var or__3824__auto____7237 = cljs.core._with_meta[goog.typeOf(x__2363__auto____7236)];
      if(or__3824__auto____7237) {
        return or__3824__auto____7237
      }else {
        var or__3824__auto____7238 = cljs.core._with_meta["_"];
        if(or__3824__auto____7238) {
          return or__3824__auto____7238
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____7247 = coll;
      if(and__3822__auto____7247) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____7247
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2363__auto____7248 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7249 = cljs.core._reduce[goog.typeOf(x__2363__auto____7248)];
        if(or__3824__auto____7249) {
          return or__3824__auto____7249
        }else {
          var or__3824__auto____7250 = cljs.core._reduce["_"];
          if(or__3824__auto____7250) {
            return or__3824__auto____7250
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____7251 = coll;
      if(and__3822__auto____7251) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____7251
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2363__auto____7252 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7253 = cljs.core._reduce[goog.typeOf(x__2363__auto____7252)];
        if(or__3824__auto____7253) {
          return or__3824__auto____7253
        }else {
          var or__3824__auto____7254 = cljs.core._reduce["_"];
          if(or__3824__auto____7254) {
            return or__3824__auto____7254
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____7259 = coll;
    if(and__3822__auto____7259) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____7259
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2363__auto____7260 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7261 = cljs.core._kv_reduce[goog.typeOf(x__2363__auto____7260)];
      if(or__3824__auto____7261) {
        return or__3824__auto____7261
      }else {
        var or__3824__auto____7262 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____7262) {
          return or__3824__auto____7262
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____7267 = o;
    if(and__3822__auto____7267) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____7267
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2363__auto____7268 = o == null ? null : o;
    return function() {
      var or__3824__auto____7269 = cljs.core._equiv[goog.typeOf(x__2363__auto____7268)];
      if(or__3824__auto____7269) {
        return or__3824__auto____7269
      }else {
        var or__3824__auto____7270 = cljs.core._equiv["_"];
        if(or__3824__auto____7270) {
          return or__3824__auto____7270
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____7275 = o;
    if(and__3822__auto____7275) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____7275
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2363__auto____7276 = o == null ? null : o;
    return function() {
      var or__3824__auto____7277 = cljs.core._hash[goog.typeOf(x__2363__auto____7276)];
      if(or__3824__auto____7277) {
        return or__3824__auto____7277
      }else {
        var or__3824__auto____7278 = cljs.core._hash["_"];
        if(or__3824__auto____7278) {
          return or__3824__auto____7278
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____7283 = o;
    if(and__3822__auto____7283) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____7283
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2363__auto____7284 = o == null ? null : o;
    return function() {
      var or__3824__auto____7285 = cljs.core._seq[goog.typeOf(x__2363__auto____7284)];
      if(or__3824__auto____7285) {
        return or__3824__auto____7285
      }else {
        var or__3824__auto____7286 = cljs.core._seq["_"];
        if(or__3824__auto____7286) {
          return or__3824__auto____7286
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____7291 = coll;
    if(and__3822__auto____7291) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____7291
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2363__auto____7292 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7293 = cljs.core._rseq[goog.typeOf(x__2363__auto____7292)];
      if(or__3824__auto____7293) {
        return or__3824__auto____7293
      }else {
        var or__3824__auto____7294 = cljs.core._rseq["_"];
        if(or__3824__auto____7294) {
          return or__3824__auto____7294
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7299 = coll;
    if(and__3822__auto____7299) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____7299
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2363__auto____7300 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7301 = cljs.core._sorted_seq[goog.typeOf(x__2363__auto____7300)];
      if(or__3824__auto____7301) {
        return or__3824__auto____7301
      }else {
        var or__3824__auto____7302 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____7302) {
          return or__3824__auto____7302
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7307 = coll;
    if(and__3822__auto____7307) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____7307
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2363__auto____7308 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7309 = cljs.core._sorted_seq_from[goog.typeOf(x__2363__auto____7308)];
      if(or__3824__auto____7309) {
        return or__3824__auto____7309
      }else {
        var or__3824__auto____7310 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____7310) {
          return or__3824__auto____7310
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____7315 = coll;
    if(and__3822__auto____7315) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____7315
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2363__auto____7316 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7317 = cljs.core._entry_key[goog.typeOf(x__2363__auto____7316)];
      if(or__3824__auto____7317) {
        return or__3824__auto____7317
      }else {
        var or__3824__auto____7318 = cljs.core._entry_key["_"];
        if(or__3824__auto____7318) {
          return or__3824__auto____7318
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____7323 = coll;
    if(and__3822__auto____7323) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____7323
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2363__auto____7324 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7325 = cljs.core._comparator[goog.typeOf(x__2363__auto____7324)];
      if(or__3824__auto____7325) {
        return or__3824__auto____7325
      }else {
        var or__3824__auto____7326 = cljs.core._comparator["_"];
        if(or__3824__auto____7326) {
          return or__3824__auto____7326
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____7331 = o;
    if(and__3822__auto____7331) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____7331
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2363__auto____7332 = o == null ? null : o;
    return function() {
      var or__3824__auto____7333 = cljs.core._pr_seq[goog.typeOf(x__2363__auto____7332)];
      if(or__3824__auto____7333) {
        return or__3824__auto____7333
      }else {
        var or__3824__auto____7334 = cljs.core._pr_seq["_"];
        if(or__3824__auto____7334) {
          return or__3824__auto____7334
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____7339 = d;
    if(and__3822__auto____7339) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____7339
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2363__auto____7340 = d == null ? null : d;
    return function() {
      var or__3824__auto____7341 = cljs.core._realized_QMARK_[goog.typeOf(x__2363__auto____7340)];
      if(or__3824__auto____7341) {
        return or__3824__auto____7341
      }else {
        var or__3824__auto____7342 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____7342) {
          return or__3824__auto____7342
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____7347 = this$;
    if(and__3822__auto____7347) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____7347
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2363__auto____7348 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7349 = cljs.core._notify_watches[goog.typeOf(x__2363__auto____7348)];
      if(or__3824__auto____7349) {
        return or__3824__auto____7349
      }else {
        var or__3824__auto____7350 = cljs.core._notify_watches["_"];
        if(or__3824__auto____7350) {
          return or__3824__auto____7350
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____7355 = this$;
    if(and__3822__auto____7355) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____7355
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2363__auto____7356 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7357 = cljs.core._add_watch[goog.typeOf(x__2363__auto____7356)];
      if(or__3824__auto____7357) {
        return or__3824__auto____7357
      }else {
        var or__3824__auto____7358 = cljs.core._add_watch["_"];
        if(or__3824__auto____7358) {
          return or__3824__auto____7358
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____7363 = this$;
    if(and__3822__auto____7363) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____7363
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2363__auto____7364 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7365 = cljs.core._remove_watch[goog.typeOf(x__2363__auto____7364)];
      if(or__3824__auto____7365) {
        return or__3824__auto____7365
      }else {
        var or__3824__auto____7366 = cljs.core._remove_watch["_"];
        if(or__3824__auto____7366) {
          return or__3824__auto____7366
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____7371 = coll;
    if(and__3822__auto____7371) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____7371
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2363__auto____7372 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7373 = cljs.core._as_transient[goog.typeOf(x__2363__auto____7372)];
      if(or__3824__auto____7373) {
        return or__3824__auto____7373
      }else {
        var or__3824__auto____7374 = cljs.core._as_transient["_"];
        if(or__3824__auto____7374) {
          return or__3824__auto____7374
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____7379 = tcoll;
    if(and__3822__auto____7379) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____7379
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2363__auto____7380 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7381 = cljs.core._conj_BANG_[goog.typeOf(x__2363__auto____7380)];
      if(or__3824__auto____7381) {
        return or__3824__auto____7381
      }else {
        var or__3824__auto____7382 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____7382) {
          return or__3824__auto____7382
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7387 = tcoll;
    if(and__3822__auto____7387) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____7387
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____7388 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7389 = cljs.core._persistent_BANG_[goog.typeOf(x__2363__auto____7388)];
      if(or__3824__auto____7389) {
        return or__3824__auto____7389
      }else {
        var or__3824__auto____7390 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____7390) {
          return or__3824__auto____7390
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____7395 = tcoll;
    if(and__3822__auto____7395) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____7395
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2363__auto____7396 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7397 = cljs.core._assoc_BANG_[goog.typeOf(x__2363__auto____7396)];
      if(or__3824__auto____7397) {
        return or__3824__auto____7397
      }else {
        var or__3824__auto____7398 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____7398) {
          return or__3824__auto____7398
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____7403 = tcoll;
    if(and__3822__auto____7403) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____7403
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2363__auto____7404 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7405 = cljs.core._dissoc_BANG_[goog.typeOf(x__2363__auto____7404)];
      if(or__3824__auto____7405) {
        return or__3824__auto____7405
      }else {
        var or__3824__auto____7406 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____7406) {
          return or__3824__auto____7406
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____7411 = tcoll;
    if(and__3822__auto____7411) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____7411
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2363__auto____7412 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7413 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2363__auto____7412)];
      if(or__3824__auto____7413) {
        return or__3824__auto____7413
      }else {
        var or__3824__auto____7414 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____7414) {
          return or__3824__auto____7414
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7419 = tcoll;
    if(and__3822__auto____7419) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____7419
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____7420 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7421 = cljs.core._pop_BANG_[goog.typeOf(x__2363__auto____7420)];
      if(or__3824__auto____7421) {
        return or__3824__auto____7421
      }else {
        var or__3824__auto____7422 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____7422) {
          return or__3824__auto____7422
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____7427 = tcoll;
    if(and__3822__auto____7427) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____7427
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2363__auto____7428 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7429 = cljs.core._disjoin_BANG_[goog.typeOf(x__2363__auto____7428)];
      if(or__3824__auto____7429) {
        return or__3824__auto____7429
      }else {
        var or__3824__auto____7430 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____7430) {
          return or__3824__auto____7430
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____7435 = x;
    if(and__3822__auto____7435) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____7435
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2363__auto____7436 = x == null ? null : x;
    return function() {
      var or__3824__auto____7437 = cljs.core._compare[goog.typeOf(x__2363__auto____7436)];
      if(or__3824__auto____7437) {
        return or__3824__auto____7437
      }else {
        var or__3824__auto____7438 = cljs.core._compare["_"];
        if(or__3824__auto____7438) {
          return or__3824__auto____7438
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____7443 = coll;
    if(and__3822__auto____7443) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____7443
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2363__auto____7444 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7445 = cljs.core._drop_first[goog.typeOf(x__2363__auto____7444)];
      if(or__3824__auto____7445) {
        return or__3824__auto____7445
      }else {
        var or__3824__auto____7446 = cljs.core._drop_first["_"];
        if(or__3824__auto____7446) {
          return or__3824__auto____7446
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____7451 = coll;
    if(and__3822__auto____7451) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____7451
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2363__auto____7452 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7453 = cljs.core._chunked_first[goog.typeOf(x__2363__auto____7452)];
      if(or__3824__auto____7453) {
        return or__3824__auto____7453
      }else {
        var or__3824__auto____7454 = cljs.core._chunked_first["_"];
        if(or__3824__auto____7454) {
          return or__3824__auto____7454
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____7459 = coll;
    if(and__3822__auto____7459) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____7459
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2363__auto____7460 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7461 = cljs.core._chunked_rest[goog.typeOf(x__2363__auto____7460)];
      if(or__3824__auto____7461) {
        return or__3824__auto____7461
      }else {
        var or__3824__auto____7462 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____7462) {
          return or__3824__auto____7462
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____7467 = coll;
    if(and__3822__auto____7467) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____7467
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2363__auto____7468 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7469 = cljs.core._chunked_next[goog.typeOf(x__2363__auto____7468)];
      if(or__3824__auto____7469) {
        return or__3824__auto____7469
      }else {
        var or__3824__auto____7470 = cljs.core._chunked_next["_"];
        if(or__3824__auto____7470) {
          return or__3824__auto____7470
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____7472 = x === y;
    if(or__3824__auto____7472) {
      return or__3824__auto____7472
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__7473__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7474 = y;
            var G__7475 = cljs.core.first.call(null, more);
            var G__7476 = cljs.core.next.call(null, more);
            x = G__7474;
            y = G__7475;
            more = G__7476;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7473 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7473__delegate.call(this, x, y, more)
    };
    G__7473.cljs$lang$maxFixedArity = 2;
    G__7473.cljs$lang$applyTo = function(arglist__7477) {
      var x = cljs.core.first(arglist__7477);
      var y = cljs.core.first(cljs.core.next(arglist__7477));
      var more = cljs.core.rest(cljs.core.next(arglist__7477));
      return G__7473__delegate(x, y, more)
    };
    G__7473.cljs$lang$arity$variadic = G__7473__delegate;
    return G__7473
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__7478 = null;
  var G__7478__2 = function(o, k) {
    return null
  };
  var G__7478__3 = function(o, k, not_found) {
    return not_found
  };
  G__7478 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7478__2.call(this, o, k);
      case 3:
        return G__7478__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7478
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__7479 = null;
  var G__7479__2 = function(_, f) {
    return f.call(null)
  };
  var G__7479__3 = function(_, f, start) {
    return start
  };
  G__7479 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7479__2.call(this, _, f);
      case 3:
        return G__7479__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7479
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__7480 = null;
  var G__7480__2 = function(_, n) {
    return null
  };
  var G__7480__3 = function(_, n, not_found) {
    return not_found
  };
  G__7480 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7480__2.call(this, _, n);
      case 3:
        return G__7480__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7480
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____7481 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____7481) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____7481
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__7494 = cljs.core._count.call(null, cicoll);
    if(cnt__7494 === 0) {
      return f.call(null)
    }else {
      var val__7495 = cljs.core._nth.call(null, cicoll, 0);
      var n__7496 = 1;
      while(true) {
        if(n__7496 < cnt__7494) {
          var nval__7497 = f.call(null, val__7495, cljs.core._nth.call(null, cicoll, n__7496));
          if(cljs.core.reduced_QMARK_.call(null, nval__7497)) {
            return cljs.core.deref.call(null, nval__7497)
          }else {
            var G__7506 = nval__7497;
            var G__7507 = n__7496 + 1;
            val__7495 = G__7506;
            n__7496 = G__7507;
            continue
          }
        }else {
          return val__7495
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__7498 = cljs.core._count.call(null, cicoll);
    var val__7499 = val;
    var n__7500 = 0;
    while(true) {
      if(n__7500 < cnt__7498) {
        var nval__7501 = f.call(null, val__7499, cljs.core._nth.call(null, cicoll, n__7500));
        if(cljs.core.reduced_QMARK_.call(null, nval__7501)) {
          return cljs.core.deref.call(null, nval__7501)
        }else {
          var G__7508 = nval__7501;
          var G__7509 = n__7500 + 1;
          val__7499 = G__7508;
          n__7500 = G__7509;
          continue
        }
      }else {
        return val__7499
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__7502 = cljs.core._count.call(null, cicoll);
    var val__7503 = val;
    var n__7504 = idx;
    while(true) {
      if(n__7504 < cnt__7502) {
        var nval__7505 = f.call(null, val__7503, cljs.core._nth.call(null, cicoll, n__7504));
        if(cljs.core.reduced_QMARK_.call(null, nval__7505)) {
          return cljs.core.deref.call(null, nval__7505)
        }else {
          var G__7510 = nval__7505;
          var G__7511 = n__7504 + 1;
          val__7503 = G__7510;
          n__7504 = G__7511;
          continue
        }
      }else {
        return val__7503
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__7524 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__7525 = arr[0];
      var n__7526 = 1;
      while(true) {
        if(n__7526 < cnt__7524) {
          var nval__7527 = f.call(null, val__7525, arr[n__7526]);
          if(cljs.core.reduced_QMARK_.call(null, nval__7527)) {
            return cljs.core.deref.call(null, nval__7527)
          }else {
            var G__7536 = nval__7527;
            var G__7537 = n__7526 + 1;
            val__7525 = G__7536;
            n__7526 = G__7537;
            continue
          }
        }else {
          return val__7525
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__7528 = arr.length;
    var val__7529 = val;
    var n__7530 = 0;
    while(true) {
      if(n__7530 < cnt__7528) {
        var nval__7531 = f.call(null, val__7529, arr[n__7530]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7531)) {
          return cljs.core.deref.call(null, nval__7531)
        }else {
          var G__7538 = nval__7531;
          var G__7539 = n__7530 + 1;
          val__7529 = G__7538;
          n__7530 = G__7539;
          continue
        }
      }else {
        return val__7529
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__7532 = arr.length;
    var val__7533 = val;
    var n__7534 = idx;
    while(true) {
      if(n__7534 < cnt__7532) {
        var nval__7535 = f.call(null, val__7533, arr[n__7534]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7535)) {
          return cljs.core.deref.call(null, nval__7535)
        }else {
          var G__7540 = nval__7535;
          var G__7541 = n__7534 + 1;
          val__7533 = G__7540;
          n__7534 = G__7541;
          continue
        }
      }else {
        return val__7533
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7542 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__7543 = this;
  if(this__7543.i + 1 < this__7543.a.length) {
    return new cljs.core.IndexedSeq(this__7543.a, this__7543.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7544 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__7545 = this;
  var c__7546 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__7546 > 0) {
    return new cljs.core.RSeq(coll, c__7546 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__7547 = this;
  var this__7548 = this;
  return cljs.core.pr_str.call(null, this__7548)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__7549 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7549.a)) {
    return cljs.core.ci_reduce.call(null, this__7549.a, f, this__7549.a[this__7549.i], this__7549.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__7549.a[this__7549.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__7550 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7550.a)) {
    return cljs.core.ci_reduce.call(null, this__7550.a, f, start, this__7550.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__7551 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__7552 = this;
  return this__7552.a.length - this__7552.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__7553 = this;
  return this__7553.a[this__7553.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__7554 = this;
  if(this__7554.i + 1 < this__7554.a.length) {
    return new cljs.core.IndexedSeq(this__7554.a, this__7554.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7555 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__7556 = this;
  var i__7557 = n + this__7556.i;
  if(i__7557 < this__7556.a.length) {
    return this__7556.a[i__7557]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__7558 = this;
  var i__7559 = n + this__7558.i;
  if(i__7559 < this__7558.a.length) {
    return this__7558.a[i__7559]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__7560 = null;
  var G__7560__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__7560__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__7560 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7560__2.call(this, array, f);
      case 3:
        return G__7560__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7560
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__7561 = null;
  var G__7561__2 = function(array, k) {
    return array[k]
  };
  var G__7561__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__7561 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7561__2.call(this, array, k);
      case 3:
        return G__7561__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7561
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__7562 = null;
  var G__7562__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__7562__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__7562 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7562__2.call(this, array, n);
      case 3:
        return G__7562__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7562
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7563 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7564 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__7565 = this;
  var this__7566 = this;
  return cljs.core.pr_str.call(null, this__7566)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7567 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7568 = this;
  return this__7568.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7569 = this;
  return cljs.core._nth.call(null, this__7569.ci, this__7569.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7570 = this;
  if(this__7570.i > 0) {
    return new cljs.core.RSeq(this__7570.ci, this__7570.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7571 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__7572 = this;
  return new cljs.core.RSeq(this__7572.ci, this__7572.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7573 = this;
  return this__7573.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7577__7578 = coll;
      if(G__7577__7578) {
        if(function() {
          var or__3824__auto____7579 = G__7577__7578.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____7579) {
            return or__3824__auto____7579
          }else {
            return G__7577__7578.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__7577__7578.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7577__7578)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7577__7578)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7584__7585 = coll;
      if(G__7584__7585) {
        if(function() {
          var or__3824__auto____7586 = G__7584__7585.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____7586) {
            return or__3824__auto____7586
          }else {
            return G__7584__7585.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7584__7585.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7584__7585)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7584__7585)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__7587 = cljs.core.seq.call(null, coll);
      if(s__7587 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__7587)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__7592__7593 = coll;
      if(G__7592__7593) {
        if(function() {
          var or__3824__auto____7594 = G__7592__7593.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____7594) {
            return or__3824__auto____7594
          }else {
            return G__7592__7593.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7592__7593.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7592__7593)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7592__7593)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__7595 = cljs.core.seq.call(null, coll);
      if(!(s__7595 == null)) {
        return cljs.core._rest.call(null, s__7595)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7599__7600 = coll;
      if(G__7599__7600) {
        if(function() {
          var or__3824__auto____7601 = G__7599__7600.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____7601) {
            return or__3824__auto____7601
          }else {
            return G__7599__7600.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__7599__7600.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__7599__7600)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__7599__7600)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__7603 = cljs.core.next.call(null, s);
    if(!(sn__7603 == null)) {
      var G__7604 = sn__7603;
      s = G__7604;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__7605__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__7606 = conj.call(null, coll, x);
          var G__7607 = cljs.core.first.call(null, xs);
          var G__7608 = cljs.core.next.call(null, xs);
          coll = G__7606;
          x = G__7607;
          xs = G__7608;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__7605 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7605__delegate.call(this, coll, x, xs)
    };
    G__7605.cljs$lang$maxFixedArity = 2;
    G__7605.cljs$lang$applyTo = function(arglist__7609) {
      var coll = cljs.core.first(arglist__7609);
      var x = cljs.core.first(cljs.core.next(arglist__7609));
      var xs = cljs.core.rest(cljs.core.next(arglist__7609));
      return G__7605__delegate(coll, x, xs)
    };
    G__7605.cljs$lang$arity$variadic = G__7605__delegate;
    return G__7605
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__7612 = cljs.core.seq.call(null, coll);
  var acc__7613 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__7612)) {
      return acc__7613 + cljs.core._count.call(null, s__7612)
    }else {
      var G__7614 = cljs.core.next.call(null, s__7612);
      var G__7615 = acc__7613 + 1;
      s__7612 = G__7614;
      acc__7613 = G__7615;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__7622__7623 = coll;
        if(G__7622__7623) {
          if(function() {
            var or__3824__auto____7624 = G__7622__7623.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____7624) {
              return or__3824__auto____7624
            }else {
              return G__7622__7623.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__7622__7623.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7622__7623)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7622__7623)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__7625__7626 = coll;
        if(G__7625__7626) {
          if(function() {
            var or__3824__auto____7627 = G__7625__7626.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____7627) {
              return or__3824__auto____7627
            }else {
              return G__7625__7626.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__7625__7626.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7625__7626)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7625__7626)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__7630__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__7629 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__7631 = ret__7629;
          var G__7632 = cljs.core.first.call(null, kvs);
          var G__7633 = cljs.core.second.call(null, kvs);
          var G__7634 = cljs.core.nnext.call(null, kvs);
          coll = G__7631;
          k = G__7632;
          v = G__7633;
          kvs = G__7634;
          continue
        }else {
          return ret__7629
        }
        break
      }
    };
    var G__7630 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7630__delegate.call(this, coll, k, v, kvs)
    };
    G__7630.cljs$lang$maxFixedArity = 3;
    G__7630.cljs$lang$applyTo = function(arglist__7635) {
      var coll = cljs.core.first(arglist__7635);
      var k = cljs.core.first(cljs.core.next(arglist__7635));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7635)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7635)));
      return G__7630__delegate(coll, k, v, kvs)
    };
    G__7630.cljs$lang$arity$variadic = G__7630__delegate;
    return G__7630
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__7638__delegate = function(coll, k, ks) {
      while(true) {
        var ret__7637 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__7639 = ret__7637;
          var G__7640 = cljs.core.first.call(null, ks);
          var G__7641 = cljs.core.next.call(null, ks);
          coll = G__7639;
          k = G__7640;
          ks = G__7641;
          continue
        }else {
          return ret__7637
        }
        break
      }
    };
    var G__7638 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7638__delegate.call(this, coll, k, ks)
    };
    G__7638.cljs$lang$maxFixedArity = 2;
    G__7638.cljs$lang$applyTo = function(arglist__7642) {
      var coll = cljs.core.first(arglist__7642);
      var k = cljs.core.first(cljs.core.next(arglist__7642));
      var ks = cljs.core.rest(cljs.core.next(arglist__7642));
      return G__7638__delegate(coll, k, ks)
    };
    G__7638.cljs$lang$arity$variadic = G__7638__delegate;
    return G__7638
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__7646__7647 = o;
    if(G__7646__7647) {
      if(function() {
        var or__3824__auto____7648 = G__7646__7647.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____7648) {
          return or__3824__auto____7648
        }else {
          return G__7646__7647.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__7646__7647.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7646__7647)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7646__7647)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__7651__delegate = function(coll, k, ks) {
      while(true) {
        var ret__7650 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__7652 = ret__7650;
          var G__7653 = cljs.core.first.call(null, ks);
          var G__7654 = cljs.core.next.call(null, ks);
          coll = G__7652;
          k = G__7653;
          ks = G__7654;
          continue
        }else {
          return ret__7650
        }
        break
      }
    };
    var G__7651 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7651__delegate.call(this, coll, k, ks)
    };
    G__7651.cljs$lang$maxFixedArity = 2;
    G__7651.cljs$lang$applyTo = function(arglist__7655) {
      var coll = cljs.core.first(arglist__7655);
      var k = cljs.core.first(cljs.core.next(arglist__7655));
      var ks = cljs.core.rest(cljs.core.next(arglist__7655));
      return G__7651__delegate(coll, k, ks)
    };
    G__7651.cljs$lang$arity$variadic = G__7651__delegate;
    return G__7651
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__7657 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__7657;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__7657
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__7659 = cljs.core.string_hash_cache[k];
  if(!(h__7659 == null)) {
    return h__7659
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____7661 = goog.isString(o);
      if(and__3822__auto____7661) {
        return check_cache
      }else {
        return and__3822__auto____7661
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7665__7666 = x;
    if(G__7665__7666) {
      if(function() {
        var or__3824__auto____7667 = G__7665__7666.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____7667) {
          return or__3824__auto____7667
        }else {
          return G__7665__7666.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__7665__7666.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__7665__7666)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__7665__7666)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7671__7672 = x;
    if(G__7671__7672) {
      if(function() {
        var or__3824__auto____7673 = G__7671__7672.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____7673) {
          return or__3824__auto____7673
        }else {
          return G__7671__7672.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__7671__7672.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__7671__7672)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__7671__7672)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__7677__7678 = x;
  if(G__7677__7678) {
    if(function() {
      var or__3824__auto____7679 = G__7677__7678.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____7679) {
        return or__3824__auto____7679
      }else {
        return G__7677__7678.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__7677__7678.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__7677__7678)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__7677__7678)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__7683__7684 = x;
  if(G__7683__7684) {
    if(function() {
      var or__3824__auto____7685 = G__7683__7684.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____7685) {
        return or__3824__auto____7685
      }else {
        return G__7683__7684.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__7683__7684.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__7683__7684)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__7683__7684)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__7689__7690 = x;
  if(G__7689__7690) {
    if(function() {
      var or__3824__auto____7691 = G__7689__7690.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____7691) {
        return or__3824__auto____7691
      }else {
        return G__7689__7690.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__7689__7690.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__7689__7690)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__7689__7690)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__7695__7696 = x;
  if(G__7695__7696) {
    if(function() {
      var or__3824__auto____7697 = G__7695__7696.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____7697) {
        return or__3824__auto____7697
      }else {
        return G__7695__7696.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__7695__7696.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7695__7696)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7695__7696)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__7701__7702 = x;
  if(G__7701__7702) {
    if(function() {
      var or__3824__auto____7703 = G__7701__7702.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____7703) {
        return or__3824__auto____7703
      }else {
        return G__7701__7702.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__7701__7702.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7701__7702)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7701__7702)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7707__7708 = x;
    if(G__7707__7708) {
      if(function() {
        var or__3824__auto____7709 = G__7707__7708.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____7709) {
          return or__3824__auto____7709
        }else {
          return G__7707__7708.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__7707__7708.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__7707__7708)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__7707__7708)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__7713__7714 = x;
  if(G__7713__7714) {
    if(function() {
      var or__3824__auto____7715 = G__7713__7714.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____7715) {
        return or__3824__auto____7715
      }else {
        return G__7713__7714.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__7713__7714.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__7713__7714)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__7713__7714)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__7719__7720 = x;
  if(G__7719__7720) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____7721 = null;
      if(cljs.core.truth_(or__3824__auto____7721)) {
        return or__3824__auto____7721
      }else {
        return G__7719__7720.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__7719__7720.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__7719__7720)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__7719__7720)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__7722__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__7722 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__7722__delegate.call(this, keyvals)
    };
    G__7722.cljs$lang$maxFixedArity = 0;
    G__7722.cljs$lang$applyTo = function(arglist__7723) {
      var keyvals = cljs.core.seq(arglist__7723);
      return G__7722__delegate(keyvals)
    };
    G__7722.cljs$lang$arity$variadic = G__7722__delegate;
    return G__7722
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__7725 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__7725.push(key)
  });
  return keys__7725
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__7729 = i;
  var j__7730 = j;
  var len__7731 = len;
  while(true) {
    if(len__7731 === 0) {
      return to
    }else {
      to[j__7730] = from[i__7729];
      var G__7732 = i__7729 + 1;
      var G__7733 = j__7730 + 1;
      var G__7734 = len__7731 - 1;
      i__7729 = G__7732;
      j__7730 = G__7733;
      len__7731 = G__7734;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__7738 = i + (len - 1);
  var j__7739 = j + (len - 1);
  var len__7740 = len;
  while(true) {
    if(len__7740 === 0) {
      return to
    }else {
      to[j__7739] = from[i__7738];
      var G__7741 = i__7738 - 1;
      var G__7742 = j__7739 - 1;
      var G__7743 = len__7740 - 1;
      i__7738 = G__7741;
      j__7739 = G__7742;
      len__7740 = G__7743;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__7747__7748 = s;
    if(G__7747__7748) {
      if(function() {
        var or__3824__auto____7749 = G__7747__7748.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____7749) {
          return or__3824__auto____7749
        }else {
          return G__7747__7748.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__7747__7748.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7747__7748)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7747__7748)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__7753__7754 = s;
  if(G__7753__7754) {
    if(function() {
      var or__3824__auto____7755 = G__7753__7754.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____7755) {
        return or__3824__auto____7755
      }else {
        return G__7753__7754.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__7753__7754.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__7753__7754)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__7753__7754)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____7758 = goog.isString(x);
  if(and__3822__auto____7758) {
    return!function() {
      var or__3824__auto____7759 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____7759) {
        return or__3824__auto____7759
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____7758
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____7761 = goog.isString(x);
  if(and__3822__auto____7761) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____7761
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____7763 = goog.isString(x);
  if(and__3822__auto____7763) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____7763
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____7768 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____7768) {
    return or__3824__auto____7768
  }else {
    var G__7769__7770 = f;
    if(G__7769__7770) {
      if(function() {
        var or__3824__auto____7771 = G__7769__7770.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____7771) {
          return or__3824__auto____7771
        }else {
          return G__7769__7770.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__7769__7770.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__7769__7770)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__7769__7770)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____7773 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____7773) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____7773
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____7776 = coll;
    if(cljs.core.truth_(and__3822__auto____7776)) {
      var and__3822__auto____7777 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____7777) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____7777
      }
    }else {
      return and__3822__auto____7776
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__7786__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__7782 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__7783 = more;
        while(true) {
          var x__7784 = cljs.core.first.call(null, xs__7783);
          var etc__7785 = cljs.core.next.call(null, xs__7783);
          if(cljs.core.truth_(xs__7783)) {
            if(cljs.core.contains_QMARK_.call(null, s__7782, x__7784)) {
              return false
            }else {
              var G__7787 = cljs.core.conj.call(null, s__7782, x__7784);
              var G__7788 = etc__7785;
              s__7782 = G__7787;
              xs__7783 = G__7788;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__7786 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7786__delegate.call(this, x, y, more)
    };
    G__7786.cljs$lang$maxFixedArity = 2;
    G__7786.cljs$lang$applyTo = function(arglist__7789) {
      var x = cljs.core.first(arglist__7789);
      var y = cljs.core.first(cljs.core.next(arglist__7789));
      var more = cljs.core.rest(cljs.core.next(arglist__7789));
      return G__7786__delegate(x, y, more)
    };
    G__7786.cljs$lang$arity$variadic = G__7786__delegate;
    return G__7786
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__7793__7794 = x;
            if(G__7793__7794) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____7795 = null;
                if(cljs.core.truth_(or__3824__auto____7795)) {
                  return or__3824__auto____7795
                }else {
                  return G__7793__7794.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__7793__7794.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__7793__7794)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__7793__7794)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__7800 = cljs.core.count.call(null, xs);
    var yl__7801 = cljs.core.count.call(null, ys);
    if(xl__7800 < yl__7801) {
      return-1
    }else {
      if(xl__7800 > yl__7801) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__7800, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__7802 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____7803 = d__7802 === 0;
        if(and__3822__auto____7803) {
          return n + 1 < len
        }else {
          return and__3822__auto____7803
        }
      }()) {
        var G__7804 = xs;
        var G__7805 = ys;
        var G__7806 = len;
        var G__7807 = n + 1;
        xs = G__7804;
        ys = G__7805;
        len = G__7806;
        n = G__7807;
        continue
      }else {
        return d__7802
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__7809 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__7809)) {
        return r__7809
      }else {
        if(cljs.core.truth_(r__7809)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__7811 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__7811, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__7811)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____7817 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____7817) {
      var s__7818 = temp__3971__auto____7817;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__7818), cljs.core.next.call(null, s__7818))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__7819 = val;
    var coll__7820 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__7820) {
        var nval__7821 = f.call(null, val__7819, cljs.core.first.call(null, coll__7820));
        if(cljs.core.reduced_QMARK_.call(null, nval__7821)) {
          return cljs.core.deref.call(null, nval__7821)
        }else {
          var G__7822 = nval__7821;
          var G__7823 = cljs.core.next.call(null, coll__7820);
          val__7819 = G__7822;
          coll__7820 = G__7823;
          continue
        }
      }else {
        return val__7819
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__7825 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__7825);
  return cljs.core.vec.call(null, a__7825)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__7832__7833 = coll;
      if(G__7832__7833) {
        if(function() {
          var or__3824__auto____7834 = G__7832__7833.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____7834) {
            return or__3824__auto____7834
          }else {
            return G__7832__7833.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__7832__7833.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7832__7833)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7832__7833)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__7835__7836 = coll;
      if(G__7835__7836) {
        if(function() {
          var or__3824__auto____7837 = G__7835__7836.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____7837) {
            return or__3824__auto____7837
          }else {
            return G__7835__7836.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__7835__7836.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7835__7836)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7835__7836)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__7838 = this;
  return this__7838.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__7839__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__7839 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7839__delegate.call(this, x, y, more)
    };
    G__7839.cljs$lang$maxFixedArity = 2;
    G__7839.cljs$lang$applyTo = function(arglist__7840) {
      var x = cljs.core.first(arglist__7840);
      var y = cljs.core.first(cljs.core.next(arglist__7840));
      var more = cljs.core.rest(cljs.core.next(arglist__7840));
      return G__7839__delegate(x, y, more)
    };
    G__7839.cljs$lang$arity$variadic = G__7839__delegate;
    return G__7839
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__7841__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__7841 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7841__delegate.call(this, x, y, more)
    };
    G__7841.cljs$lang$maxFixedArity = 2;
    G__7841.cljs$lang$applyTo = function(arglist__7842) {
      var x = cljs.core.first(arglist__7842);
      var y = cljs.core.first(cljs.core.next(arglist__7842));
      var more = cljs.core.rest(cljs.core.next(arglist__7842));
      return G__7841__delegate(x, y, more)
    };
    G__7841.cljs$lang$arity$variadic = G__7841__delegate;
    return G__7841
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__7843__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__7843 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7843__delegate.call(this, x, y, more)
    };
    G__7843.cljs$lang$maxFixedArity = 2;
    G__7843.cljs$lang$applyTo = function(arglist__7844) {
      var x = cljs.core.first(arglist__7844);
      var y = cljs.core.first(cljs.core.next(arglist__7844));
      var more = cljs.core.rest(cljs.core.next(arglist__7844));
      return G__7843__delegate(x, y, more)
    };
    G__7843.cljs$lang$arity$variadic = G__7843__delegate;
    return G__7843
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__7845__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__7845 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7845__delegate.call(this, x, y, more)
    };
    G__7845.cljs$lang$maxFixedArity = 2;
    G__7845.cljs$lang$applyTo = function(arglist__7846) {
      var x = cljs.core.first(arglist__7846);
      var y = cljs.core.first(cljs.core.next(arglist__7846));
      var more = cljs.core.rest(cljs.core.next(arglist__7846));
      return G__7845__delegate(x, y, more)
    };
    G__7845.cljs$lang$arity$variadic = G__7845__delegate;
    return G__7845
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__7847__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__7848 = y;
            var G__7849 = cljs.core.first.call(null, more);
            var G__7850 = cljs.core.next.call(null, more);
            x = G__7848;
            y = G__7849;
            more = G__7850;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7847 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7847__delegate.call(this, x, y, more)
    };
    G__7847.cljs$lang$maxFixedArity = 2;
    G__7847.cljs$lang$applyTo = function(arglist__7851) {
      var x = cljs.core.first(arglist__7851);
      var y = cljs.core.first(cljs.core.next(arglist__7851));
      var more = cljs.core.rest(cljs.core.next(arglist__7851));
      return G__7847__delegate(x, y, more)
    };
    G__7847.cljs$lang$arity$variadic = G__7847__delegate;
    return G__7847
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__7852__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__7853 = y;
            var G__7854 = cljs.core.first.call(null, more);
            var G__7855 = cljs.core.next.call(null, more);
            x = G__7853;
            y = G__7854;
            more = G__7855;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7852 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7852__delegate.call(this, x, y, more)
    };
    G__7852.cljs$lang$maxFixedArity = 2;
    G__7852.cljs$lang$applyTo = function(arglist__7856) {
      var x = cljs.core.first(arglist__7856);
      var y = cljs.core.first(cljs.core.next(arglist__7856));
      var more = cljs.core.rest(cljs.core.next(arglist__7856));
      return G__7852__delegate(x, y, more)
    };
    G__7852.cljs$lang$arity$variadic = G__7852__delegate;
    return G__7852
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__7857__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__7858 = y;
            var G__7859 = cljs.core.first.call(null, more);
            var G__7860 = cljs.core.next.call(null, more);
            x = G__7858;
            y = G__7859;
            more = G__7860;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7857 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7857__delegate.call(this, x, y, more)
    };
    G__7857.cljs$lang$maxFixedArity = 2;
    G__7857.cljs$lang$applyTo = function(arglist__7861) {
      var x = cljs.core.first(arglist__7861);
      var y = cljs.core.first(cljs.core.next(arglist__7861));
      var more = cljs.core.rest(cljs.core.next(arglist__7861));
      return G__7857__delegate(x, y, more)
    };
    G__7857.cljs$lang$arity$variadic = G__7857__delegate;
    return G__7857
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__7862__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__7863 = y;
            var G__7864 = cljs.core.first.call(null, more);
            var G__7865 = cljs.core.next.call(null, more);
            x = G__7863;
            y = G__7864;
            more = G__7865;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7862 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7862__delegate.call(this, x, y, more)
    };
    G__7862.cljs$lang$maxFixedArity = 2;
    G__7862.cljs$lang$applyTo = function(arglist__7866) {
      var x = cljs.core.first(arglist__7866);
      var y = cljs.core.first(cljs.core.next(arglist__7866));
      var more = cljs.core.rest(cljs.core.next(arglist__7866));
      return G__7862__delegate(x, y, more)
    };
    G__7862.cljs$lang$arity$variadic = G__7862__delegate;
    return G__7862
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__7867__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__7867 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7867__delegate.call(this, x, y, more)
    };
    G__7867.cljs$lang$maxFixedArity = 2;
    G__7867.cljs$lang$applyTo = function(arglist__7868) {
      var x = cljs.core.first(arglist__7868);
      var y = cljs.core.first(cljs.core.next(arglist__7868));
      var more = cljs.core.rest(cljs.core.next(arglist__7868));
      return G__7867__delegate(x, y, more)
    };
    G__7867.cljs$lang$arity$variadic = G__7867__delegate;
    return G__7867
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__7869__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__7869 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7869__delegate.call(this, x, y, more)
    };
    G__7869.cljs$lang$maxFixedArity = 2;
    G__7869.cljs$lang$applyTo = function(arglist__7870) {
      var x = cljs.core.first(arglist__7870);
      var y = cljs.core.first(cljs.core.next(arglist__7870));
      var more = cljs.core.rest(cljs.core.next(arglist__7870));
      return G__7869__delegate(x, y, more)
    };
    G__7869.cljs$lang$arity$variadic = G__7869__delegate;
    return G__7869
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__7872 = n % d;
  return cljs.core.fix.call(null, (n - rem__7872) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__7874 = cljs.core.quot.call(null, n, d);
  return n - d * q__7874
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__7877 = v - (v >> 1 & 1431655765);
  var v__7878 = (v__7877 & 858993459) + (v__7877 >> 2 & 858993459);
  return(v__7878 + (v__7878 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__7879__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7880 = y;
            var G__7881 = cljs.core.first.call(null, more);
            var G__7882 = cljs.core.next.call(null, more);
            x = G__7880;
            y = G__7881;
            more = G__7882;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7879 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7879__delegate.call(this, x, y, more)
    };
    G__7879.cljs$lang$maxFixedArity = 2;
    G__7879.cljs$lang$applyTo = function(arglist__7883) {
      var x = cljs.core.first(arglist__7883);
      var y = cljs.core.first(cljs.core.next(arglist__7883));
      var more = cljs.core.rest(cljs.core.next(arglist__7883));
      return G__7879__delegate(x, y, more)
    };
    G__7879.cljs$lang$arity$variadic = G__7879__delegate;
    return G__7879
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__7887 = n;
  var xs__7888 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7889 = xs__7888;
      if(and__3822__auto____7889) {
        return n__7887 > 0
      }else {
        return and__3822__auto____7889
      }
    }())) {
      var G__7890 = n__7887 - 1;
      var G__7891 = cljs.core.next.call(null, xs__7888);
      n__7887 = G__7890;
      xs__7888 = G__7891;
      continue
    }else {
      return xs__7888
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__7892__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7893 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__7894 = cljs.core.next.call(null, more);
            sb = G__7893;
            more = G__7894;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__7892 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7892__delegate.call(this, x, ys)
    };
    G__7892.cljs$lang$maxFixedArity = 1;
    G__7892.cljs$lang$applyTo = function(arglist__7895) {
      var x = cljs.core.first(arglist__7895);
      var ys = cljs.core.rest(arglist__7895);
      return G__7892__delegate(x, ys)
    };
    G__7892.cljs$lang$arity$variadic = G__7892__delegate;
    return G__7892
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__7896__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7897 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__7898 = cljs.core.next.call(null, more);
            sb = G__7897;
            more = G__7898;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__7896 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7896__delegate.call(this, x, ys)
    };
    G__7896.cljs$lang$maxFixedArity = 1;
    G__7896.cljs$lang$applyTo = function(arglist__7899) {
      var x = cljs.core.first(arglist__7899);
      var ys = cljs.core.rest(arglist__7899);
      return G__7896__delegate(x, ys)
    };
    G__7896.cljs$lang$arity$variadic = G__7896__delegate;
    return G__7896
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__7900) {
    var fmt = cljs.core.first(arglist__7900);
    var args = cljs.core.rest(arglist__7900);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__7903 = cljs.core.seq.call(null, x);
    var ys__7904 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__7903 == null) {
        return ys__7904 == null
      }else {
        if(ys__7904 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__7903), cljs.core.first.call(null, ys__7904))) {
            var G__7905 = cljs.core.next.call(null, xs__7903);
            var G__7906 = cljs.core.next.call(null, ys__7904);
            xs__7903 = G__7905;
            ys__7904 = G__7906;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__7907_SHARP_, p2__7908_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__7907_SHARP_, cljs.core.hash.call(null, p2__7908_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__7912 = 0;
  var s__7913 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__7913) {
      var e__7914 = cljs.core.first.call(null, s__7913);
      var G__7915 = (h__7912 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__7914)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__7914)))) % 4503599627370496;
      var G__7916 = cljs.core.next.call(null, s__7913);
      h__7912 = G__7915;
      s__7913 = G__7916;
      continue
    }else {
      return h__7912
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__7920 = 0;
  var s__7921 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__7921) {
      var e__7922 = cljs.core.first.call(null, s__7921);
      var G__7923 = (h__7920 + cljs.core.hash.call(null, e__7922)) % 4503599627370496;
      var G__7924 = cljs.core.next.call(null, s__7921);
      h__7920 = G__7923;
      s__7921 = G__7924;
      continue
    }else {
      return h__7920
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__7945__7946 = cljs.core.seq.call(null, fn_map);
  if(G__7945__7946) {
    var G__7948__7950 = cljs.core.first.call(null, G__7945__7946);
    var vec__7949__7951 = G__7948__7950;
    var key_name__7952 = cljs.core.nth.call(null, vec__7949__7951, 0, null);
    var f__7953 = cljs.core.nth.call(null, vec__7949__7951, 1, null);
    var G__7945__7954 = G__7945__7946;
    var G__7948__7955 = G__7948__7950;
    var G__7945__7956 = G__7945__7954;
    while(true) {
      var vec__7957__7958 = G__7948__7955;
      var key_name__7959 = cljs.core.nth.call(null, vec__7957__7958, 0, null);
      var f__7960 = cljs.core.nth.call(null, vec__7957__7958, 1, null);
      var G__7945__7961 = G__7945__7956;
      var str_name__7962 = cljs.core.name.call(null, key_name__7959);
      obj[str_name__7962] = f__7960;
      var temp__3974__auto____7963 = cljs.core.next.call(null, G__7945__7961);
      if(temp__3974__auto____7963) {
        var G__7945__7964 = temp__3974__auto____7963;
        var G__7965 = cljs.core.first.call(null, G__7945__7964);
        var G__7966 = G__7945__7964;
        G__7948__7955 = G__7965;
        G__7945__7956 = G__7966;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7967 = this;
  var h__2192__auto____7968 = this__7967.__hash;
  if(!(h__2192__auto____7968 == null)) {
    return h__2192__auto____7968
  }else {
    var h__2192__auto____7969 = cljs.core.hash_coll.call(null, coll);
    this__7967.__hash = h__2192__auto____7969;
    return h__2192__auto____7969
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7970 = this;
  if(this__7970.count === 1) {
    return null
  }else {
    return this__7970.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7971 = this;
  return new cljs.core.List(this__7971.meta, o, coll, this__7971.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__7972 = this;
  var this__7973 = this;
  return cljs.core.pr_str.call(null, this__7973)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7974 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7975 = this;
  return this__7975.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__7976 = this;
  return this__7976.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__7977 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7978 = this;
  return this__7978.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7979 = this;
  if(this__7979.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__7979.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7980 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7981 = this;
  return new cljs.core.List(meta, this__7981.first, this__7981.rest, this__7981.count, this__7981.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7982 = this;
  return this__7982.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7983 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7984 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7985 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7986 = this;
  return new cljs.core.List(this__7986.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__7987 = this;
  var this__7988 = this;
  return cljs.core.pr_str.call(null, this__7988)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7989 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7990 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__7991 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__7992 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7993 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7994 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7995 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7996 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7997 = this;
  return this__7997.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7998 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8002__8003 = coll;
  if(G__8002__8003) {
    if(function() {
      var or__3824__auto____8004 = G__8002__8003.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____8004) {
        return or__3824__auto____8004
      }else {
        return G__8002__8003.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8002__8003.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8002__8003)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8002__8003)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8005__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8005 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8005__delegate.call(this, x, y, z, items)
    };
    G__8005.cljs$lang$maxFixedArity = 3;
    G__8005.cljs$lang$applyTo = function(arglist__8006) {
      var x = cljs.core.first(arglist__8006);
      var y = cljs.core.first(cljs.core.next(arglist__8006));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8006)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8006)));
      return G__8005__delegate(x, y, z, items)
    };
    G__8005.cljs$lang$arity$variadic = G__8005__delegate;
    return G__8005
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8007 = this;
  var h__2192__auto____8008 = this__8007.__hash;
  if(!(h__2192__auto____8008 == null)) {
    return h__2192__auto____8008
  }else {
    var h__2192__auto____8009 = cljs.core.hash_coll.call(null, coll);
    this__8007.__hash = h__2192__auto____8009;
    return h__2192__auto____8009
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8010 = this;
  if(this__8010.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8010.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8011 = this;
  return new cljs.core.Cons(null, o, coll, this__8011.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8012 = this;
  var this__8013 = this;
  return cljs.core.pr_str.call(null, this__8013)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8014 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8015 = this;
  return this__8015.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8016 = this;
  if(this__8016.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8016.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8017 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8018 = this;
  return new cljs.core.Cons(meta, this__8018.first, this__8018.rest, this__8018.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8019 = this;
  return this__8019.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8020 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8020.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____8025 = coll == null;
    if(or__3824__auto____8025) {
      return or__3824__auto____8025
    }else {
      var G__8026__8027 = coll;
      if(G__8026__8027) {
        if(function() {
          var or__3824__auto____8028 = G__8026__8027.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8028) {
            return or__3824__auto____8028
          }else {
            return G__8026__8027.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8026__8027.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8026__8027)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8026__8027)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8032__8033 = x;
  if(G__8032__8033) {
    if(function() {
      var or__3824__auto____8034 = G__8032__8033.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____8034) {
        return or__3824__auto____8034
      }else {
        return G__8032__8033.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8032__8033.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8032__8033)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8032__8033)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8035 = null;
  var G__8035__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8035__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8035 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8035__2.call(this, string, f);
      case 3:
        return G__8035__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8035
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8036 = null;
  var G__8036__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8036__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8036 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8036__2.call(this, string, k);
      case 3:
        return G__8036__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8036
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8037 = null;
  var G__8037__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8037__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8037 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8037__2.call(this, string, n);
      case 3:
        return G__8037__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8037
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8049 = null;
  var G__8049__2 = function(this_sym8040, coll) {
    var this__8042 = this;
    var this_sym8040__8043 = this;
    var ___8044 = this_sym8040__8043;
    if(coll == null) {
      return null
    }else {
      var strobj__8045 = coll.strobj;
      if(strobj__8045 == null) {
        return cljs.core._lookup.call(null, coll, this__8042.k, null)
      }else {
        return strobj__8045[this__8042.k]
      }
    }
  };
  var G__8049__3 = function(this_sym8041, coll, not_found) {
    var this__8042 = this;
    var this_sym8041__8046 = this;
    var ___8047 = this_sym8041__8046;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8042.k, not_found)
    }
  };
  G__8049 = function(this_sym8041, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8049__2.call(this, this_sym8041, coll);
      case 3:
        return G__8049__3.call(this, this_sym8041, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8049
}();
cljs.core.Keyword.prototype.apply = function(this_sym8038, args8039) {
  var this__8048 = this;
  return this_sym8038.call.apply(this_sym8038, [this_sym8038].concat(args8039.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8058 = null;
  var G__8058__2 = function(this_sym8052, coll) {
    var this_sym8052__8054 = this;
    var this__8055 = this_sym8052__8054;
    return cljs.core._lookup.call(null, coll, this__8055.toString(), null)
  };
  var G__8058__3 = function(this_sym8053, coll, not_found) {
    var this_sym8053__8056 = this;
    var this__8057 = this_sym8053__8056;
    return cljs.core._lookup.call(null, coll, this__8057.toString(), not_found)
  };
  G__8058 = function(this_sym8053, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8058__2.call(this, this_sym8053, coll);
      case 3:
        return G__8058__3.call(this, this_sym8053, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8058
}();
String.prototype.apply = function(this_sym8050, args8051) {
  return this_sym8050.call.apply(this_sym8050, [this_sym8050].concat(args8051.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8060 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8060
  }else {
    lazy_seq.x = x__8060.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8061 = this;
  var h__2192__auto____8062 = this__8061.__hash;
  if(!(h__2192__auto____8062 == null)) {
    return h__2192__auto____8062
  }else {
    var h__2192__auto____8063 = cljs.core.hash_coll.call(null, coll);
    this__8061.__hash = h__2192__auto____8063;
    return h__2192__auto____8063
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8064 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8065 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8066 = this;
  var this__8067 = this;
  return cljs.core.pr_str.call(null, this__8067)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8068 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8069 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8070 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8071 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8072 = this;
  return new cljs.core.LazySeq(meta, this__8072.realized, this__8072.x, this__8072.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8073 = this;
  return this__8073.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8074 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8074.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8075 = this;
  return this__8075.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8076 = this;
  var ___8077 = this;
  this__8076.buf[this__8076.end] = o;
  return this__8076.end = this__8076.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8078 = this;
  var ___8079 = this;
  var ret__8080 = new cljs.core.ArrayChunk(this__8078.buf, 0, this__8078.end);
  this__8078.buf = null;
  return ret__8080
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8081 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8081.arr[this__8081.off], this__8081.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8082 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8082.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8083 = this;
  if(this__8083.off === this__8083.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8083.arr, this__8083.off + 1, this__8083.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8084 = this;
  return this__8084.arr[this__8084.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8085 = this;
  if(function() {
    var and__3822__auto____8086 = i >= 0;
    if(and__3822__auto____8086) {
      return i < this__8085.end - this__8085.off
    }else {
      return and__3822__auto____8086
    }
  }()) {
    return this__8085.arr[this__8085.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8087 = this;
  return this__8087.end - this__8087.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8088 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8089 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8090 = this;
  return cljs.core._nth.call(null, this__8090.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8091 = this;
  if(cljs.core._count.call(null, this__8091.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8091.chunk), this__8091.more, this__8091.meta)
  }else {
    if(this__8091.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8091.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8092 = this;
  if(this__8092.more == null) {
    return null
  }else {
    return this__8092.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8093 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8094 = this;
  return new cljs.core.ChunkedCons(this__8094.chunk, this__8094.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8095 = this;
  return this__8095.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8096 = this;
  return this__8096.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8097 = this;
  if(this__8097.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8097.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8101__8102 = s;
    if(G__8101__8102) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____8103 = null;
        if(cljs.core.truth_(or__3824__auto____8103)) {
          return or__3824__auto____8103
        }else {
          return G__8101__8102.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8101__8102.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8101__8102)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8101__8102)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8106 = [];
  var s__8107 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8107)) {
      ary__8106.push(cljs.core.first.call(null, s__8107));
      var G__8108 = cljs.core.next.call(null, s__8107);
      s__8107 = G__8108;
      continue
    }else {
      return ary__8106
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8112 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8113 = 0;
  var xs__8114 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8114) {
      ret__8112[i__8113] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8114));
      var G__8115 = i__8113 + 1;
      var G__8116 = cljs.core.next.call(null, xs__8114);
      i__8113 = G__8115;
      xs__8114 = G__8116;
      continue
    }else {
    }
    break
  }
  return ret__8112
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8124 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8125 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8126 = 0;
      var s__8127 = s__8125;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8128 = s__8127;
          if(and__3822__auto____8128) {
            return i__8126 < size
          }else {
            return and__3822__auto____8128
          }
        }())) {
          a__8124[i__8126] = cljs.core.first.call(null, s__8127);
          var G__8131 = i__8126 + 1;
          var G__8132 = cljs.core.next.call(null, s__8127);
          i__8126 = G__8131;
          s__8127 = G__8132;
          continue
        }else {
          return a__8124
        }
        break
      }
    }else {
      var n__2527__auto____8129 = size;
      var i__8130 = 0;
      while(true) {
        if(i__8130 < n__2527__auto____8129) {
          a__8124[i__8130] = init_val_or_seq;
          var G__8133 = i__8130 + 1;
          i__8130 = G__8133;
          continue
        }else {
        }
        break
      }
      return a__8124
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8141 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8142 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8143 = 0;
      var s__8144 = s__8142;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8145 = s__8144;
          if(and__3822__auto____8145) {
            return i__8143 < size
          }else {
            return and__3822__auto____8145
          }
        }())) {
          a__8141[i__8143] = cljs.core.first.call(null, s__8144);
          var G__8148 = i__8143 + 1;
          var G__8149 = cljs.core.next.call(null, s__8144);
          i__8143 = G__8148;
          s__8144 = G__8149;
          continue
        }else {
          return a__8141
        }
        break
      }
    }else {
      var n__2527__auto____8146 = size;
      var i__8147 = 0;
      while(true) {
        if(i__8147 < n__2527__auto____8146) {
          a__8141[i__8147] = init_val_or_seq;
          var G__8150 = i__8147 + 1;
          i__8147 = G__8150;
          continue
        }else {
        }
        break
      }
      return a__8141
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8158 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8159 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8160 = 0;
      var s__8161 = s__8159;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8162 = s__8161;
          if(and__3822__auto____8162) {
            return i__8160 < size
          }else {
            return and__3822__auto____8162
          }
        }())) {
          a__8158[i__8160] = cljs.core.first.call(null, s__8161);
          var G__8165 = i__8160 + 1;
          var G__8166 = cljs.core.next.call(null, s__8161);
          i__8160 = G__8165;
          s__8161 = G__8166;
          continue
        }else {
          return a__8158
        }
        break
      }
    }else {
      var n__2527__auto____8163 = size;
      var i__8164 = 0;
      while(true) {
        if(i__8164 < n__2527__auto____8163) {
          a__8158[i__8164] = init_val_or_seq;
          var G__8167 = i__8164 + 1;
          i__8164 = G__8167;
          continue
        }else {
        }
        break
      }
      return a__8158
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8172 = s;
    var i__8173 = n;
    var sum__8174 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____8175 = i__8173 > 0;
        if(and__3822__auto____8175) {
          return cljs.core.seq.call(null, s__8172)
        }else {
          return and__3822__auto____8175
        }
      }())) {
        var G__8176 = cljs.core.next.call(null, s__8172);
        var G__8177 = i__8173 - 1;
        var G__8178 = sum__8174 + 1;
        s__8172 = G__8176;
        i__8173 = G__8177;
        sum__8174 = G__8178;
        continue
      }else {
        return sum__8174
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8183 = cljs.core.seq.call(null, x);
      if(s__8183) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8183)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8183), concat.call(null, cljs.core.chunk_rest.call(null, s__8183), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8183), concat.call(null, cljs.core.rest.call(null, s__8183), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8187__delegate = function(x, y, zs) {
      var cat__8186 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8185 = cljs.core.seq.call(null, xys);
          if(xys__8185) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8185)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8185), cat.call(null, cljs.core.chunk_rest.call(null, xys__8185), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8185), cat.call(null, cljs.core.rest.call(null, xys__8185), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8186.call(null, concat.call(null, x, y), zs)
    };
    var G__8187 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8187__delegate.call(this, x, y, zs)
    };
    G__8187.cljs$lang$maxFixedArity = 2;
    G__8187.cljs$lang$applyTo = function(arglist__8188) {
      var x = cljs.core.first(arglist__8188);
      var y = cljs.core.first(cljs.core.next(arglist__8188));
      var zs = cljs.core.rest(cljs.core.next(arglist__8188));
      return G__8187__delegate(x, y, zs)
    };
    G__8187.cljs$lang$arity$variadic = G__8187__delegate;
    return G__8187
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8189__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8189 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8189__delegate.call(this, a, b, c, d, more)
    };
    G__8189.cljs$lang$maxFixedArity = 4;
    G__8189.cljs$lang$applyTo = function(arglist__8190) {
      var a = cljs.core.first(arglist__8190);
      var b = cljs.core.first(cljs.core.next(arglist__8190));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8190)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8190))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8190))));
      return G__8189__delegate(a, b, c, d, more)
    };
    G__8189.cljs$lang$arity$variadic = G__8189__delegate;
    return G__8189
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8232 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8233 = cljs.core._first.call(null, args__8232);
    var args__8234 = cljs.core._rest.call(null, args__8232);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8233)
      }else {
        return f.call(null, a__8233)
      }
    }else {
      var b__8235 = cljs.core._first.call(null, args__8234);
      var args__8236 = cljs.core._rest.call(null, args__8234);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8233, b__8235)
        }else {
          return f.call(null, a__8233, b__8235)
        }
      }else {
        var c__8237 = cljs.core._first.call(null, args__8236);
        var args__8238 = cljs.core._rest.call(null, args__8236);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8233, b__8235, c__8237)
          }else {
            return f.call(null, a__8233, b__8235, c__8237)
          }
        }else {
          var d__8239 = cljs.core._first.call(null, args__8238);
          var args__8240 = cljs.core._rest.call(null, args__8238);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8233, b__8235, c__8237, d__8239)
            }else {
              return f.call(null, a__8233, b__8235, c__8237, d__8239)
            }
          }else {
            var e__8241 = cljs.core._first.call(null, args__8240);
            var args__8242 = cljs.core._rest.call(null, args__8240);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8233, b__8235, c__8237, d__8239, e__8241)
              }else {
                return f.call(null, a__8233, b__8235, c__8237, d__8239, e__8241)
              }
            }else {
              var f__8243 = cljs.core._first.call(null, args__8242);
              var args__8244 = cljs.core._rest.call(null, args__8242);
              if(argc === 6) {
                if(f__8243.cljs$lang$arity$6) {
                  return f__8243.cljs$lang$arity$6(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243)
                }else {
                  return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243)
                }
              }else {
                var g__8245 = cljs.core._first.call(null, args__8244);
                var args__8246 = cljs.core._rest.call(null, args__8244);
                if(argc === 7) {
                  if(f__8243.cljs$lang$arity$7) {
                    return f__8243.cljs$lang$arity$7(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245)
                  }else {
                    return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245)
                  }
                }else {
                  var h__8247 = cljs.core._first.call(null, args__8246);
                  var args__8248 = cljs.core._rest.call(null, args__8246);
                  if(argc === 8) {
                    if(f__8243.cljs$lang$arity$8) {
                      return f__8243.cljs$lang$arity$8(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247)
                    }else {
                      return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247)
                    }
                  }else {
                    var i__8249 = cljs.core._first.call(null, args__8248);
                    var args__8250 = cljs.core._rest.call(null, args__8248);
                    if(argc === 9) {
                      if(f__8243.cljs$lang$arity$9) {
                        return f__8243.cljs$lang$arity$9(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249)
                      }else {
                        return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249)
                      }
                    }else {
                      var j__8251 = cljs.core._first.call(null, args__8250);
                      var args__8252 = cljs.core._rest.call(null, args__8250);
                      if(argc === 10) {
                        if(f__8243.cljs$lang$arity$10) {
                          return f__8243.cljs$lang$arity$10(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251)
                        }else {
                          return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251)
                        }
                      }else {
                        var k__8253 = cljs.core._first.call(null, args__8252);
                        var args__8254 = cljs.core._rest.call(null, args__8252);
                        if(argc === 11) {
                          if(f__8243.cljs$lang$arity$11) {
                            return f__8243.cljs$lang$arity$11(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253)
                          }else {
                            return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253)
                          }
                        }else {
                          var l__8255 = cljs.core._first.call(null, args__8254);
                          var args__8256 = cljs.core._rest.call(null, args__8254);
                          if(argc === 12) {
                            if(f__8243.cljs$lang$arity$12) {
                              return f__8243.cljs$lang$arity$12(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255)
                            }else {
                              return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255)
                            }
                          }else {
                            var m__8257 = cljs.core._first.call(null, args__8256);
                            var args__8258 = cljs.core._rest.call(null, args__8256);
                            if(argc === 13) {
                              if(f__8243.cljs$lang$arity$13) {
                                return f__8243.cljs$lang$arity$13(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257)
                              }else {
                                return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257)
                              }
                            }else {
                              var n__8259 = cljs.core._first.call(null, args__8258);
                              var args__8260 = cljs.core._rest.call(null, args__8258);
                              if(argc === 14) {
                                if(f__8243.cljs$lang$arity$14) {
                                  return f__8243.cljs$lang$arity$14(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259)
                                }else {
                                  return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259)
                                }
                              }else {
                                var o__8261 = cljs.core._first.call(null, args__8260);
                                var args__8262 = cljs.core._rest.call(null, args__8260);
                                if(argc === 15) {
                                  if(f__8243.cljs$lang$arity$15) {
                                    return f__8243.cljs$lang$arity$15(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261)
                                  }else {
                                    return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261)
                                  }
                                }else {
                                  var p__8263 = cljs.core._first.call(null, args__8262);
                                  var args__8264 = cljs.core._rest.call(null, args__8262);
                                  if(argc === 16) {
                                    if(f__8243.cljs$lang$arity$16) {
                                      return f__8243.cljs$lang$arity$16(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261, p__8263)
                                    }else {
                                      return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261, p__8263)
                                    }
                                  }else {
                                    var q__8265 = cljs.core._first.call(null, args__8264);
                                    var args__8266 = cljs.core._rest.call(null, args__8264);
                                    if(argc === 17) {
                                      if(f__8243.cljs$lang$arity$17) {
                                        return f__8243.cljs$lang$arity$17(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261, p__8263, q__8265)
                                      }else {
                                        return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261, p__8263, q__8265)
                                      }
                                    }else {
                                      var r__8267 = cljs.core._first.call(null, args__8266);
                                      var args__8268 = cljs.core._rest.call(null, args__8266);
                                      if(argc === 18) {
                                        if(f__8243.cljs$lang$arity$18) {
                                          return f__8243.cljs$lang$arity$18(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261, p__8263, q__8265, r__8267)
                                        }else {
                                          return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261, p__8263, q__8265, r__8267)
                                        }
                                      }else {
                                        var s__8269 = cljs.core._first.call(null, args__8268);
                                        var args__8270 = cljs.core._rest.call(null, args__8268);
                                        if(argc === 19) {
                                          if(f__8243.cljs$lang$arity$19) {
                                            return f__8243.cljs$lang$arity$19(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261, p__8263, q__8265, r__8267, s__8269)
                                          }else {
                                            return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261, p__8263, q__8265, r__8267, s__8269)
                                          }
                                        }else {
                                          var t__8271 = cljs.core._first.call(null, args__8270);
                                          var args__8272 = cljs.core._rest.call(null, args__8270);
                                          if(argc === 20) {
                                            if(f__8243.cljs$lang$arity$20) {
                                              return f__8243.cljs$lang$arity$20(a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261, p__8263, q__8265, r__8267, s__8269, t__8271)
                                            }else {
                                              return f__8243.call(null, a__8233, b__8235, c__8237, d__8239, e__8241, f__8243, g__8245, h__8247, i__8249, j__8251, k__8253, l__8255, m__8257, n__8259, o__8261, p__8263, q__8265, r__8267, s__8269, t__8271)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8287 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8288 = cljs.core.bounded_count.call(null, args, fixed_arity__8287 + 1);
      if(bc__8288 <= fixed_arity__8287) {
        return cljs.core.apply_to.call(null, f, bc__8288, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8289 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8290 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8291 = cljs.core.bounded_count.call(null, arglist__8289, fixed_arity__8290 + 1);
      if(bc__8291 <= fixed_arity__8290) {
        return cljs.core.apply_to.call(null, f, bc__8291, arglist__8289)
      }else {
        return f.cljs$lang$applyTo(arglist__8289)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8289))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8292 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8293 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8294 = cljs.core.bounded_count.call(null, arglist__8292, fixed_arity__8293 + 1);
      if(bc__8294 <= fixed_arity__8293) {
        return cljs.core.apply_to.call(null, f, bc__8294, arglist__8292)
      }else {
        return f.cljs$lang$applyTo(arglist__8292)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8292))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8295 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8296 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8297 = cljs.core.bounded_count.call(null, arglist__8295, fixed_arity__8296 + 1);
      if(bc__8297 <= fixed_arity__8296) {
        return cljs.core.apply_to.call(null, f, bc__8297, arglist__8295)
      }else {
        return f.cljs$lang$applyTo(arglist__8295)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8295))
    }
  };
  var apply__6 = function() {
    var G__8301__delegate = function(f, a, b, c, d, args) {
      var arglist__8298 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8299 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__8300 = cljs.core.bounded_count.call(null, arglist__8298, fixed_arity__8299 + 1);
        if(bc__8300 <= fixed_arity__8299) {
          return cljs.core.apply_to.call(null, f, bc__8300, arglist__8298)
        }else {
          return f.cljs$lang$applyTo(arglist__8298)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8298))
      }
    };
    var G__8301 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8301__delegate.call(this, f, a, b, c, d, args)
    };
    G__8301.cljs$lang$maxFixedArity = 5;
    G__8301.cljs$lang$applyTo = function(arglist__8302) {
      var f = cljs.core.first(arglist__8302);
      var a = cljs.core.first(cljs.core.next(arglist__8302));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8302)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8302))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8302)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8302)))));
      return G__8301__delegate(f, a, b, c, d, args)
    };
    G__8301.cljs$lang$arity$variadic = G__8301__delegate;
    return G__8301
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8303) {
    var obj = cljs.core.first(arglist__8303);
    var f = cljs.core.first(cljs.core.next(arglist__8303));
    var args = cljs.core.rest(cljs.core.next(arglist__8303));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8304__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8304 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8304__delegate.call(this, x, y, more)
    };
    G__8304.cljs$lang$maxFixedArity = 2;
    G__8304.cljs$lang$applyTo = function(arglist__8305) {
      var x = cljs.core.first(arglist__8305);
      var y = cljs.core.first(cljs.core.next(arglist__8305));
      var more = cljs.core.rest(cljs.core.next(arglist__8305));
      return G__8304__delegate(x, y, more)
    };
    G__8304.cljs$lang$arity$variadic = G__8304__delegate;
    return G__8304
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8306 = pred;
        var G__8307 = cljs.core.next.call(null, coll);
        pred = G__8306;
        coll = G__8307;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____8309 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____8309)) {
        return or__3824__auto____8309
      }else {
        var G__8310 = pred;
        var G__8311 = cljs.core.next.call(null, coll);
        pred = G__8310;
        coll = G__8311;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8312 = null;
    var G__8312__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8312__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8312__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8312__3 = function() {
      var G__8313__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8313 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8313__delegate.call(this, x, y, zs)
      };
      G__8313.cljs$lang$maxFixedArity = 2;
      G__8313.cljs$lang$applyTo = function(arglist__8314) {
        var x = cljs.core.first(arglist__8314);
        var y = cljs.core.first(cljs.core.next(arglist__8314));
        var zs = cljs.core.rest(cljs.core.next(arglist__8314));
        return G__8313__delegate(x, y, zs)
      };
      G__8313.cljs$lang$arity$variadic = G__8313__delegate;
      return G__8313
    }();
    G__8312 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8312__0.call(this);
        case 1:
          return G__8312__1.call(this, x);
        case 2:
          return G__8312__2.call(this, x, y);
        default:
          return G__8312__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8312.cljs$lang$maxFixedArity = 2;
    G__8312.cljs$lang$applyTo = G__8312__3.cljs$lang$applyTo;
    return G__8312
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8315__delegate = function(args) {
      return x
    };
    var G__8315 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8315__delegate.call(this, args)
    };
    G__8315.cljs$lang$maxFixedArity = 0;
    G__8315.cljs$lang$applyTo = function(arglist__8316) {
      var args = cljs.core.seq(arglist__8316);
      return G__8315__delegate(args)
    };
    G__8315.cljs$lang$arity$variadic = G__8315__delegate;
    return G__8315
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8323 = null;
      var G__8323__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8323__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8323__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8323__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8323__4 = function() {
        var G__8324__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8324 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8324__delegate.call(this, x, y, z, args)
        };
        G__8324.cljs$lang$maxFixedArity = 3;
        G__8324.cljs$lang$applyTo = function(arglist__8325) {
          var x = cljs.core.first(arglist__8325);
          var y = cljs.core.first(cljs.core.next(arglist__8325));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8325)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8325)));
          return G__8324__delegate(x, y, z, args)
        };
        G__8324.cljs$lang$arity$variadic = G__8324__delegate;
        return G__8324
      }();
      G__8323 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8323__0.call(this);
          case 1:
            return G__8323__1.call(this, x);
          case 2:
            return G__8323__2.call(this, x, y);
          case 3:
            return G__8323__3.call(this, x, y, z);
          default:
            return G__8323__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8323.cljs$lang$maxFixedArity = 3;
      G__8323.cljs$lang$applyTo = G__8323__4.cljs$lang$applyTo;
      return G__8323
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8326 = null;
      var G__8326__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8326__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8326__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8326__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8326__4 = function() {
        var G__8327__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8327 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8327__delegate.call(this, x, y, z, args)
        };
        G__8327.cljs$lang$maxFixedArity = 3;
        G__8327.cljs$lang$applyTo = function(arglist__8328) {
          var x = cljs.core.first(arglist__8328);
          var y = cljs.core.first(cljs.core.next(arglist__8328));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8328)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8328)));
          return G__8327__delegate(x, y, z, args)
        };
        G__8327.cljs$lang$arity$variadic = G__8327__delegate;
        return G__8327
      }();
      G__8326 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8326__0.call(this);
          case 1:
            return G__8326__1.call(this, x);
          case 2:
            return G__8326__2.call(this, x, y);
          case 3:
            return G__8326__3.call(this, x, y, z);
          default:
            return G__8326__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8326.cljs$lang$maxFixedArity = 3;
      G__8326.cljs$lang$applyTo = G__8326__4.cljs$lang$applyTo;
      return G__8326
    }()
  };
  var comp__4 = function() {
    var G__8329__delegate = function(f1, f2, f3, fs) {
      var fs__8320 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8330__delegate = function(args) {
          var ret__8321 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8320), args);
          var fs__8322 = cljs.core.next.call(null, fs__8320);
          while(true) {
            if(fs__8322) {
              var G__8331 = cljs.core.first.call(null, fs__8322).call(null, ret__8321);
              var G__8332 = cljs.core.next.call(null, fs__8322);
              ret__8321 = G__8331;
              fs__8322 = G__8332;
              continue
            }else {
              return ret__8321
            }
            break
          }
        };
        var G__8330 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8330__delegate.call(this, args)
        };
        G__8330.cljs$lang$maxFixedArity = 0;
        G__8330.cljs$lang$applyTo = function(arglist__8333) {
          var args = cljs.core.seq(arglist__8333);
          return G__8330__delegate(args)
        };
        G__8330.cljs$lang$arity$variadic = G__8330__delegate;
        return G__8330
      }()
    };
    var G__8329 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8329__delegate.call(this, f1, f2, f3, fs)
    };
    G__8329.cljs$lang$maxFixedArity = 3;
    G__8329.cljs$lang$applyTo = function(arglist__8334) {
      var f1 = cljs.core.first(arglist__8334);
      var f2 = cljs.core.first(cljs.core.next(arglist__8334));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8334)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8334)));
      return G__8329__delegate(f1, f2, f3, fs)
    };
    G__8329.cljs$lang$arity$variadic = G__8329__delegate;
    return G__8329
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8335__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8335 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8335__delegate.call(this, args)
      };
      G__8335.cljs$lang$maxFixedArity = 0;
      G__8335.cljs$lang$applyTo = function(arglist__8336) {
        var args = cljs.core.seq(arglist__8336);
        return G__8335__delegate(args)
      };
      G__8335.cljs$lang$arity$variadic = G__8335__delegate;
      return G__8335
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8337__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8337 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8337__delegate.call(this, args)
      };
      G__8337.cljs$lang$maxFixedArity = 0;
      G__8337.cljs$lang$applyTo = function(arglist__8338) {
        var args = cljs.core.seq(arglist__8338);
        return G__8337__delegate(args)
      };
      G__8337.cljs$lang$arity$variadic = G__8337__delegate;
      return G__8337
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__8339__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__8339 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8339__delegate.call(this, args)
      };
      G__8339.cljs$lang$maxFixedArity = 0;
      G__8339.cljs$lang$applyTo = function(arglist__8340) {
        var args = cljs.core.seq(arglist__8340);
        return G__8339__delegate(args)
      };
      G__8339.cljs$lang$arity$variadic = G__8339__delegate;
      return G__8339
    }()
  };
  var partial__5 = function() {
    var G__8341__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__8342__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__8342 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8342__delegate.call(this, args)
        };
        G__8342.cljs$lang$maxFixedArity = 0;
        G__8342.cljs$lang$applyTo = function(arglist__8343) {
          var args = cljs.core.seq(arglist__8343);
          return G__8342__delegate(args)
        };
        G__8342.cljs$lang$arity$variadic = G__8342__delegate;
        return G__8342
      }()
    };
    var G__8341 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8341__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__8341.cljs$lang$maxFixedArity = 4;
    G__8341.cljs$lang$applyTo = function(arglist__8344) {
      var f = cljs.core.first(arglist__8344);
      var arg1 = cljs.core.first(cljs.core.next(arglist__8344));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8344)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8344))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8344))));
      return G__8341__delegate(f, arg1, arg2, arg3, more)
    };
    G__8341.cljs$lang$arity$variadic = G__8341__delegate;
    return G__8341
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__8345 = null;
      var G__8345__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__8345__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__8345__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__8345__4 = function() {
        var G__8346__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__8346 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8346__delegate.call(this, a, b, c, ds)
        };
        G__8346.cljs$lang$maxFixedArity = 3;
        G__8346.cljs$lang$applyTo = function(arglist__8347) {
          var a = cljs.core.first(arglist__8347);
          var b = cljs.core.first(cljs.core.next(arglist__8347));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8347)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8347)));
          return G__8346__delegate(a, b, c, ds)
        };
        G__8346.cljs$lang$arity$variadic = G__8346__delegate;
        return G__8346
      }();
      G__8345 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__8345__1.call(this, a);
          case 2:
            return G__8345__2.call(this, a, b);
          case 3:
            return G__8345__3.call(this, a, b, c);
          default:
            return G__8345__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8345.cljs$lang$maxFixedArity = 3;
      G__8345.cljs$lang$applyTo = G__8345__4.cljs$lang$applyTo;
      return G__8345
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__8348 = null;
      var G__8348__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8348__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__8348__4 = function() {
        var G__8349__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__8349 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8349__delegate.call(this, a, b, c, ds)
        };
        G__8349.cljs$lang$maxFixedArity = 3;
        G__8349.cljs$lang$applyTo = function(arglist__8350) {
          var a = cljs.core.first(arglist__8350);
          var b = cljs.core.first(cljs.core.next(arglist__8350));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8350)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8350)));
          return G__8349__delegate(a, b, c, ds)
        };
        G__8349.cljs$lang$arity$variadic = G__8349__delegate;
        return G__8349
      }();
      G__8348 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8348__2.call(this, a, b);
          case 3:
            return G__8348__3.call(this, a, b, c);
          default:
            return G__8348__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8348.cljs$lang$maxFixedArity = 3;
      G__8348.cljs$lang$applyTo = G__8348__4.cljs$lang$applyTo;
      return G__8348
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__8351 = null;
      var G__8351__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8351__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__8351__4 = function() {
        var G__8352__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__8352 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8352__delegate.call(this, a, b, c, ds)
        };
        G__8352.cljs$lang$maxFixedArity = 3;
        G__8352.cljs$lang$applyTo = function(arglist__8353) {
          var a = cljs.core.first(arglist__8353);
          var b = cljs.core.first(cljs.core.next(arglist__8353));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8353)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8353)));
          return G__8352__delegate(a, b, c, ds)
        };
        G__8352.cljs$lang$arity$variadic = G__8352__delegate;
        return G__8352
      }();
      G__8351 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8351__2.call(this, a, b);
          case 3:
            return G__8351__3.call(this, a, b, c);
          default:
            return G__8351__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8351.cljs$lang$maxFixedArity = 3;
      G__8351.cljs$lang$applyTo = G__8351__4.cljs$lang$applyTo;
      return G__8351
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__8369 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8377 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8377) {
        var s__8378 = temp__3974__auto____8377;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8378)) {
          var c__8379 = cljs.core.chunk_first.call(null, s__8378);
          var size__8380 = cljs.core.count.call(null, c__8379);
          var b__8381 = cljs.core.chunk_buffer.call(null, size__8380);
          var n__2527__auto____8382 = size__8380;
          var i__8383 = 0;
          while(true) {
            if(i__8383 < n__2527__auto____8382) {
              cljs.core.chunk_append.call(null, b__8381, f.call(null, idx + i__8383, cljs.core._nth.call(null, c__8379, i__8383)));
              var G__8384 = i__8383 + 1;
              i__8383 = G__8384;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8381), mapi.call(null, idx + size__8380, cljs.core.chunk_rest.call(null, s__8378)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__8378)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__8378)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__8369.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8394 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8394) {
      var s__8395 = temp__3974__auto____8394;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8395)) {
        var c__8396 = cljs.core.chunk_first.call(null, s__8395);
        var size__8397 = cljs.core.count.call(null, c__8396);
        var b__8398 = cljs.core.chunk_buffer.call(null, size__8397);
        var n__2527__auto____8399 = size__8397;
        var i__8400 = 0;
        while(true) {
          if(i__8400 < n__2527__auto____8399) {
            var x__8401 = f.call(null, cljs.core._nth.call(null, c__8396, i__8400));
            if(x__8401 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__8398, x__8401)
            }
            var G__8403 = i__8400 + 1;
            i__8400 = G__8403;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8398), keep.call(null, f, cljs.core.chunk_rest.call(null, s__8395)))
      }else {
        var x__8402 = f.call(null, cljs.core.first.call(null, s__8395));
        if(x__8402 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__8395))
        }else {
          return cljs.core.cons.call(null, x__8402, keep.call(null, f, cljs.core.rest.call(null, s__8395)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__8429 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8439 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8439) {
        var s__8440 = temp__3974__auto____8439;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8440)) {
          var c__8441 = cljs.core.chunk_first.call(null, s__8440);
          var size__8442 = cljs.core.count.call(null, c__8441);
          var b__8443 = cljs.core.chunk_buffer.call(null, size__8442);
          var n__2527__auto____8444 = size__8442;
          var i__8445 = 0;
          while(true) {
            if(i__8445 < n__2527__auto____8444) {
              var x__8446 = f.call(null, idx + i__8445, cljs.core._nth.call(null, c__8441, i__8445));
              if(x__8446 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__8443, x__8446)
              }
              var G__8448 = i__8445 + 1;
              i__8445 = G__8448;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8443), keepi.call(null, idx + size__8442, cljs.core.chunk_rest.call(null, s__8440)))
        }else {
          var x__8447 = f.call(null, idx, cljs.core.first.call(null, s__8440));
          if(x__8447 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8440))
          }else {
            return cljs.core.cons.call(null, x__8447, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8440)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__8429.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8534 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8534)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____8534
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8535 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8535)) {
            var and__3822__auto____8536 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8536)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____8536
            }
          }else {
            return and__3822__auto____8535
          }
        }())
      };
      var ep1__4 = function() {
        var G__8605__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8537 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8537)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____8537
            }
          }())
        };
        var G__8605 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8605__delegate.call(this, x, y, z, args)
        };
        G__8605.cljs$lang$maxFixedArity = 3;
        G__8605.cljs$lang$applyTo = function(arglist__8606) {
          var x = cljs.core.first(arglist__8606);
          var y = cljs.core.first(cljs.core.next(arglist__8606));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8606)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8606)));
          return G__8605__delegate(x, y, z, args)
        };
        G__8605.cljs$lang$arity$variadic = G__8605__delegate;
        return G__8605
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8549 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8549)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____8549
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8550 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8550)) {
            var and__3822__auto____8551 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8551)) {
              var and__3822__auto____8552 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8552)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____8552
              }
            }else {
              return and__3822__auto____8551
            }
          }else {
            return and__3822__auto____8550
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8553 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8553)) {
            var and__3822__auto____8554 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8554)) {
              var and__3822__auto____8555 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____8555)) {
                var and__3822__auto____8556 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____8556)) {
                  var and__3822__auto____8557 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8557)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____8557
                  }
                }else {
                  return and__3822__auto____8556
                }
              }else {
                return and__3822__auto____8555
              }
            }else {
              return and__3822__auto____8554
            }
          }else {
            return and__3822__auto____8553
          }
        }())
      };
      var ep2__4 = function() {
        var G__8607__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8558 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8558)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8404_SHARP_) {
                var and__3822__auto____8559 = p1.call(null, p1__8404_SHARP_);
                if(cljs.core.truth_(and__3822__auto____8559)) {
                  return p2.call(null, p1__8404_SHARP_)
                }else {
                  return and__3822__auto____8559
                }
              }, args)
            }else {
              return and__3822__auto____8558
            }
          }())
        };
        var G__8607 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8607__delegate.call(this, x, y, z, args)
        };
        G__8607.cljs$lang$maxFixedArity = 3;
        G__8607.cljs$lang$applyTo = function(arglist__8608) {
          var x = cljs.core.first(arglist__8608);
          var y = cljs.core.first(cljs.core.next(arglist__8608));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8608)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8608)));
          return G__8607__delegate(x, y, z, args)
        };
        G__8607.cljs$lang$arity$variadic = G__8607__delegate;
        return G__8607
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8578 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8578)) {
            var and__3822__auto____8579 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8579)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____8579
            }
          }else {
            return and__3822__auto____8578
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8580 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8580)) {
            var and__3822__auto____8581 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8581)) {
              var and__3822__auto____8582 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8582)) {
                var and__3822__auto____8583 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____8583)) {
                  var and__3822__auto____8584 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8584)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____8584
                  }
                }else {
                  return and__3822__auto____8583
                }
              }else {
                return and__3822__auto____8582
              }
            }else {
              return and__3822__auto____8581
            }
          }else {
            return and__3822__auto____8580
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8585 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8585)) {
            var and__3822__auto____8586 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8586)) {
              var and__3822__auto____8587 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8587)) {
                var and__3822__auto____8588 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____8588)) {
                  var and__3822__auto____8589 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8589)) {
                    var and__3822__auto____8590 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____8590)) {
                      var and__3822__auto____8591 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____8591)) {
                        var and__3822__auto____8592 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____8592)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____8592
                        }
                      }else {
                        return and__3822__auto____8591
                      }
                    }else {
                      return and__3822__auto____8590
                    }
                  }else {
                    return and__3822__auto____8589
                  }
                }else {
                  return and__3822__auto____8588
                }
              }else {
                return and__3822__auto____8587
              }
            }else {
              return and__3822__auto____8586
            }
          }else {
            return and__3822__auto____8585
          }
        }())
      };
      var ep3__4 = function() {
        var G__8609__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8593 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8593)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8405_SHARP_) {
                var and__3822__auto____8594 = p1.call(null, p1__8405_SHARP_);
                if(cljs.core.truth_(and__3822__auto____8594)) {
                  var and__3822__auto____8595 = p2.call(null, p1__8405_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____8595)) {
                    return p3.call(null, p1__8405_SHARP_)
                  }else {
                    return and__3822__auto____8595
                  }
                }else {
                  return and__3822__auto____8594
                }
              }, args)
            }else {
              return and__3822__auto____8593
            }
          }())
        };
        var G__8609 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8609__delegate.call(this, x, y, z, args)
        };
        G__8609.cljs$lang$maxFixedArity = 3;
        G__8609.cljs$lang$applyTo = function(arglist__8610) {
          var x = cljs.core.first(arglist__8610);
          var y = cljs.core.first(cljs.core.next(arglist__8610));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8610)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8610)));
          return G__8609__delegate(x, y, z, args)
        };
        G__8609.cljs$lang$arity$variadic = G__8609__delegate;
        return G__8609
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__8611__delegate = function(p1, p2, p3, ps) {
      var ps__8596 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__8406_SHARP_) {
            return p1__8406_SHARP_.call(null, x)
          }, ps__8596)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__8407_SHARP_) {
            var and__3822__auto____8601 = p1__8407_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8601)) {
              return p1__8407_SHARP_.call(null, y)
            }else {
              return and__3822__auto____8601
            }
          }, ps__8596)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__8408_SHARP_) {
            var and__3822__auto____8602 = p1__8408_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8602)) {
              var and__3822__auto____8603 = p1__8408_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____8603)) {
                return p1__8408_SHARP_.call(null, z)
              }else {
                return and__3822__auto____8603
              }
            }else {
              return and__3822__auto____8602
            }
          }, ps__8596)
        };
        var epn__4 = function() {
          var G__8612__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____8604 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____8604)) {
                return cljs.core.every_QMARK_.call(null, function(p1__8409_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__8409_SHARP_, args)
                }, ps__8596)
              }else {
                return and__3822__auto____8604
              }
            }())
          };
          var G__8612 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__8612__delegate.call(this, x, y, z, args)
          };
          G__8612.cljs$lang$maxFixedArity = 3;
          G__8612.cljs$lang$applyTo = function(arglist__8613) {
            var x = cljs.core.first(arglist__8613);
            var y = cljs.core.first(cljs.core.next(arglist__8613));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8613)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8613)));
            return G__8612__delegate(x, y, z, args)
          };
          G__8612.cljs$lang$arity$variadic = G__8612__delegate;
          return G__8612
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__8611 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8611__delegate.call(this, p1, p2, p3, ps)
    };
    G__8611.cljs$lang$maxFixedArity = 3;
    G__8611.cljs$lang$applyTo = function(arglist__8614) {
      var p1 = cljs.core.first(arglist__8614);
      var p2 = cljs.core.first(cljs.core.next(arglist__8614));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8614)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8614)));
      return G__8611__delegate(p1, p2, p3, ps)
    };
    G__8611.cljs$lang$arity$variadic = G__8611__delegate;
    return G__8611
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____8695 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8695)) {
          return or__3824__auto____8695
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____8696 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8696)) {
          return or__3824__auto____8696
        }else {
          var or__3824__auto____8697 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8697)) {
            return or__3824__auto____8697
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__8766__delegate = function(x, y, z, args) {
          var or__3824__auto____8698 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8698)) {
            return or__3824__auto____8698
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__8766 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8766__delegate.call(this, x, y, z, args)
        };
        G__8766.cljs$lang$maxFixedArity = 3;
        G__8766.cljs$lang$applyTo = function(arglist__8767) {
          var x = cljs.core.first(arglist__8767);
          var y = cljs.core.first(cljs.core.next(arglist__8767));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8767)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8767)));
          return G__8766__delegate(x, y, z, args)
        };
        G__8766.cljs$lang$arity$variadic = G__8766__delegate;
        return G__8766
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____8710 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8710)) {
          return or__3824__auto____8710
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____8711 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8711)) {
          return or__3824__auto____8711
        }else {
          var or__3824__auto____8712 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8712)) {
            return or__3824__auto____8712
          }else {
            var or__3824__auto____8713 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8713)) {
              return or__3824__auto____8713
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____8714 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8714)) {
          return or__3824__auto____8714
        }else {
          var or__3824__auto____8715 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8715)) {
            return or__3824__auto____8715
          }else {
            var or__3824__auto____8716 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____8716)) {
              return or__3824__auto____8716
            }else {
              var or__3824__auto____8717 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____8717)) {
                return or__3824__auto____8717
              }else {
                var or__3824__auto____8718 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8718)) {
                  return or__3824__auto____8718
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__8768__delegate = function(x, y, z, args) {
          var or__3824__auto____8719 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8719)) {
            return or__3824__auto____8719
          }else {
            return cljs.core.some.call(null, function(p1__8449_SHARP_) {
              var or__3824__auto____8720 = p1.call(null, p1__8449_SHARP_);
              if(cljs.core.truth_(or__3824__auto____8720)) {
                return or__3824__auto____8720
              }else {
                return p2.call(null, p1__8449_SHARP_)
              }
            }, args)
          }
        };
        var G__8768 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8768__delegate.call(this, x, y, z, args)
        };
        G__8768.cljs$lang$maxFixedArity = 3;
        G__8768.cljs$lang$applyTo = function(arglist__8769) {
          var x = cljs.core.first(arglist__8769);
          var y = cljs.core.first(cljs.core.next(arglist__8769));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8769)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8769)));
          return G__8768__delegate(x, y, z, args)
        };
        G__8768.cljs$lang$arity$variadic = G__8768__delegate;
        return G__8768
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____8739 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8739)) {
          return or__3824__auto____8739
        }else {
          var or__3824__auto____8740 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8740)) {
            return or__3824__auto____8740
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____8741 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8741)) {
          return or__3824__auto____8741
        }else {
          var or__3824__auto____8742 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8742)) {
            return or__3824__auto____8742
          }else {
            var or__3824__auto____8743 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8743)) {
              return or__3824__auto____8743
            }else {
              var or__3824__auto____8744 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8744)) {
                return or__3824__auto____8744
              }else {
                var or__3824__auto____8745 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8745)) {
                  return or__3824__auto____8745
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____8746 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8746)) {
          return or__3824__auto____8746
        }else {
          var or__3824__auto____8747 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8747)) {
            return or__3824__auto____8747
          }else {
            var or__3824__auto____8748 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8748)) {
              return or__3824__auto____8748
            }else {
              var or__3824__auto____8749 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8749)) {
                return or__3824__auto____8749
              }else {
                var or__3824__auto____8750 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8750)) {
                  return or__3824__auto____8750
                }else {
                  var or__3824__auto____8751 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____8751)) {
                    return or__3824__auto____8751
                  }else {
                    var or__3824__auto____8752 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____8752)) {
                      return or__3824__auto____8752
                    }else {
                      var or__3824__auto____8753 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____8753)) {
                        return or__3824__auto____8753
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__8770__delegate = function(x, y, z, args) {
          var or__3824__auto____8754 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8754)) {
            return or__3824__auto____8754
          }else {
            return cljs.core.some.call(null, function(p1__8450_SHARP_) {
              var or__3824__auto____8755 = p1.call(null, p1__8450_SHARP_);
              if(cljs.core.truth_(or__3824__auto____8755)) {
                return or__3824__auto____8755
              }else {
                var or__3824__auto____8756 = p2.call(null, p1__8450_SHARP_);
                if(cljs.core.truth_(or__3824__auto____8756)) {
                  return or__3824__auto____8756
                }else {
                  return p3.call(null, p1__8450_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__8770 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8770__delegate.call(this, x, y, z, args)
        };
        G__8770.cljs$lang$maxFixedArity = 3;
        G__8770.cljs$lang$applyTo = function(arglist__8771) {
          var x = cljs.core.first(arglist__8771);
          var y = cljs.core.first(cljs.core.next(arglist__8771));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8771)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8771)));
          return G__8770__delegate(x, y, z, args)
        };
        G__8770.cljs$lang$arity$variadic = G__8770__delegate;
        return G__8770
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__8772__delegate = function(p1, p2, p3, ps) {
      var ps__8757 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__8451_SHARP_) {
            return p1__8451_SHARP_.call(null, x)
          }, ps__8757)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__8452_SHARP_) {
            var or__3824__auto____8762 = p1__8452_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8762)) {
              return or__3824__auto____8762
            }else {
              return p1__8452_SHARP_.call(null, y)
            }
          }, ps__8757)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__8453_SHARP_) {
            var or__3824__auto____8763 = p1__8453_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8763)) {
              return or__3824__auto____8763
            }else {
              var or__3824__auto____8764 = p1__8453_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8764)) {
                return or__3824__auto____8764
              }else {
                return p1__8453_SHARP_.call(null, z)
              }
            }
          }, ps__8757)
        };
        var spn__4 = function() {
          var G__8773__delegate = function(x, y, z, args) {
            var or__3824__auto____8765 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____8765)) {
              return or__3824__auto____8765
            }else {
              return cljs.core.some.call(null, function(p1__8454_SHARP_) {
                return cljs.core.some.call(null, p1__8454_SHARP_, args)
              }, ps__8757)
            }
          };
          var G__8773 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__8773__delegate.call(this, x, y, z, args)
          };
          G__8773.cljs$lang$maxFixedArity = 3;
          G__8773.cljs$lang$applyTo = function(arglist__8774) {
            var x = cljs.core.first(arglist__8774);
            var y = cljs.core.first(cljs.core.next(arglist__8774));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8774)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8774)));
            return G__8773__delegate(x, y, z, args)
          };
          G__8773.cljs$lang$arity$variadic = G__8773__delegate;
          return G__8773
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__8772 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8772__delegate.call(this, p1, p2, p3, ps)
    };
    G__8772.cljs$lang$maxFixedArity = 3;
    G__8772.cljs$lang$applyTo = function(arglist__8775) {
      var p1 = cljs.core.first(arglist__8775);
      var p2 = cljs.core.first(cljs.core.next(arglist__8775));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8775)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8775)));
      return G__8772__delegate(p1, p2, p3, ps)
    };
    G__8772.cljs$lang$arity$variadic = G__8772__delegate;
    return G__8772
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8794 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8794) {
        var s__8795 = temp__3974__auto____8794;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8795)) {
          var c__8796 = cljs.core.chunk_first.call(null, s__8795);
          var size__8797 = cljs.core.count.call(null, c__8796);
          var b__8798 = cljs.core.chunk_buffer.call(null, size__8797);
          var n__2527__auto____8799 = size__8797;
          var i__8800 = 0;
          while(true) {
            if(i__8800 < n__2527__auto____8799) {
              cljs.core.chunk_append.call(null, b__8798, f.call(null, cljs.core._nth.call(null, c__8796, i__8800)));
              var G__8812 = i__8800 + 1;
              i__8800 = G__8812;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8798), map.call(null, f, cljs.core.chunk_rest.call(null, s__8795)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__8795)), map.call(null, f, cljs.core.rest.call(null, s__8795)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8801 = cljs.core.seq.call(null, c1);
      var s2__8802 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____8803 = s1__8801;
        if(and__3822__auto____8803) {
          return s2__8802
        }else {
          return and__3822__auto____8803
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__8801), cljs.core.first.call(null, s2__8802)), map.call(null, f, cljs.core.rest.call(null, s1__8801), cljs.core.rest.call(null, s2__8802)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8804 = cljs.core.seq.call(null, c1);
      var s2__8805 = cljs.core.seq.call(null, c2);
      var s3__8806 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____8807 = s1__8804;
        if(and__3822__auto____8807) {
          var and__3822__auto____8808 = s2__8805;
          if(and__3822__auto____8808) {
            return s3__8806
          }else {
            return and__3822__auto____8808
          }
        }else {
          return and__3822__auto____8807
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__8804), cljs.core.first.call(null, s2__8805), cljs.core.first.call(null, s3__8806)), map.call(null, f, cljs.core.rest.call(null, s1__8804), cljs.core.rest.call(null, s2__8805), cljs.core.rest.call(null, s3__8806)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__8813__delegate = function(f, c1, c2, c3, colls) {
      var step__8811 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__8810 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__8810)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__8810), step.call(null, map.call(null, cljs.core.rest, ss__8810)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__8615_SHARP_) {
        return cljs.core.apply.call(null, f, p1__8615_SHARP_)
      }, step__8811.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__8813 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8813__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__8813.cljs$lang$maxFixedArity = 4;
    G__8813.cljs$lang$applyTo = function(arglist__8814) {
      var f = cljs.core.first(arglist__8814);
      var c1 = cljs.core.first(cljs.core.next(arglist__8814));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8814)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8814))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8814))));
      return G__8813__delegate(f, c1, c2, c3, colls)
    };
    G__8813.cljs$lang$arity$variadic = G__8813__delegate;
    return G__8813
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____8817 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8817) {
        var s__8818 = temp__3974__auto____8817;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__8818), take.call(null, n - 1, cljs.core.rest.call(null, s__8818)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__8824 = function(n, coll) {
    while(true) {
      var s__8822 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____8823 = n > 0;
        if(and__3822__auto____8823) {
          return s__8822
        }else {
          return and__3822__auto____8823
        }
      }())) {
        var G__8825 = n - 1;
        var G__8826 = cljs.core.rest.call(null, s__8822);
        n = G__8825;
        coll = G__8826;
        continue
      }else {
        return s__8822
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__8824.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__8829 = cljs.core.seq.call(null, coll);
  var lead__8830 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__8830) {
      var G__8831 = cljs.core.next.call(null, s__8829);
      var G__8832 = cljs.core.next.call(null, lead__8830);
      s__8829 = G__8831;
      lead__8830 = G__8832;
      continue
    }else {
      return s__8829
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__8838 = function(pred, coll) {
    while(true) {
      var s__8836 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____8837 = s__8836;
        if(and__3822__auto____8837) {
          return pred.call(null, cljs.core.first.call(null, s__8836))
        }else {
          return and__3822__auto____8837
        }
      }())) {
        var G__8839 = pred;
        var G__8840 = cljs.core.rest.call(null, s__8836);
        pred = G__8839;
        coll = G__8840;
        continue
      }else {
        return s__8836
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__8838.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8843 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8843) {
      var s__8844 = temp__3974__auto____8843;
      return cljs.core.concat.call(null, s__8844, cycle.call(null, s__8844))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8849 = cljs.core.seq.call(null, c1);
      var s2__8850 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____8851 = s1__8849;
        if(and__3822__auto____8851) {
          return s2__8850
        }else {
          return and__3822__auto____8851
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__8849), cljs.core.cons.call(null, cljs.core.first.call(null, s2__8850), interleave.call(null, cljs.core.rest.call(null, s1__8849), cljs.core.rest.call(null, s2__8850))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__8853__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__8852 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__8852)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__8852), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__8852)))
        }else {
          return null
        }
      }, null)
    };
    var G__8853 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8853__delegate.call(this, c1, c2, colls)
    };
    G__8853.cljs$lang$maxFixedArity = 2;
    G__8853.cljs$lang$applyTo = function(arglist__8854) {
      var c1 = cljs.core.first(arglist__8854);
      var c2 = cljs.core.first(cljs.core.next(arglist__8854));
      var colls = cljs.core.rest(cljs.core.next(arglist__8854));
      return G__8853__delegate(c1, c2, colls)
    };
    G__8853.cljs$lang$arity$variadic = G__8853__delegate;
    return G__8853
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__8864 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____8862 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____8862) {
        var coll__8863 = temp__3971__auto____8862;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__8863), cat.call(null, cljs.core.rest.call(null, coll__8863), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__8864.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__8865__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__8865 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8865__delegate.call(this, f, coll, colls)
    };
    G__8865.cljs$lang$maxFixedArity = 2;
    G__8865.cljs$lang$applyTo = function(arglist__8866) {
      var f = cljs.core.first(arglist__8866);
      var coll = cljs.core.first(cljs.core.next(arglist__8866));
      var colls = cljs.core.rest(cljs.core.next(arglist__8866));
      return G__8865__delegate(f, coll, colls)
    };
    G__8865.cljs$lang$arity$variadic = G__8865__delegate;
    return G__8865
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8876 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8876) {
      var s__8877 = temp__3974__auto____8876;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8877)) {
        var c__8878 = cljs.core.chunk_first.call(null, s__8877);
        var size__8879 = cljs.core.count.call(null, c__8878);
        var b__8880 = cljs.core.chunk_buffer.call(null, size__8879);
        var n__2527__auto____8881 = size__8879;
        var i__8882 = 0;
        while(true) {
          if(i__8882 < n__2527__auto____8881) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__8878, i__8882)))) {
              cljs.core.chunk_append.call(null, b__8880, cljs.core._nth.call(null, c__8878, i__8882))
            }else {
            }
            var G__8885 = i__8882 + 1;
            i__8882 = G__8885;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8880), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__8877)))
      }else {
        var f__8883 = cljs.core.first.call(null, s__8877);
        var r__8884 = cljs.core.rest.call(null, s__8877);
        if(cljs.core.truth_(pred.call(null, f__8883))) {
          return cljs.core.cons.call(null, f__8883, filter.call(null, pred, r__8884))
        }else {
          return filter.call(null, pred, r__8884)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__8888 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__8888.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__8886_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__8886_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__8892__8893 = to;
    if(G__8892__8893) {
      if(function() {
        var or__3824__auto____8894 = G__8892__8893.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____8894) {
          return or__3824__auto____8894
        }else {
          return G__8892__8893.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__8892__8893.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__8892__8893)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__8892__8893)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__8895__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__8895 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8895__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__8895.cljs$lang$maxFixedArity = 4;
    G__8895.cljs$lang$applyTo = function(arglist__8896) {
      var f = cljs.core.first(arglist__8896);
      var c1 = cljs.core.first(cljs.core.next(arglist__8896));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8896)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8896))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8896))));
      return G__8895__delegate(f, c1, c2, c3, colls)
    };
    G__8895.cljs$lang$arity$variadic = G__8895__delegate;
    return G__8895
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8903 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8903) {
        var s__8904 = temp__3974__auto____8903;
        var p__8905 = cljs.core.take.call(null, n, s__8904);
        if(n === cljs.core.count.call(null, p__8905)) {
          return cljs.core.cons.call(null, p__8905, partition.call(null, n, step, cljs.core.drop.call(null, step, s__8904)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8906 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8906) {
        var s__8907 = temp__3974__auto____8906;
        var p__8908 = cljs.core.take.call(null, n, s__8907);
        if(n === cljs.core.count.call(null, p__8908)) {
          return cljs.core.cons.call(null, p__8908, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__8907)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__8908, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__8913 = cljs.core.lookup_sentinel;
    var m__8914 = m;
    var ks__8915 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__8915) {
        var m__8916 = cljs.core._lookup.call(null, m__8914, cljs.core.first.call(null, ks__8915), sentinel__8913);
        if(sentinel__8913 === m__8916) {
          return not_found
        }else {
          var G__8917 = sentinel__8913;
          var G__8918 = m__8916;
          var G__8919 = cljs.core.next.call(null, ks__8915);
          sentinel__8913 = G__8917;
          m__8914 = G__8918;
          ks__8915 = G__8919;
          continue
        }
      }else {
        return m__8914
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__8920, v) {
  var vec__8925__8926 = p__8920;
  var k__8927 = cljs.core.nth.call(null, vec__8925__8926, 0, null);
  var ks__8928 = cljs.core.nthnext.call(null, vec__8925__8926, 1);
  if(cljs.core.truth_(ks__8928)) {
    return cljs.core.assoc.call(null, m, k__8927, assoc_in.call(null, cljs.core._lookup.call(null, m, k__8927, null), ks__8928, v))
  }else {
    return cljs.core.assoc.call(null, m, k__8927, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__8929, f, args) {
    var vec__8934__8935 = p__8929;
    var k__8936 = cljs.core.nth.call(null, vec__8934__8935, 0, null);
    var ks__8937 = cljs.core.nthnext.call(null, vec__8934__8935, 1);
    if(cljs.core.truth_(ks__8937)) {
      return cljs.core.assoc.call(null, m, k__8936, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__8936, null), ks__8937, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__8936, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__8936, null), args))
    }
  };
  var update_in = function(m, p__8929, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__8929, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__8938) {
    var m = cljs.core.first(arglist__8938);
    var p__8929 = cljs.core.first(cljs.core.next(arglist__8938));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8938)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8938)));
    return update_in__delegate(m, p__8929, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8941 = this;
  var h__2192__auto____8942 = this__8941.__hash;
  if(!(h__2192__auto____8942 == null)) {
    return h__2192__auto____8942
  }else {
    var h__2192__auto____8943 = cljs.core.hash_coll.call(null, coll);
    this__8941.__hash = h__2192__auto____8943;
    return h__2192__auto____8943
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__8944 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__8945 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__8946 = this;
  var new_array__8947 = this__8946.array.slice();
  new_array__8947[k] = v;
  return new cljs.core.Vector(this__8946.meta, new_array__8947, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__8978 = null;
  var G__8978__2 = function(this_sym8948, k) {
    var this__8950 = this;
    var this_sym8948__8951 = this;
    var coll__8952 = this_sym8948__8951;
    return coll__8952.cljs$core$ILookup$_lookup$arity$2(coll__8952, k)
  };
  var G__8978__3 = function(this_sym8949, k, not_found) {
    var this__8950 = this;
    var this_sym8949__8953 = this;
    var coll__8954 = this_sym8949__8953;
    return coll__8954.cljs$core$ILookup$_lookup$arity$3(coll__8954, k, not_found)
  };
  G__8978 = function(this_sym8949, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8978__2.call(this, this_sym8949, k);
      case 3:
        return G__8978__3.call(this, this_sym8949, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8978
}();
cljs.core.Vector.prototype.apply = function(this_sym8939, args8940) {
  var this__8955 = this;
  return this_sym8939.call.apply(this_sym8939, [this_sym8939].concat(args8940.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8956 = this;
  var new_array__8957 = this__8956.array.slice();
  new_array__8957.push(o);
  return new cljs.core.Vector(this__8956.meta, new_array__8957, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__8958 = this;
  var this__8959 = this;
  return cljs.core.pr_str.call(null, this__8959)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__8960 = this;
  return cljs.core.ci_reduce.call(null, this__8960.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__8961 = this;
  return cljs.core.ci_reduce.call(null, this__8961.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8962 = this;
  if(this__8962.array.length > 0) {
    var vector_seq__8963 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__8962.array.length) {
          return cljs.core.cons.call(null, this__8962.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__8963.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8964 = this;
  return this__8964.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8965 = this;
  var count__8966 = this__8965.array.length;
  if(count__8966 > 0) {
    return this__8965.array[count__8966 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8967 = this;
  if(this__8967.array.length > 0) {
    var new_array__8968 = this__8967.array.slice();
    new_array__8968.pop();
    return new cljs.core.Vector(this__8967.meta, new_array__8968, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__8969 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8970 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8971 = this;
  return new cljs.core.Vector(meta, this__8971.array, this__8971.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8972 = this;
  return this__8972.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8973 = this;
  if(function() {
    var and__3822__auto____8974 = 0 <= n;
    if(and__3822__auto____8974) {
      return n < this__8973.array.length
    }else {
      return and__3822__auto____8974
    }
  }()) {
    return this__8973.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8975 = this;
  if(function() {
    var and__3822__auto____8976 = 0 <= n;
    if(and__3822__auto____8976) {
      return n < this__8975.array.length
    }else {
      return and__3822__auto____8976
    }
  }()) {
    return this__8975.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8977 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__8977.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__8980 = pv.cnt;
  if(cnt__8980 < 32) {
    return 0
  }else {
    return cnt__8980 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__8986 = level;
  var ret__8987 = node;
  while(true) {
    if(ll__8986 === 0) {
      return ret__8987
    }else {
      var embed__8988 = ret__8987;
      var r__8989 = cljs.core.pv_fresh_node.call(null, edit);
      var ___8990 = cljs.core.pv_aset.call(null, r__8989, 0, embed__8988);
      var G__8991 = ll__8986 - 5;
      var G__8992 = r__8989;
      ll__8986 = G__8991;
      ret__8987 = G__8992;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__8998 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__8999 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__8998, subidx__8999, tailnode);
    return ret__8998
  }else {
    var child__9000 = cljs.core.pv_aget.call(null, parent, subidx__8999);
    if(!(child__9000 == null)) {
      var node_to_insert__9001 = push_tail.call(null, pv, level - 5, child__9000, tailnode);
      cljs.core.pv_aset.call(null, ret__8998, subidx__8999, node_to_insert__9001);
      return ret__8998
    }else {
      var node_to_insert__9002 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__8998, subidx__8999, node_to_insert__9002);
      return ret__8998
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____9006 = 0 <= i;
    if(and__3822__auto____9006) {
      return i < pv.cnt
    }else {
      return and__3822__auto____9006
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9007 = pv.root;
      var level__9008 = pv.shift;
      while(true) {
        if(level__9008 > 0) {
          var G__9009 = cljs.core.pv_aget.call(null, node__9007, i >>> level__9008 & 31);
          var G__9010 = level__9008 - 5;
          node__9007 = G__9009;
          level__9008 = G__9010;
          continue
        }else {
          return node__9007.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9013 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9013, i & 31, val);
    return ret__9013
  }else {
    var subidx__9014 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9013, subidx__9014, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9014), i, val));
    return ret__9013
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9020 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9021 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9020));
    if(function() {
      var and__3822__auto____9022 = new_child__9021 == null;
      if(and__3822__auto____9022) {
        return subidx__9020 === 0
      }else {
        return and__3822__auto____9022
      }
    }()) {
      return null
    }else {
      var ret__9023 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9023, subidx__9020, new_child__9021);
      return ret__9023
    }
  }else {
    if(subidx__9020 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9024 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9024, subidx__9020, null);
        return ret__9024
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9027 = this;
  return new cljs.core.TransientVector(this__9027.cnt, this__9027.shift, cljs.core.tv_editable_root.call(null, this__9027.root), cljs.core.tv_editable_tail.call(null, this__9027.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9028 = this;
  var h__2192__auto____9029 = this__9028.__hash;
  if(!(h__2192__auto____9029 == null)) {
    return h__2192__auto____9029
  }else {
    var h__2192__auto____9030 = cljs.core.hash_coll.call(null, coll);
    this__9028.__hash = h__2192__auto____9030;
    return h__2192__auto____9030
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9031 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9032 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9033 = this;
  if(function() {
    var and__3822__auto____9034 = 0 <= k;
    if(and__3822__auto____9034) {
      return k < this__9033.cnt
    }else {
      return and__3822__auto____9034
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9035 = this__9033.tail.slice();
      new_tail__9035[k & 31] = v;
      return new cljs.core.PersistentVector(this__9033.meta, this__9033.cnt, this__9033.shift, this__9033.root, new_tail__9035, null)
    }else {
      return new cljs.core.PersistentVector(this__9033.meta, this__9033.cnt, this__9033.shift, cljs.core.do_assoc.call(null, coll, this__9033.shift, this__9033.root, k, v), this__9033.tail, null)
    }
  }else {
    if(k === this__9033.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9033.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9083 = null;
  var G__9083__2 = function(this_sym9036, k) {
    var this__9038 = this;
    var this_sym9036__9039 = this;
    var coll__9040 = this_sym9036__9039;
    return coll__9040.cljs$core$ILookup$_lookup$arity$2(coll__9040, k)
  };
  var G__9083__3 = function(this_sym9037, k, not_found) {
    var this__9038 = this;
    var this_sym9037__9041 = this;
    var coll__9042 = this_sym9037__9041;
    return coll__9042.cljs$core$ILookup$_lookup$arity$3(coll__9042, k, not_found)
  };
  G__9083 = function(this_sym9037, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9083__2.call(this, this_sym9037, k);
      case 3:
        return G__9083__3.call(this, this_sym9037, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9083
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9025, args9026) {
  var this__9043 = this;
  return this_sym9025.call.apply(this_sym9025, [this_sym9025].concat(args9026.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9044 = this;
  var step_init__9045 = [0, init];
  var i__9046 = 0;
  while(true) {
    if(i__9046 < this__9044.cnt) {
      var arr__9047 = cljs.core.array_for.call(null, v, i__9046);
      var len__9048 = arr__9047.length;
      var init__9052 = function() {
        var j__9049 = 0;
        var init__9050 = step_init__9045[1];
        while(true) {
          if(j__9049 < len__9048) {
            var init__9051 = f.call(null, init__9050, j__9049 + i__9046, arr__9047[j__9049]);
            if(cljs.core.reduced_QMARK_.call(null, init__9051)) {
              return init__9051
            }else {
              var G__9084 = j__9049 + 1;
              var G__9085 = init__9051;
              j__9049 = G__9084;
              init__9050 = G__9085;
              continue
            }
          }else {
            step_init__9045[0] = len__9048;
            step_init__9045[1] = init__9050;
            return init__9050
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9052)) {
        return cljs.core.deref.call(null, init__9052)
      }else {
        var G__9086 = i__9046 + step_init__9045[0];
        i__9046 = G__9086;
        continue
      }
    }else {
      return step_init__9045[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9053 = this;
  if(this__9053.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9054 = this__9053.tail.slice();
    new_tail__9054.push(o);
    return new cljs.core.PersistentVector(this__9053.meta, this__9053.cnt + 1, this__9053.shift, this__9053.root, new_tail__9054, null)
  }else {
    var root_overflow_QMARK___9055 = this__9053.cnt >>> 5 > 1 << this__9053.shift;
    var new_shift__9056 = root_overflow_QMARK___9055 ? this__9053.shift + 5 : this__9053.shift;
    var new_root__9058 = root_overflow_QMARK___9055 ? function() {
      var n_r__9057 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9057, 0, this__9053.root);
      cljs.core.pv_aset.call(null, n_r__9057, 1, cljs.core.new_path.call(null, null, this__9053.shift, new cljs.core.VectorNode(null, this__9053.tail)));
      return n_r__9057
    }() : cljs.core.push_tail.call(null, coll, this__9053.shift, this__9053.root, new cljs.core.VectorNode(null, this__9053.tail));
    return new cljs.core.PersistentVector(this__9053.meta, this__9053.cnt + 1, new_shift__9056, new_root__9058, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9059 = this;
  if(this__9059.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9059.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9060 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9061 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9062 = this;
  var this__9063 = this;
  return cljs.core.pr_str.call(null, this__9063)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9064 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9065 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9066 = this;
  if(this__9066.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9067 = this;
  return this__9067.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9068 = this;
  if(this__9068.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9068.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9069 = this;
  if(this__9069.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9069.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9069.meta)
    }else {
      if(1 < this__9069.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9069.meta, this__9069.cnt - 1, this__9069.shift, this__9069.root, this__9069.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9070 = cljs.core.array_for.call(null, coll, this__9069.cnt - 2);
          var nr__9071 = cljs.core.pop_tail.call(null, coll, this__9069.shift, this__9069.root);
          var new_root__9072 = nr__9071 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9071;
          var cnt_1__9073 = this__9069.cnt - 1;
          if(function() {
            var and__3822__auto____9074 = 5 < this__9069.shift;
            if(and__3822__auto____9074) {
              return cljs.core.pv_aget.call(null, new_root__9072, 1) == null
            }else {
              return and__3822__auto____9074
            }
          }()) {
            return new cljs.core.PersistentVector(this__9069.meta, cnt_1__9073, this__9069.shift - 5, cljs.core.pv_aget.call(null, new_root__9072, 0), new_tail__9070, null)
          }else {
            return new cljs.core.PersistentVector(this__9069.meta, cnt_1__9073, this__9069.shift, new_root__9072, new_tail__9070, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9075 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9076 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9077 = this;
  return new cljs.core.PersistentVector(meta, this__9077.cnt, this__9077.shift, this__9077.root, this__9077.tail, this__9077.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9078 = this;
  return this__9078.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9079 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9080 = this;
  if(function() {
    var and__3822__auto____9081 = 0 <= n;
    if(and__3822__auto____9081) {
      return n < this__9080.cnt
    }else {
      return and__3822__auto____9081
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9082 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9082.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9087 = xs.length;
  var xs__9088 = no_clone === true ? xs : xs.slice();
  if(l__9087 < 32) {
    return new cljs.core.PersistentVector(null, l__9087, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9088, null)
  }else {
    var node__9089 = xs__9088.slice(0, 32);
    var v__9090 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9089, null);
    var i__9091 = 32;
    var out__9092 = cljs.core._as_transient.call(null, v__9090);
    while(true) {
      if(i__9091 < l__9087) {
        var G__9093 = i__9091 + 1;
        var G__9094 = cljs.core.conj_BANG_.call(null, out__9092, xs__9088[i__9091]);
        i__9091 = G__9093;
        out__9092 = G__9094;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9092)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9095) {
    var args = cljs.core.seq(arglist__9095);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9096 = this;
  if(this__9096.off + 1 < this__9096.node.length) {
    var s__9097 = cljs.core.chunked_seq.call(null, this__9096.vec, this__9096.node, this__9096.i, this__9096.off + 1);
    if(s__9097 == null) {
      return null
    }else {
      return s__9097
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9098 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9099 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9100 = this;
  return this__9100.node[this__9100.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9101 = this;
  if(this__9101.off + 1 < this__9101.node.length) {
    var s__9102 = cljs.core.chunked_seq.call(null, this__9101.vec, this__9101.node, this__9101.i, this__9101.off + 1);
    if(s__9102 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9102
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9103 = this;
  var l__9104 = this__9103.node.length;
  var s__9105 = this__9103.i + l__9104 < cljs.core._count.call(null, this__9103.vec) ? cljs.core.chunked_seq.call(null, this__9103.vec, this__9103.i + l__9104, 0) : null;
  if(s__9105 == null) {
    return null
  }else {
    return s__9105
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9106 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9107 = this;
  return cljs.core.chunked_seq.call(null, this__9107.vec, this__9107.node, this__9107.i, this__9107.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9108 = this;
  return this__9108.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9109 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9109.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9110 = this;
  return cljs.core.array_chunk.call(null, this__9110.node, this__9110.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9111 = this;
  var l__9112 = this__9111.node.length;
  var s__9113 = this__9111.i + l__9112 < cljs.core._count.call(null, this__9111.vec) ? cljs.core.chunked_seq.call(null, this__9111.vec, this__9111.i + l__9112, 0) : null;
  if(s__9113 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9113
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9116 = this;
  var h__2192__auto____9117 = this__9116.__hash;
  if(!(h__2192__auto____9117 == null)) {
    return h__2192__auto____9117
  }else {
    var h__2192__auto____9118 = cljs.core.hash_coll.call(null, coll);
    this__9116.__hash = h__2192__auto____9118;
    return h__2192__auto____9118
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9119 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9120 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9121 = this;
  var v_pos__9122 = this__9121.start + key;
  return new cljs.core.Subvec(this__9121.meta, cljs.core._assoc.call(null, this__9121.v, v_pos__9122, val), this__9121.start, this__9121.end > v_pos__9122 + 1 ? this__9121.end : v_pos__9122 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9148 = null;
  var G__9148__2 = function(this_sym9123, k) {
    var this__9125 = this;
    var this_sym9123__9126 = this;
    var coll__9127 = this_sym9123__9126;
    return coll__9127.cljs$core$ILookup$_lookup$arity$2(coll__9127, k)
  };
  var G__9148__3 = function(this_sym9124, k, not_found) {
    var this__9125 = this;
    var this_sym9124__9128 = this;
    var coll__9129 = this_sym9124__9128;
    return coll__9129.cljs$core$ILookup$_lookup$arity$3(coll__9129, k, not_found)
  };
  G__9148 = function(this_sym9124, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9148__2.call(this, this_sym9124, k);
      case 3:
        return G__9148__3.call(this, this_sym9124, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9148
}();
cljs.core.Subvec.prototype.apply = function(this_sym9114, args9115) {
  var this__9130 = this;
  return this_sym9114.call.apply(this_sym9114, [this_sym9114].concat(args9115.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9131 = this;
  return new cljs.core.Subvec(this__9131.meta, cljs.core._assoc_n.call(null, this__9131.v, this__9131.end, o), this__9131.start, this__9131.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9132 = this;
  var this__9133 = this;
  return cljs.core.pr_str.call(null, this__9133)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9134 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9135 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9136 = this;
  var subvec_seq__9137 = function subvec_seq(i) {
    if(i === this__9136.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9136.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9137.call(null, this__9136.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9138 = this;
  return this__9138.end - this__9138.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9139 = this;
  return cljs.core._nth.call(null, this__9139.v, this__9139.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9140 = this;
  if(this__9140.start === this__9140.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9140.meta, this__9140.v, this__9140.start, this__9140.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9141 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9142 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9143 = this;
  return new cljs.core.Subvec(meta, this__9143.v, this__9143.start, this__9143.end, this__9143.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9144 = this;
  return this__9144.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9145 = this;
  return cljs.core._nth.call(null, this__9145.v, this__9145.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9146 = this;
  return cljs.core._nth.call(null, this__9146.v, this__9146.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9147 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9147.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9150 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9150, 0, tl.length);
  return ret__9150
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9154 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9155 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9154, subidx__9155, level === 5 ? tail_node : function() {
    var child__9156 = cljs.core.pv_aget.call(null, ret__9154, subidx__9155);
    if(!(child__9156 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9156, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9154
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9161 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9162 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9163 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9161, subidx__9162));
    if(function() {
      var and__3822__auto____9164 = new_child__9163 == null;
      if(and__3822__auto____9164) {
        return subidx__9162 === 0
      }else {
        return and__3822__auto____9164
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9161, subidx__9162, new_child__9163);
      return node__9161
    }
  }else {
    if(subidx__9162 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9161, subidx__9162, null);
        return node__9161
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____9169 = 0 <= i;
    if(and__3822__auto____9169) {
      return i < tv.cnt
    }else {
      return and__3822__auto____9169
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9170 = tv.root;
      var node__9171 = root__9170;
      var level__9172 = tv.shift;
      while(true) {
        if(level__9172 > 0) {
          var G__9173 = cljs.core.tv_ensure_editable.call(null, root__9170.edit, cljs.core.pv_aget.call(null, node__9171, i >>> level__9172 & 31));
          var G__9174 = level__9172 - 5;
          node__9171 = G__9173;
          level__9172 = G__9174;
          continue
        }else {
          return node__9171.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9214 = null;
  var G__9214__2 = function(this_sym9177, k) {
    var this__9179 = this;
    var this_sym9177__9180 = this;
    var coll__9181 = this_sym9177__9180;
    return coll__9181.cljs$core$ILookup$_lookup$arity$2(coll__9181, k)
  };
  var G__9214__3 = function(this_sym9178, k, not_found) {
    var this__9179 = this;
    var this_sym9178__9182 = this;
    var coll__9183 = this_sym9178__9182;
    return coll__9183.cljs$core$ILookup$_lookup$arity$3(coll__9183, k, not_found)
  };
  G__9214 = function(this_sym9178, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9214__2.call(this, this_sym9178, k);
      case 3:
        return G__9214__3.call(this, this_sym9178, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9214
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9175, args9176) {
  var this__9184 = this;
  return this_sym9175.call.apply(this_sym9175, [this_sym9175].concat(args9176.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9185 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9186 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9187 = this;
  if(this__9187.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9188 = this;
  if(function() {
    var and__3822__auto____9189 = 0 <= n;
    if(and__3822__auto____9189) {
      return n < this__9188.cnt
    }else {
      return and__3822__auto____9189
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9190 = this;
  if(this__9190.root.edit) {
    return this__9190.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9191 = this;
  if(this__9191.root.edit) {
    if(function() {
      var and__3822__auto____9192 = 0 <= n;
      if(and__3822__auto____9192) {
        return n < this__9191.cnt
      }else {
        return and__3822__auto____9192
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9191.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9197 = function go(level, node) {
          var node__9195 = cljs.core.tv_ensure_editable.call(null, this__9191.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9195, n & 31, val);
            return node__9195
          }else {
            var subidx__9196 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9195, subidx__9196, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9195, subidx__9196)));
            return node__9195
          }
        }.call(null, this__9191.shift, this__9191.root);
        this__9191.root = new_root__9197;
        return tcoll
      }
    }else {
      if(n === this__9191.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9191.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9198 = this;
  if(this__9198.root.edit) {
    if(this__9198.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9198.cnt) {
        this__9198.cnt = 0;
        return tcoll
      }else {
        if((this__9198.cnt - 1 & 31) > 0) {
          this__9198.cnt = this__9198.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9199 = cljs.core.editable_array_for.call(null, tcoll, this__9198.cnt - 2);
            var new_root__9201 = function() {
              var nr__9200 = cljs.core.tv_pop_tail.call(null, tcoll, this__9198.shift, this__9198.root);
              if(!(nr__9200 == null)) {
                return nr__9200
              }else {
                return new cljs.core.VectorNode(this__9198.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____9202 = 5 < this__9198.shift;
              if(and__3822__auto____9202) {
                return cljs.core.pv_aget.call(null, new_root__9201, 1) == null
              }else {
                return and__3822__auto____9202
              }
            }()) {
              var new_root__9203 = cljs.core.tv_ensure_editable.call(null, this__9198.root.edit, cljs.core.pv_aget.call(null, new_root__9201, 0));
              this__9198.root = new_root__9203;
              this__9198.shift = this__9198.shift - 5;
              this__9198.cnt = this__9198.cnt - 1;
              this__9198.tail = new_tail__9199;
              return tcoll
            }else {
              this__9198.root = new_root__9201;
              this__9198.cnt = this__9198.cnt - 1;
              this__9198.tail = new_tail__9199;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9204 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9205 = this;
  if(this__9205.root.edit) {
    if(this__9205.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9205.tail[this__9205.cnt & 31] = o;
      this__9205.cnt = this__9205.cnt + 1;
      return tcoll
    }else {
      var tail_node__9206 = new cljs.core.VectorNode(this__9205.root.edit, this__9205.tail);
      var new_tail__9207 = cljs.core.make_array.call(null, 32);
      new_tail__9207[0] = o;
      this__9205.tail = new_tail__9207;
      if(this__9205.cnt >>> 5 > 1 << this__9205.shift) {
        var new_root_array__9208 = cljs.core.make_array.call(null, 32);
        var new_shift__9209 = this__9205.shift + 5;
        new_root_array__9208[0] = this__9205.root;
        new_root_array__9208[1] = cljs.core.new_path.call(null, this__9205.root.edit, this__9205.shift, tail_node__9206);
        this__9205.root = new cljs.core.VectorNode(this__9205.root.edit, new_root_array__9208);
        this__9205.shift = new_shift__9209;
        this__9205.cnt = this__9205.cnt + 1;
        return tcoll
      }else {
        var new_root__9210 = cljs.core.tv_push_tail.call(null, tcoll, this__9205.shift, this__9205.root, tail_node__9206);
        this__9205.root = new_root__9210;
        this__9205.cnt = this__9205.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9211 = this;
  if(this__9211.root.edit) {
    this__9211.root.edit = null;
    var len__9212 = this__9211.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9213 = cljs.core.make_array.call(null, len__9212);
    cljs.core.array_copy.call(null, this__9211.tail, 0, trimmed_tail__9213, 0, len__9212);
    return new cljs.core.PersistentVector(null, this__9211.cnt, this__9211.shift, this__9211.root, trimmed_tail__9213, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9215 = this;
  var h__2192__auto____9216 = this__9215.__hash;
  if(!(h__2192__auto____9216 == null)) {
    return h__2192__auto____9216
  }else {
    var h__2192__auto____9217 = cljs.core.hash_coll.call(null, coll);
    this__9215.__hash = h__2192__auto____9217;
    return h__2192__auto____9217
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9218 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9219 = this;
  var this__9220 = this;
  return cljs.core.pr_str.call(null, this__9220)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9221 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9222 = this;
  return cljs.core._first.call(null, this__9222.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9223 = this;
  var temp__3971__auto____9224 = cljs.core.next.call(null, this__9223.front);
  if(temp__3971__auto____9224) {
    var f1__9225 = temp__3971__auto____9224;
    return new cljs.core.PersistentQueueSeq(this__9223.meta, f1__9225, this__9223.rear, null)
  }else {
    if(this__9223.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9223.meta, this__9223.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9226 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9227 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9227.front, this__9227.rear, this__9227.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9228 = this;
  return this__9228.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9229 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9229.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9230 = this;
  var h__2192__auto____9231 = this__9230.__hash;
  if(!(h__2192__auto____9231 == null)) {
    return h__2192__auto____9231
  }else {
    var h__2192__auto____9232 = cljs.core.hash_coll.call(null, coll);
    this__9230.__hash = h__2192__auto____9232;
    return h__2192__auto____9232
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9233 = this;
  if(cljs.core.truth_(this__9233.front)) {
    return new cljs.core.PersistentQueue(this__9233.meta, this__9233.count + 1, this__9233.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____9234 = this__9233.rear;
      if(cljs.core.truth_(or__3824__auto____9234)) {
        return or__3824__auto____9234
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9233.meta, this__9233.count + 1, cljs.core.conj.call(null, this__9233.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9235 = this;
  var this__9236 = this;
  return cljs.core.pr_str.call(null, this__9236)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9237 = this;
  var rear__9238 = cljs.core.seq.call(null, this__9237.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____9239 = this__9237.front;
    if(cljs.core.truth_(or__3824__auto____9239)) {
      return or__3824__auto____9239
    }else {
      return rear__9238
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9237.front, cljs.core.seq.call(null, rear__9238), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9240 = this;
  return this__9240.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9241 = this;
  return cljs.core._first.call(null, this__9241.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9242 = this;
  if(cljs.core.truth_(this__9242.front)) {
    var temp__3971__auto____9243 = cljs.core.next.call(null, this__9242.front);
    if(temp__3971__auto____9243) {
      var f1__9244 = temp__3971__auto____9243;
      return new cljs.core.PersistentQueue(this__9242.meta, this__9242.count - 1, f1__9244, this__9242.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9242.meta, this__9242.count - 1, cljs.core.seq.call(null, this__9242.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9245 = this;
  return cljs.core.first.call(null, this__9245.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9246 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9247 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9248 = this;
  return new cljs.core.PersistentQueue(meta, this__9248.count, this__9248.front, this__9248.rear, this__9248.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9249 = this;
  return this__9249.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9250 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9251 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9254 = array.length;
  var i__9255 = 0;
  while(true) {
    if(i__9255 < len__9254) {
      if(k === array[i__9255]) {
        return i__9255
      }else {
        var G__9256 = i__9255 + incr;
        i__9255 = G__9256;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9259 = cljs.core.hash.call(null, a);
  var b__9260 = cljs.core.hash.call(null, b);
  if(a__9259 < b__9260) {
    return-1
  }else {
    if(a__9259 > b__9260) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9268 = m.keys;
  var len__9269 = ks__9268.length;
  var so__9270 = m.strobj;
  var out__9271 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9272 = 0;
  var out__9273 = cljs.core.transient$.call(null, out__9271);
  while(true) {
    if(i__9272 < len__9269) {
      var k__9274 = ks__9268[i__9272];
      var G__9275 = i__9272 + 1;
      var G__9276 = cljs.core.assoc_BANG_.call(null, out__9273, k__9274, so__9270[k__9274]);
      i__9272 = G__9275;
      out__9273 = G__9276;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9273, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9282 = {};
  var l__9283 = ks.length;
  var i__9284 = 0;
  while(true) {
    if(i__9284 < l__9283) {
      var k__9285 = ks[i__9284];
      new_obj__9282[k__9285] = obj[k__9285];
      var G__9286 = i__9284 + 1;
      i__9284 = G__9286;
      continue
    }else {
    }
    break
  }
  return new_obj__9282
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9289 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9290 = this;
  var h__2192__auto____9291 = this__9290.__hash;
  if(!(h__2192__auto____9291 == null)) {
    return h__2192__auto____9291
  }else {
    var h__2192__auto____9292 = cljs.core.hash_imap.call(null, coll);
    this__9290.__hash = h__2192__auto____9292;
    return h__2192__auto____9292
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9293 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9294 = this;
  if(function() {
    var and__3822__auto____9295 = goog.isString(k);
    if(and__3822__auto____9295) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9294.keys) == null)
    }else {
      return and__3822__auto____9295
    }
  }()) {
    return this__9294.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9296 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____9297 = this__9296.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____9297) {
        return or__3824__auto____9297
      }else {
        return this__9296.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9296.keys) == null)) {
        var new_strobj__9298 = cljs.core.obj_clone.call(null, this__9296.strobj, this__9296.keys);
        new_strobj__9298[k] = v;
        return new cljs.core.ObjMap(this__9296.meta, this__9296.keys, new_strobj__9298, this__9296.update_count + 1, null)
      }else {
        var new_strobj__9299 = cljs.core.obj_clone.call(null, this__9296.strobj, this__9296.keys);
        var new_keys__9300 = this__9296.keys.slice();
        new_strobj__9299[k] = v;
        new_keys__9300.push(k);
        return new cljs.core.ObjMap(this__9296.meta, new_keys__9300, new_strobj__9299, this__9296.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9301 = this;
  if(function() {
    var and__3822__auto____9302 = goog.isString(k);
    if(and__3822__auto____9302) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9301.keys) == null)
    }else {
      return and__3822__auto____9302
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9324 = null;
  var G__9324__2 = function(this_sym9303, k) {
    var this__9305 = this;
    var this_sym9303__9306 = this;
    var coll__9307 = this_sym9303__9306;
    return coll__9307.cljs$core$ILookup$_lookup$arity$2(coll__9307, k)
  };
  var G__9324__3 = function(this_sym9304, k, not_found) {
    var this__9305 = this;
    var this_sym9304__9308 = this;
    var coll__9309 = this_sym9304__9308;
    return coll__9309.cljs$core$ILookup$_lookup$arity$3(coll__9309, k, not_found)
  };
  G__9324 = function(this_sym9304, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9324__2.call(this, this_sym9304, k);
      case 3:
        return G__9324__3.call(this, this_sym9304, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9324
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9287, args9288) {
  var this__9310 = this;
  return this_sym9287.call.apply(this_sym9287, [this_sym9287].concat(args9288.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9311 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9312 = this;
  var this__9313 = this;
  return cljs.core.pr_str.call(null, this__9313)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9314 = this;
  if(this__9314.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9277_SHARP_) {
      return cljs.core.vector.call(null, p1__9277_SHARP_, this__9314.strobj[p1__9277_SHARP_])
    }, this__9314.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9315 = this;
  return this__9315.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9316 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9317 = this;
  return new cljs.core.ObjMap(meta, this__9317.keys, this__9317.strobj, this__9317.update_count, this__9317.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9318 = this;
  return this__9318.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9319 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9319.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9320 = this;
  if(function() {
    var and__3822__auto____9321 = goog.isString(k);
    if(and__3822__auto____9321) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9320.keys) == null)
    }else {
      return and__3822__auto____9321
    }
  }()) {
    var new_keys__9322 = this__9320.keys.slice();
    var new_strobj__9323 = cljs.core.obj_clone.call(null, this__9320.strobj, this__9320.keys);
    new_keys__9322.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9322), 1);
    cljs.core.js_delete.call(null, new_strobj__9323, k);
    return new cljs.core.ObjMap(this__9320.meta, new_keys__9322, new_strobj__9323, this__9320.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9328 = this;
  var h__2192__auto____9329 = this__9328.__hash;
  if(!(h__2192__auto____9329 == null)) {
    return h__2192__auto____9329
  }else {
    var h__2192__auto____9330 = cljs.core.hash_imap.call(null, coll);
    this__9328.__hash = h__2192__auto____9330;
    return h__2192__auto____9330
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9331 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9332 = this;
  var bucket__9333 = this__9332.hashobj[cljs.core.hash.call(null, k)];
  var i__9334 = cljs.core.truth_(bucket__9333) ? cljs.core.scan_array.call(null, 2, k, bucket__9333) : null;
  if(cljs.core.truth_(i__9334)) {
    return bucket__9333[i__9334 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9335 = this;
  var h__9336 = cljs.core.hash.call(null, k);
  var bucket__9337 = this__9335.hashobj[h__9336];
  if(cljs.core.truth_(bucket__9337)) {
    var new_bucket__9338 = bucket__9337.slice();
    var new_hashobj__9339 = goog.object.clone(this__9335.hashobj);
    new_hashobj__9339[h__9336] = new_bucket__9338;
    var temp__3971__auto____9340 = cljs.core.scan_array.call(null, 2, k, new_bucket__9338);
    if(cljs.core.truth_(temp__3971__auto____9340)) {
      var i__9341 = temp__3971__auto____9340;
      new_bucket__9338[i__9341 + 1] = v;
      return new cljs.core.HashMap(this__9335.meta, this__9335.count, new_hashobj__9339, null)
    }else {
      new_bucket__9338.push(k, v);
      return new cljs.core.HashMap(this__9335.meta, this__9335.count + 1, new_hashobj__9339, null)
    }
  }else {
    var new_hashobj__9342 = goog.object.clone(this__9335.hashobj);
    new_hashobj__9342[h__9336] = [k, v];
    return new cljs.core.HashMap(this__9335.meta, this__9335.count + 1, new_hashobj__9342, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9343 = this;
  var bucket__9344 = this__9343.hashobj[cljs.core.hash.call(null, k)];
  var i__9345 = cljs.core.truth_(bucket__9344) ? cljs.core.scan_array.call(null, 2, k, bucket__9344) : null;
  if(cljs.core.truth_(i__9345)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__9370 = null;
  var G__9370__2 = function(this_sym9346, k) {
    var this__9348 = this;
    var this_sym9346__9349 = this;
    var coll__9350 = this_sym9346__9349;
    return coll__9350.cljs$core$ILookup$_lookup$arity$2(coll__9350, k)
  };
  var G__9370__3 = function(this_sym9347, k, not_found) {
    var this__9348 = this;
    var this_sym9347__9351 = this;
    var coll__9352 = this_sym9347__9351;
    return coll__9352.cljs$core$ILookup$_lookup$arity$3(coll__9352, k, not_found)
  };
  G__9370 = function(this_sym9347, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9370__2.call(this, this_sym9347, k);
      case 3:
        return G__9370__3.call(this, this_sym9347, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9370
}();
cljs.core.HashMap.prototype.apply = function(this_sym9326, args9327) {
  var this__9353 = this;
  return this_sym9326.call.apply(this_sym9326, [this_sym9326].concat(args9327.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9354 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__9355 = this;
  var this__9356 = this;
  return cljs.core.pr_str.call(null, this__9356)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9357 = this;
  if(this__9357.count > 0) {
    var hashes__9358 = cljs.core.js_keys.call(null, this__9357.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9325_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__9357.hashobj[p1__9325_SHARP_]))
    }, hashes__9358)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9359 = this;
  return this__9359.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9360 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9361 = this;
  return new cljs.core.HashMap(meta, this__9361.count, this__9361.hashobj, this__9361.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9362 = this;
  return this__9362.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9363 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__9363.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9364 = this;
  var h__9365 = cljs.core.hash.call(null, k);
  var bucket__9366 = this__9364.hashobj[h__9365];
  var i__9367 = cljs.core.truth_(bucket__9366) ? cljs.core.scan_array.call(null, 2, k, bucket__9366) : null;
  if(cljs.core.not.call(null, i__9367)) {
    return coll
  }else {
    var new_hashobj__9368 = goog.object.clone(this__9364.hashobj);
    if(3 > bucket__9366.length) {
      cljs.core.js_delete.call(null, new_hashobj__9368, h__9365)
    }else {
      var new_bucket__9369 = bucket__9366.slice();
      new_bucket__9369.splice(i__9367, 2);
      new_hashobj__9368[h__9365] = new_bucket__9369
    }
    return new cljs.core.HashMap(this__9364.meta, this__9364.count - 1, new_hashobj__9368, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__9371 = ks.length;
  var i__9372 = 0;
  var out__9373 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__9372 < len__9371) {
      var G__9374 = i__9372 + 1;
      var G__9375 = cljs.core.assoc.call(null, out__9373, ks[i__9372], vs[i__9372]);
      i__9372 = G__9374;
      out__9373 = G__9375;
      continue
    }else {
      return out__9373
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__9379 = m.arr;
  var len__9380 = arr__9379.length;
  var i__9381 = 0;
  while(true) {
    if(len__9380 <= i__9381) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__9379[i__9381], k)) {
        return i__9381
      }else {
        if("\ufdd0'else") {
          var G__9382 = i__9381 + 2;
          i__9381 = G__9382;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9385 = this;
  return new cljs.core.TransientArrayMap({}, this__9385.arr.length, this__9385.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9386 = this;
  var h__2192__auto____9387 = this__9386.__hash;
  if(!(h__2192__auto____9387 == null)) {
    return h__2192__auto____9387
  }else {
    var h__2192__auto____9388 = cljs.core.hash_imap.call(null, coll);
    this__9386.__hash = h__2192__auto____9388;
    return h__2192__auto____9388
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9389 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9390 = this;
  var idx__9391 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9391 === -1) {
    return not_found
  }else {
    return this__9390.arr[idx__9391 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9392 = this;
  var idx__9393 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9393 === -1) {
    if(this__9392.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__9392.meta, this__9392.cnt + 1, function() {
        var G__9394__9395 = this__9392.arr.slice();
        G__9394__9395.push(k);
        G__9394__9395.push(v);
        return G__9394__9395
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__9392.arr[idx__9393 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__9392.meta, this__9392.cnt, function() {
          var G__9396__9397 = this__9392.arr.slice();
          G__9396__9397[idx__9393 + 1] = v;
          return G__9396__9397
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9398 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9430 = null;
  var G__9430__2 = function(this_sym9399, k) {
    var this__9401 = this;
    var this_sym9399__9402 = this;
    var coll__9403 = this_sym9399__9402;
    return coll__9403.cljs$core$ILookup$_lookup$arity$2(coll__9403, k)
  };
  var G__9430__3 = function(this_sym9400, k, not_found) {
    var this__9401 = this;
    var this_sym9400__9404 = this;
    var coll__9405 = this_sym9400__9404;
    return coll__9405.cljs$core$ILookup$_lookup$arity$3(coll__9405, k, not_found)
  };
  G__9430 = function(this_sym9400, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9430__2.call(this, this_sym9400, k);
      case 3:
        return G__9430__3.call(this, this_sym9400, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9430
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym9383, args9384) {
  var this__9406 = this;
  return this_sym9383.call.apply(this_sym9383, [this_sym9383].concat(args9384.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9407 = this;
  var len__9408 = this__9407.arr.length;
  var i__9409 = 0;
  var init__9410 = init;
  while(true) {
    if(i__9409 < len__9408) {
      var init__9411 = f.call(null, init__9410, this__9407.arr[i__9409], this__9407.arr[i__9409 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__9411)) {
        return cljs.core.deref.call(null, init__9411)
      }else {
        var G__9431 = i__9409 + 2;
        var G__9432 = init__9411;
        i__9409 = G__9431;
        init__9410 = G__9432;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9412 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__9413 = this;
  var this__9414 = this;
  return cljs.core.pr_str.call(null, this__9414)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9415 = this;
  if(this__9415.cnt > 0) {
    var len__9416 = this__9415.arr.length;
    var array_map_seq__9417 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__9416) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__9415.arr[i], this__9415.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__9417.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9418 = this;
  return this__9418.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9419 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9420 = this;
  return new cljs.core.PersistentArrayMap(meta, this__9420.cnt, this__9420.arr, this__9420.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9421 = this;
  return this__9421.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9422 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9422.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9423 = this;
  var idx__9424 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9424 >= 0) {
    var len__9425 = this__9423.arr.length;
    var new_len__9426 = len__9425 - 2;
    if(new_len__9426 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__9427 = cljs.core.make_array.call(null, new_len__9426);
      var s__9428 = 0;
      var d__9429 = 0;
      while(true) {
        if(s__9428 >= len__9425) {
          return new cljs.core.PersistentArrayMap(this__9423.meta, this__9423.cnt - 1, new_arr__9427, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__9423.arr[s__9428])) {
            var G__9433 = s__9428 + 2;
            var G__9434 = d__9429;
            s__9428 = G__9433;
            d__9429 = G__9434;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__9427[d__9429] = this__9423.arr[s__9428];
              new_arr__9427[d__9429 + 1] = this__9423.arr[s__9428 + 1];
              var G__9435 = s__9428 + 2;
              var G__9436 = d__9429 + 2;
              s__9428 = G__9435;
              d__9429 = G__9436;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__9437 = cljs.core.count.call(null, ks);
  var i__9438 = 0;
  var out__9439 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__9438 < len__9437) {
      var G__9440 = i__9438 + 1;
      var G__9441 = cljs.core.assoc_BANG_.call(null, out__9439, ks[i__9438], vs[i__9438]);
      i__9438 = G__9440;
      out__9439 = G__9441;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9439)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9442 = this;
  if(cljs.core.truth_(this__9442.editable_QMARK_)) {
    var idx__9443 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9443 >= 0) {
      this__9442.arr[idx__9443] = this__9442.arr[this__9442.len - 2];
      this__9442.arr[idx__9443 + 1] = this__9442.arr[this__9442.len - 1];
      var G__9444__9445 = this__9442.arr;
      G__9444__9445.pop();
      G__9444__9445.pop();
      G__9444__9445;
      this__9442.len = this__9442.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9446 = this;
  if(cljs.core.truth_(this__9446.editable_QMARK_)) {
    var idx__9447 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9447 === -1) {
      if(this__9446.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__9446.len = this__9446.len + 2;
        this__9446.arr.push(key);
        this__9446.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__9446.len, this__9446.arr), key, val)
      }
    }else {
      if(val === this__9446.arr[idx__9447 + 1]) {
        return tcoll
      }else {
        this__9446.arr[idx__9447 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9448 = this;
  if(cljs.core.truth_(this__9448.editable_QMARK_)) {
    if(function() {
      var G__9449__9450 = o;
      if(G__9449__9450) {
        if(function() {
          var or__3824__auto____9451 = G__9449__9450.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____9451) {
            return or__3824__auto____9451
          }else {
            return G__9449__9450.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9449__9450.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9449__9450)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9449__9450)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9452 = cljs.core.seq.call(null, o);
      var tcoll__9453 = tcoll;
      while(true) {
        var temp__3971__auto____9454 = cljs.core.first.call(null, es__9452);
        if(cljs.core.truth_(temp__3971__auto____9454)) {
          var e__9455 = temp__3971__auto____9454;
          var G__9461 = cljs.core.next.call(null, es__9452);
          var G__9462 = tcoll__9453.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__9453, cljs.core.key.call(null, e__9455), cljs.core.val.call(null, e__9455));
          es__9452 = G__9461;
          tcoll__9453 = G__9462;
          continue
        }else {
          return tcoll__9453
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9456 = this;
  if(cljs.core.truth_(this__9456.editable_QMARK_)) {
    this__9456.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__9456.len, 2), this__9456.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9457 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9458 = this;
  if(cljs.core.truth_(this__9458.editable_QMARK_)) {
    var idx__9459 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__9459 === -1) {
      return not_found
    }else {
      return this__9458.arr[idx__9459 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__9460 = this;
  if(cljs.core.truth_(this__9460.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__9460.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__9465 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__9466 = 0;
  while(true) {
    if(i__9466 < len) {
      var G__9467 = cljs.core.assoc_BANG_.call(null, out__9465, arr[i__9466], arr[i__9466 + 1]);
      var G__9468 = i__9466 + 2;
      out__9465 = G__9467;
      i__9466 = G__9468;
      continue
    }else {
      return out__9465
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9473__9474 = arr.slice();
    G__9473__9474[i] = a;
    return G__9473__9474
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9475__9476 = arr.slice();
    G__9475__9476[i] = a;
    G__9475__9476[j] = b;
    return G__9475__9476
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__9478 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__9478, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__9478, 2 * i, new_arr__9478.length - 2 * i);
  return new_arr__9478
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__9481 = inode.ensure_editable(edit);
    editable__9481.arr[i] = a;
    return editable__9481
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__9482 = inode.ensure_editable(edit);
    editable__9482.arr[i] = a;
    editable__9482.arr[j] = b;
    return editable__9482
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__9489 = arr.length;
  var i__9490 = 0;
  var init__9491 = init;
  while(true) {
    if(i__9490 < len__9489) {
      var init__9494 = function() {
        var k__9492 = arr[i__9490];
        if(!(k__9492 == null)) {
          return f.call(null, init__9491, k__9492, arr[i__9490 + 1])
        }else {
          var node__9493 = arr[i__9490 + 1];
          if(!(node__9493 == null)) {
            return node__9493.kv_reduce(f, init__9491)
          }else {
            return init__9491
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9494)) {
        return cljs.core.deref.call(null, init__9494)
      }else {
        var G__9495 = i__9490 + 2;
        var G__9496 = init__9494;
        i__9490 = G__9495;
        init__9491 = G__9496;
        continue
      }
    }else {
      return init__9491
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__9497 = this;
  var inode__9498 = this;
  if(this__9497.bitmap === bit) {
    return null
  }else {
    var editable__9499 = inode__9498.ensure_editable(e);
    var earr__9500 = editable__9499.arr;
    var len__9501 = earr__9500.length;
    editable__9499.bitmap = bit ^ editable__9499.bitmap;
    cljs.core.array_copy.call(null, earr__9500, 2 * (i + 1), earr__9500, 2 * i, len__9501 - 2 * (i + 1));
    earr__9500[len__9501 - 2] = null;
    earr__9500[len__9501 - 1] = null;
    return editable__9499
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9502 = this;
  var inode__9503 = this;
  var bit__9504 = 1 << (hash >>> shift & 31);
  var idx__9505 = cljs.core.bitmap_indexed_node_index.call(null, this__9502.bitmap, bit__9504);
  if((this__9502.bitmap & bit__9504) === 0) {
    var n__9506 = cljs.core.bit_count.call(null, this__9502.bitmap);
    if(2 * n__9506 < this__9502.arr.length) {
      var editable__9507 = inode__9503.ensure_editable(edit);
      var earr__9508 = editable__9507.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__9508, 2 * idx__9505, earr__9508, 2 * (idx__9505 + 1), 2 * (n__9506 - idx__9505));
      earr__9508[2 * idx__9505] = key;
      earr__9508[2 * idx__9505 + 1] = val;
      editable__9507.bitmap = editable__9507.bitmap | bit__9504;
      return editable__9507
    }else {
      if(n__9506 >= 16) {
        var nodes__9509 = cljs.core.make_array.call(null, 32);
        var jdx__9510 = hash >>> shift & 31;
        nodes__9509[jdx__9510] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__9511 = 0;
        var j__9512 = 0;
        while(true) {
          if(i__9511 < 32) {
            if((this__9502.bitmap >>> i__9511 & 1) === 0) {
              var G__9565 = i__9511 + 1;
              var G__9566 = j__9512;
              i__9511 = G__9565;
              j__9512 = G__9566;
              continue
            }else {
              nodes__9509[i__9511] = !(this__9502.arr[j__9512] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__9502.arr[j__9512]), this__9502.arr[j__9512], this__9502.arr[j__9512 + 1], added_leaf_QMARK_) : this__9502.arr[j__9512 + 1];
              var G__9567 = i__9511 + 1;
              var G__9568 = j__9512 + 2;
              i__9511 = G__9567;
              j__9512 = G__9568;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__9506 + 1, nodes__9509)
      }else {
        if("\ufdd0'else") {
          var new_arr__9513 = cljs.core.make_array.call(null, 2 * (n__9506 + 4));
          cljs.core.array_copy.call(null, this__9502.arr, 0, new_arr__9513, 0, 2 * idx__9505);
          new_arr__9513[2 * idx__9505] = key;
          new_arr__9513[2 * idx__9505 + 1] = val;
          cljs.core.array_copy.call(null, this__9502.arr, 2 * idx__9505, new_arr__9513, 2 * (idx__9505 + 1), 2 * (n__9506 - idx__9505));
          added_leaf_QMARK_.val = true;
          var editable__9514 = inode__9503.ensure_editable(edit);
          editable__9514.arr = new_arr__9513;
          editable__9514.bitmap = editable__9514.bitmap | bit__9504;
          return editable__9514
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__9515 = this__9502.arr[2 * idx__9505];
    var val_or_node__9516 = this__9502.arr[2 * idx__9505 + 1];
    if(key_or_nil__9515 == null) {
      var n__9517 = val_or_node__9516.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9517 === val_or_node__9516) {
        return inode__9503
      }else {
        return cljs.core.edit_and_set.call(null, inode__9503, edit, 2 * idx__9505 + 1, n__9517)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9515)) {
        if(val === val_or_node__9516) {
          return inode__9503
        }else {
          return cljs.core.edit_and_set.call(null, inode__9503, edit, 2 * idx__9505 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__9503, edit, 2 * idx__9505, null, 2 * idx__9505 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__9515, val_or_node__9516, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__9518 = this;
  var inode__9519 = this;
  return cljs.core.create_inode_seq.call(null, this__9518.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9520 = this;
  var inode__9521 = this;
  var bit__9522 = 1 << (hash >>> shift & 31);
  if((this__9520.bitmap & bit__9522) === 0) {
    return inode__9521
  }else {
    var idx__9523 = cljs.core.bitmap_indexed_node_index.call(null, this__9520.bitmap, bit__9522);
    var key_or_nil__9524 = this__9520.arr[2 * idx__9523];
    var val_or_node__9525 = this__9520.arr[2 * idx__9523 + 1];
    if(key_or_nil__9524 == null) {
      var n__9526 = val_or_node__9525.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__9526 === val_or_node__9525) {
        return inode__9521
      }else {
        if(!(n__9526 == null)) {
          return cljs.core.edit_and_set.call(null, inode__9521, edit, 2 * idx__9523 + 1, n__9526)
        }else {
          if(this__9520.bitmap === bit__9522) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__9521.edit_and_remove_pair(edit, bit__9522, idx__9523)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9524)) {
        removed_leaf_QMARK_[0] = true;
        return inode__9521.edit_and_remove_pair(edit, bit__9522, idx__9523)
      }else {
        if("\ufdd0'else") {
          return inode__9521
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__9527 = this;
  var inode__9528 = this;
  if(e === this__9527.edit) {
    return inode__9528
  }else {
    var n__9529 = cljs.core.bit_count.call(null, this__9527.bitmap);
    var new_arr__9530 = cljs.core.make_array.call(null, n__9529 < 0 ? 4 : 2 * (n__9529 + 1));
    cljs.core.array_copy.call(null, this__9527.arr, 0, new_arr__9530, 0, 2 * n__9529);
    return new cljs.core.BitmapIndexedNode(e, this__9527.bitmap, new_arr__9530)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__9531 = this;
  var inode__9532 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9531.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9533 = this;
  var inode__9534 = this;
  var bit__9535 = 1 << (hash >>> shift & 31);
  if((this__9533.bitmap & bit__9535) === 0) {
    return not_found
  }else {
    var idx__9536 = cljs.core.bitmap_indexed_node_index.call(null, this__9533.bitmap, bit__9535);
    var key_or_nil__9537 = this__9533.arr[2 * idx__9536];
    var val_or_node__9538 = this__9533.arr[2 * idx__9536 + 1];
    if(key_or_nil__9537 == null) {
      return val_or_node__9538.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9537)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__9537, val_or_node__9538], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__9539 = this;
  var inode__9540 = this;
  var bit__9541 = 1 << (hash >>> shift & 31);
  if((this__9539.bitmap & bit__9541) === 0) {
    return inode__9540
  }else {
    var idx__9542 = cljs.core.bitmap_indexed_node_index.call(null, this__9539.bitmap, bit__9541);
    var key_or_nil__9543 = this__9539.arr[2 * idx__9542];
    var val_or_node__9544 = this__9539.arr[2 * idx__9542 + 1];
    if(key_or_nil__9543 == null) {
      var n__9545 = val_or_node__9544.inode_without(shift + 5, hash, key);
      if(n__9545 === val_or_node__9544) {
        return inode__9540
      }else {
        if(!(n__9545 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__9539.bitmap, cljs.core.clone_and_set.call(null, this__9539.arr, 2 * idx__9542 + 1, n__9545))
        }else {
          if(this__9539.bitmap === bit__9541) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__9539.bitmap ^ bit__9541, cljs.core.remove_pair.call(null, this__9539.arr, idx__9542))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9543)) {
        return new cljs.core.BitmapIndexedNode(null, this__9539.bitmap ^ bit__9541, cljs.core.remove_pair.call(null, this__9539.arr, idx__9542))
      }else {
        if("\ufdd0'else") {
          return inode__9540
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9546 = this;
  var inode__9547 = this;
  var bit__9548 = 1 << (hash >>> shift & 31);
  var idx__9549 = cljs.core.bitmap_indexed_node_index.call(null, this__9546.bitmap, bit__9548);
  if((this__9546.bitmap & bit__9548) === 0) {
    var n__9550 = cljs.core.bit_count.call(null, this__9546.bitmap);
    if(n__9550 >= 16) {
      var nodes__9551 = cljs.core.make_array.call(null, 32);
      var jdx__9552 = hash >>> shift & 31;
      nodes__9551[jdx__9552] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__9553 = 0;
      var j__9554 = 0;
      while(true) {
        if(i__9553 < 32) {
          if((this__9546.bitmap >>> i__9553 & 1) === 0) {
            var G__9569 = i__9553 + 1;
            var G__9570 = j__9554;
            i__9553 = G__9569;
            j__9554 = G__9570;
            continue
          }else {
            nodes__9551[i__9553] = !(this__9546.arr[j__9554] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__9546.arr[j__9554]), this__9546.arr[j__9554], this__9546.arr[j__9554 + 1], added_leaf_QMARK_) : this__9546.arr[j__9554 + 1];
            var G__9571 = i__9553 + 1;
            var G__9572 = j__9554 + 2;
            i__9553 = G__9571;
            j__9554 = G__9572;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__9550 + 1, nodes__9551)
    }else {
      var new_arr__9555 = cljs.core.make_array.call(null, 2 * (n__9550 + 1));
      cljs.core.array_copy.call(null, this__9546.arr, 0, new_arr__9555, 0, 2 * idx__9549);
      new_arr__9555[2 * idx__9549] = key;
      new_arr__9555[2 * idx__9549 + 1] = val;
      cljs.core.array_copy.call(null, this__9546.arr, 2 * idx__9549, new_arr__9555, 2 * (idx__9549 + 1), 2 * (n__9550 - idx__9549));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__9546.bitmap | bit__9548, new_arr__9555)
    }
  }else {
    var key_or_nil__9556 = this__9546.arr[2 * idx__9549];
    var val_or_node__9557 = this__9546.arr[2 * idx__9549 + 1];
    if(key_or_nil__9556 == null) {
      var n__9558 = val_or_node__9557.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9558 === val_or_node__9557) {
        return inode__9547
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__9546.bitmap, cljs.core.clone_and_set.call(null, this__9546.arr, 2 * idx__9549 + 1, n__9558))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9556)) {
        if(val === val_or_node__9557) {
          return inode__9547
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__9546.bitmap, cljs.core.clone_and_set.call(null, this__9546.arr, 2 * idx__9549 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__9546.bitmap, cljs.core.clone_and_set.call(null, this__9546.arr, 2 * idx__9549, null, 2 * idx__9549 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__9556, val_or_node__9557, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9559 = this;
  var inode__9560 = this;
  var bit__9561 = 1 << (hash >>> shift & 31);
  if((this__9559.bitmap & bit__9561) === 0) {
    return not_found
  }else {
    var idx__9562 = cljs.core.bitmap_indexed_node_index.call(null, this__9559.bitmap, bit__9561);
    var key_or_nil__9563 = this__9559.arr[2 * idx__9562];
    var val_or_node__9564 = this__9559.arr[2 * idx__9562 + 1];
    if(key_or_nil__9563 == null) {
      return val_or_node__9564.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9563)) {
        return val_or_node__9564
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__9580 = array_node.arr;
  var len__9581 = 2 * (array_node.cnt - 1);
  var new_arr__9582 = cljs.core.make_array.call(null, len__9581);
  var i__9583 = 0;
  var j__9584 = 1;
  var bitmap__9585 = 0;
  while(true) {
    if(i__9583 < len__9581) {
      if(function() {
        var and__3822__auto____9586 = !(i__9583 === idx);
        if(and__3822__auto____9586) {
          return!(arr__9580[i__9583] == null)
        }else {
          return and__3822__auto____9586
        }
      }()) {
        new_arr__9582[j__9584] = arr__9580[i__9583];
        var G__9587 = i__9583 + 1;
        var G__9588 = j__9584 + 2;
        var G__9589 = bitmap__9585 | 1 << i__9583;
        i__9583 = G__9587;
        j__9584 = G__9588;
        bitmap__9585 = G__9589;
        continue
      }else {
        var G__9590 = i__9583 + 1;
        var G__9591 = j__9584;
        var G__9592 = bitmap__9585;
        i__9583 = G__9590;
        j__9584 = G__9591;
        bitmap__9585 = G__9592;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__9585, new_arr__9582)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9593 = this;
  var inode__9594 = this;
  var idx__9595 = hash >>> shift & 31;
  var node__9596 = this__9593.arr[idx__9595];
  if(node__9596 == null) {
    var editable__9597 = cljs.core.edit_and_set.call(null, inode__9594, edit, idx__9595, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__9597.cnt = editable__9597.cnt + 1;
    return editable__9597
  }else {
    var n__9598 = node__9596.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__9598 === node__9596) {
      return inode__9594
    }else {
      return cljs.core.edit_and_set.call(null, inode__9594, edit, idx__9595, n__9598)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__9599 = this;
  var inode__9600 = this;
  return cljs.core.create_array_node_seq.call(null, this__9599.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9601 = this;
  var inode__9602 = this;
  var idx__9603 = hash >>> shift & 31;
  var node__9604 = this__9601.arr[idx__9603];
  if(node__9604 == null) {
    return inode__9602
  }else {
    var n__9605 = node__9604.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__9605 === node__9604) {
      return inode__9602
    }else {
      if(n__9605 == null) {
        if(this__9601.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__9602, edit, idx__9603)
        }else {
          var editable__9606 = cljs.core.edit_and_set.call(null, inode__9602, edit, idx__9603, n__9605);
          editable__9606.cnt = editable__9606.cnt - 1;
          return editable__9606
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__9602, edit, idx__9603, n__9605)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__9607 = this;
  var inode__9608 = this;
  if(e === this__9607.edit) {
    return inode__9608
  }else {
    return new cljs.core.ArrayNode(e, this__9607.cnt, this__9607.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__9609 = this;
  var inode__9610 = this;
  var len__9611 = this__9609.arr.length;
  var i__9612 = 0;
  var init__9613 = init;
  while(true) {
    if(i__9612 < len__9611) {
      var node__9614 = this__9609.arr[i__9612];
      if(!(node__9614 == null)) {
        var init__9615 = node__9614.kv_reduce(f, init__9613);
        if(cljs.core.reduced_QMARK_.call(null, init__9615)) {
          return cljs.core.deref.call(null, init__9615)
        }else {
          var G__9634 = i__9612 + 1;
          var G__9635 = init__9615;
          i__9612 = G__9634;
          init__9613 = G__9635;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__9613
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9616 = this;
  var inode__9617 = this;
  var idx__9618 = hash >>> shift & 31;
  var node__9619 = this__9616.arr[idx__9618];
  if(!(node__9619 == null)) {
    return node__9619.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__9620 = this;
  var inode__9621 = this;
  var idx__9622 = hash >>> shift & 31;
  var node__9623 = this__9620.arr[idx__9622];
  if(!(node__9623 == null)) {
    var n__9624 = node__9623.inode_without(shift + 5, hash, key);
    if(n__9624 === node__9623) {
      return inode__9621
    }else {
      if(n__9624 == null) {
        if(this__9620.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__9621, null, idx__9622)
        }else {
          return new cljs.core.ArrayNode(null, this__9620.cnt - 1, cljs.core.clone_and_set.call(null, this__9620.arr, idx__9622, n__9624))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__9620.cnt, cljs.core.clone_and_set.call(null, this__9620.arr, idx__9622, n__9624))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__9621
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9625 = this;
  var inode__9626 = this;
  var idx__9627 = hash >>> shift & 31;
  var node__9628 = this__9625.arr[idx__9627];
  if(node__9628 == null) {
    return new cljs.core.ArrayNode(null, this__9625.cnt + 1, cljs.core.clone_and_set.call(null, this__9625.arr, idx__9627, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__9629 = node__9628.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__9629 === node__9628) {
      return inode__9626
    }else {
      return new cljs.core.ArrayNode(null, this__9625.cnt, cljs.core.clone_and_set.call(null, this__9625.arr, idx__9627, n__9629))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9630 = this;
  var inode__9631 = this;
  var idx__9632 = hash >>> shift & 31;
  var node__9633 = this__9630.arr[idx__9632];
  if(!(node__9633 == null)) {
    return node__9633.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__9638 = 2 * cnt;
  var i__9639 = 0;
  while(true) {
    if(i__9639 < lim__9638) {
      if(cljs.core.key_test.call(null, key, arr[i__9639])) {
        return i__9639
      }else {
        var G__9640 = i__9639 + 2;
        i__9639 = G__9640;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9641 = this;
  var inode__9642 = this;
  if(hash === this__9641.collision_hash) {
    var idx__9643 = cljs.core.hash_collision_node_find_index.call(null, this__9641.arr, this__9641.cnt, key);
    if(idx__9643 === -1) {
      if(this__9641.arr.length > 2 * this__9641.cnt) {
        var editable__9644 = cljs.core.edit_and_set.call(null, inode__9642, edit, 2 * this__9641.cnt, key, 2 * this__9641.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__9644.cnt = editable__9644.cnt + 1;
        return editable__9644
      }else {
        var len__9645 = this__9641.arr.length;
        var new_arr__9646 = cljs.core.make_array.call(null, len__9645 + 2);
        cljs.core.array_copy.call(null, this__9641.arr, 0, new_arr__9646, 0, len__9645);
        new_arr__9646[len__9645] = key;
        new_arr__9646[len__9645 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__9642.ensure_editable_array(edit, this__9641.cnt + 1, new_arr__9646)
      }
    }else {
      if(this__9641.arr[idx__9643 + 1] === val) {
        return inode__9642
      }else {
        return cljs.core.edit_and_set.call(null, inode__9642, edit, idx__9643 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__9641.collision_hash >>> shift & 31), [null, inode__9642, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__9647 = this;
  var inode__9648 = this;
  return cljs.core.create_inode_seq.call(null, this__9647.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9649 = this;
  var inode__9650 = this;
  var idx__9651 = cljs.core.hash_collision_node_find_index.call(null, this__9649.arr, this__9649.cnt, key);
  if(idx__9651 === -1) {
    return inode__9650
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__9649.cnt === 1) {
      return null
    }else {
      var editable__9652 = inode__9650.ensure_editable(edit);
      var earr__9653 = editable__9652.arr;
      earr__9653[idx__9651] = earr__9653[2 * this__9649.cnt - 2];
      earr__9653[idx__9651 + 1] = earr__9653[2 * this__9649.cnt - 1];
      earr__9653[2 * this__9649.cnt - 1] = null;
      earr__9653[2 * this__9649.cnt - 2] = null;
      editable__9652.cnt = editable__9652.cnt - 1;
      return editable__9652
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__9654 = this;
  var inode__9655 = this;
  if(e === this__9654.edit) {
    return inode__9655
  }else {
    var new_arr__9656 = cljs.core.make_array.call(null, 2 * (this__9654.cnt + 1));
    cljs.core.array_copy.call(null, this__9654.arr, 0, new_arr__9656, 0, 2 * this__9654.cnt);
    return new cljs.core.HashCollisionNode(e, this__9654.collision_hash, this__9654.cnt, new_arr__9656)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__9657 = this;
  var inode__9658 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9657.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9659 = this;
  var inode__9660 = this;
  var idx__9661 = cljs.core.hash_collision_node_find_index.call(null, this__9659.arr, this__9659.cnt, key);
  if(idx__9661 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__9659.arr[idx__9661])) {
      return cljs.core.PersistentVector.fromArray([this__9659.arr[idx__9661], this__9659.arr[idx__9661 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__9662 = this;
  var inode__9663 = this;
  var idx__9664 = cljs.core.hash_collision_node_find_index.call(null, this__9662.arr, this__9662.cnt, key);
  if(idx__9664 === -1) {
    return inode__9663
  }else {
    if(this__9662.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__9662.collision_hash, this__9662.cnt - 1, cljs.core.remove_pair.call(null, this__9662.arr, cljs.core.quot.call(null, idx__9664, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9665 = this;
  var inode__9666 = this;
  if(hash === this__9665.collision_hash) {
    var idx__9667 = cljs.core.hash_collision_node_find_index.call(null, this__9665.arr, this__9665.cnt, key);
    if(idx__9667 === -1) {
      var len__9668 = this__9665.arr.length;
      var new_arr__9669 = cljs.core.make_array.call(null, len__9668 + 2);
      cljs.core.array_copy.call(null, this__9665.arr, 0, new_arr__9669, 0, len__9668);
      new_arr__9669[len__9668] = key;
      new_arr__9669[len__9668 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__9665.collision_hash, this__9665.cnt + 1, new_arr__9669)
    }else {
      if(cljs.core._EQ_.call(null, this__9665.arr[idx__9667], val)) {
        return inode__9666
      }else {
        return new cljs.core.HashCollisionNode(null, this__9665.collision_hash, this__9665.cnt, cljs.core.clone_and_set.call(null, this__9665.arr, idx__9667 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__9665.collision_hash >>> shift & 31), [null, inode__9666])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9670 = this;
  var inode__9671 = this;
  var idx__9672 = cljs.core.hash_collision_node_find_index.call(null, this__9670.arr, this__9670.cnt, key);
  if(idx__9672 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__9670.arr[idx__9672])) {
      return this__9670.arr[idx__9672 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__9673 = this;
  var inode__9674 = this;
  if(e === this__9673.edit) {
    this__9673.arr = array;
    this__9673.cnt = count;
    return inode__9674
  }else {
    return new cljs.core.HashCollisionNode(this__9673.edit, this__9673.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__9679 = cljs.core.hash.call(null, key1);
    if(key1hash__9679 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__9679, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___9680 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__9679, key1, val1, added_leaf_QMARK___9680).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___9680)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__9681 = cljs.core.hash.call(null, key1);
    if(key1hash__9681 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__9681, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___9682 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__9681, key1, val1, added_leaf_QMARK___9682).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___9682)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9683 = this;
  var h__2192__auto____9684 = this__9683.__hash;
  if(!(h__2192__auto____9684 == null)) {
    return h__2192__auto____9684
  }else {
    var h__2192__auto____9685 = cljs.core.hash_coll.call(null, coll);
    this__9683.__hash = h__2192__auto____9685;
    return h__2192__auto____9685
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9686 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__9687 = this;
  var this__9688 = this;
  return cljs.core.pr_str.call(null, this__9688)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9689 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9690 = this;
  if(this__9690.s == null) {
    return cljs.core.PersistentVector.fromArray([this__9690.nodes[this__9690.i], this__9690.nodes[this__9690.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__9690.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9691 = this;
  if(this__9691.s == null) {
    return cljs.core.create_inode_seq.call(null, this__9691.nodes, this__9691.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__9691.nodes, this__9691.i, cljs.core.next.call(null, this__9691.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9692 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9693 = this;
  return new cljs.core.NodeSeq(meta, this__9693.nodes, this__9693.i, this__9693.s, this__9693.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9694 = this;
  return this__9694.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9695 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9695.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__9702 = nodes.length;
      var j__9703 = i;
      while(true) {
        if(j__9703 < len__9702) {
          if(!(nodes[j__9703] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__9703, null, null)
          }else {
            var temp__3971__auto____9704 = nodes[j__9703 + 1];
            if(cljs.core.truth_(temp__3971__auto____9704)) {
              var node__9705 = temp__3971__auto____9704;
              var temp__3971__auto____9706 = node__9705.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____9706)) {
                var node_seq__9707 = temp__3971__auto____9706;
                return new cljs.core.NodeSeq(null, nodes, j__9703 + 2, node_seq__9707, null)
              }else {
                var G__9708 = j__9703 + 2;
                j__9703 = G__9708;
                continue
              }
            }else {
              var G__9709 = j__9703 + 2;
              j__9703 = G__9709;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9710 = this;
  var h__2192__auto____9711 = this__9710.__hash;
  if(!(h__2192__auto____9711 == null)) {
    return h__2192__auto____9711
  }else {
    var h__2192__auto____9712 = cljs.core.hash_coll.call(null, coll);
    this__9710.__hash = h__2192__auto____9712;
    return h__2192__auto____9712
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9713 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__9714 = this;
  var this__9715 = this;
  return cljs.core.pr_str.call(null, this__9715)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9716 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9717 = this;
  return cljs.core.first.call(null, this__9717.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9718 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__9718.nodes, this__9718.i, cljs.core.next.call(null, this__9718.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9719 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9720 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__9720.nodes, this__9720.i, this__9720.s, this__9720.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9721 = this;
  return this__9721.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9722 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9722.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__9729 = nodes.length;
      var j__9730 = i;
      while(true) {
        if(j__9730 < len__9729) {
          var temp__3971__auto____9731 = nodes[j__9730];
          if(cljs.core.truth_(temp__3971__auto____9731)) {
            var nj__9732 = temp__3971__auto____9731;
            var temp__3971__auto____9733 = nj__9732.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____9733)) {
              var ns__9734 = temp__3971__auto____9733;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__9730 + 1, ns__9734, null)
            }else {
              var G__9735 = j__9730 + 1;
              j__9730 = G__9735;
              continue
            }
          }else {
            var G__9736 = j__9730 + 1;
            j__9730 = G__9736;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9739 = this;
  return new cljs.core.TransientHashMap({}, this__9739.root, this__9739.cnt, this__9739.has_nil_QMARK_, this__9739.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9740 = this;
  var h__2192__auto____9741 = this__9740.__hash;
  if(!(h__2192__auto____9741 == null)) {
    return h__2192__auto____9741
  }else {
    var h__2192__auto____9742 = cljs.core.hash_imap.call(null, coll);
    this__9740.__hash = h__2192__auto____9742;
    return h__2192__auto____9742
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9743 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9744 = this;
  if(k == null) {
    if(this__9744.has_nil_QMARK_) {
      return this__9744.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__9744.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__9744.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9745 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____9746 = this__9745.has_nil_QMARK_;
      if(and__3822__auto____9746) {
        return v === this__9745.nil_val
      }else {
        return and__3822__auto____9746
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__9745.meta, this__9745.has_nil_QMARK_ ? this__9745.cnt : this__9745.cnt + 1, this__9745.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___9747 = new cljs.core.Box(false);
    var new_root__9748 = (this__9745.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__9745.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___9747);
    if(new_root__9748 === this__9745.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__9745.meta, added_leaf_QMARK___9747.val ? this__9745.cnt + 1 : this__9745.cnt, new_root__9748, this__9745.has_nil_QMARK_, this__9745.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9749 = this;
  if(k == null) {
    return this__9749.has_nil_QMARK_
  }else {
    if(this__9749.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__9749.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9772 = null;
  var G__9772__2 = function(this_sym9750, k) {
    var this__9752 = this;
    var this_sym9750__9753 = this;
    var coll__9754 = this_sym9750__9753;
    return coll__9754.cljs$core$ILookup$_lookup$arity$2(coll__9754, k)
  };
  var G__9772__3 = function(this_sym9751, k, not_found) {
    var this__9752 = this;
    var this_sym9751__9755 = this;
    var coll__9756 = this_sym9751__9755;
    return coll__9756.cljs$core$ILookup$_lookup$arity$3(coll__9756, k, not_found)
  };
  G__9772 = function(this_sym9751, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9772__2.call(this, this_sym9751, k);
      case 3:
        return G__9772__3.call(this, this_sym9751, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9772
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym9737, args9738) {
  var this__9757 = this;
  return this_sym9737.call.apply(this_sym9737, [this_sym9737].concat(args9738.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9758 = this;
  var init__9759 = this__9758.has_nil_QMARK_ ? f.call(null, init, null, this__9758.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__9759)) {
    return cljs.core.deref.call(null, init__9759)
  }else {
    if(!(this__9758.root == null)) {
      return this__9758.root.kv_reduce(f, init__9759)
    }else {
      if("\ufdd0'else") {
        return init__9759
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9760 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__9761 = this;
  var this__9762 = this;
  return cljs.core.pr_str.call(null, this__9762)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9763 = this;
  if(this__9763.cnt > 0) {
    var s__9764 = !(this__9763.root == null) ? this__9763.root.inode_seq() : null;
    if(this__9763.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__9763.nil_val], true), s__9764)
    }else {
      return s__9764
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9765 = this;
  return this__9765.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9766 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9767 = this;
  return new cljs.core.PersistentHashMap(meta, this__9767.cnt, this__9767.root, this__9767.has_nil_QMARK_, this__9767.nil_val, this__9767.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9768 = this;
  return this__9768.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9769 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__9769.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9770 = this;
  if(k == null) {
    if(this__9770.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__9770.meta, this__9770.cnt - 1, this__9770.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__9770.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__9771 = this__9770.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__9771 === this__9770.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__9770.meta, this__9770.cnt - 1, new_root__9771, this__9770.has_nil_QMARK_, this__9770.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__9773 = ks.length;
  var i__9774 = 0;
  var out__9775 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__9774 < len__9773) {
      var G__9776 = i__9774 + 1;
      var G__9777 = cljs.core.assoc_BANG_.call(null, out__9775, ks[i__9774], vs[i__9774]);
      i__9774 = G__9776;
      out__9775 = G__9777;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9775)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9778 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9779 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__9780 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9781 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9782 = this;
  if(k == null) {
    if(this__9782.has_nil_QMARK_) {
      return this__9782.nil_val
    }else {
      return null
    }
  }else {
    if(this__9782.root == null) {
      return null
    }else {
      return this__9782.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9783 = this;
  if(k == null) {
    if(this__9783.has_nil_QMARK_) {
      return this__9783.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__9783.root == null) {
      return not_found
    }else {
      return this__9783.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9784 = this;
  if(this__9784.edit) {
    return this__9784.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__9785 = this;
  var tcoll__9786 = this;
  if(this__9785.edit) {
    if(function() {
      var G__9787__9788 = o;
      if(G__9787__9788) {
        if(function() {
          var or__3824__auto____9789 = G__9787__9788.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____9789) {
            return or__3824__auto____9789
          }else {
            return G__9787__9788.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9787__9788.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9787__9788)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9787__9788)
      }
    }()) {
      return tcoll__9786.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9790 = cljs.core.seq.call(null, o);
      var tcoll__9791 = tcoll__9786;
      while(true) {
        var temp__3971__auto____9792 = cljs.core.first.call(null, es__9790);
        if(cljs.core.truth_(temp__3971__auto____9792)) {
          var e__9793 = temp__3971__auto____9792;
          var G__9804 = cljs.core.next.call(null, es__9790);
          var G__9805 = tcoll__9791.assoc_BANG_(cljs.core.key.call(null, e__9793), cljs.core.val.call(null, e__9793));
          es__9790 = G__9804;
          tcoll__9791 = G__9805;
          continue
        }else {
          return tcoll__9791
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__9794 = this;
  var tcoll__9795 = this;
  if(this__9794.edit) {
    if(k == null) {
      if(this__9794.nil_val === v) {
      }else {
        this__9794.nil_val = v
      }
      if(this__9794.has_nil_QMARK_) {
      }else {
        this__9794.count = this__9794.count + 1;
        this__9794.has_nil_QMARK_ = true
      }
      return tcoll__9795
    }else {
      var added_leaf_QMARK___9796 = new cljs.core.Box(false);
      var node__9797 = (this__9794.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__9794.root).inode_assoc_BANG_(this__9794.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___9796);
      if(node__9797 === this__9794.root) {
      }else {
        this__9794.root = node__9797
      }
      if(added_leaf_QMARK___9796.val) {
        this__9794.count = this__9794.count + 1
      }else {
      }
      return tcoll__9795
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__9798 = this;
  var tcoll__9799 = this;
  if(this__9798.edit) {
    if(k == null) {
      if(this__9798.has_nil_QMARK_) {
        this__9798.has_nil_QMARK_ = false;
        this__9798.nil_val = null;
        this__9798.count = this__9798.count - 1;
        return tcoll__9799
      }else {
        return tcoll__9799
      }
    }else {
      if(this__9798.root == null) {
        return tcoll__9799
      }else {
        var removed_leaf_QMARK___9800 = new cljs.core.Box(false);
        var node__9801 = this__9798.root.inode_without_BANG_(this__9798.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___9800);
        if(node__9801 === this__9798.root) {
        }else {
          this__9798.root = node__9801
        }
        if(cljs.core.truth_(removed_leaf_QMARK___9800[0])) {
          this__9798.count = this__9798.count - 1
        }else {
        }
        return tcoll__9799
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__9802 = this;
  var tcoll__9803 = this;
  if(this__9802.edit) {
    this__9802.edit = null;
    return new cljs.core.PersistentHashMap(null, this__9802.count, this__9802.root, this__9802.has_nil_QMARK_, this__9802.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__9808 = node;
  var stack__9809 = stack;
  while(true) {
    if(!(t__9808 == null)) {
      var G__9810 = ascending_QMARK_ ? t__9808.left : t__9808.right;
      var G__9811 = cljs.core.conj.call(null, stack__9809, t__9808);
      t__9808 = G__9810;
      stack__9809 = G__9811;
      continue
    }else {
      return stack__9809
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9812 = this;
  var h__2192__auto____9813 = this__9812.__hash;
  if(!(h__2192__auto____9813 == null)) {
    return h__2192__auto____9813
  }else {
    var h__2192__auto____9814 = cljs.core.hash_coll.call(null, coll);
    this__9812.__hash = h__2192__auto____9814;
    return h__2192__auto____9814
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9815 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__9816 = this;
  var this__9817 = this;
  return cljs.core.pr_str.call(null, this__9817)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9818 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9819 = this;
  if(this__9819.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__9819.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__9820 = this;
  return cljs.core.peek.call(null, this__9820.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__9821 = this;
  var t__9822 = cljs.core.first.call(null, this__9821.stack);
  var next_stack__9823 = cljs.core.tree_map_seq_push.call(null, this__9821.ascending_QMARK_ ? t__9822.right : t__9822.left, cljs.core.next.call(null, this__9821.stack), this__9821.ascending_QMARK_);
  if(!(next_stack__9823 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__9823, this__9821.ascending_QMARK_, this__9821.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9824 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9825 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__9825.stack, this__9825.ascending_QMARK_, this__9825.cnt, this__9825.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9826 = this;
  return this__9826.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____9828 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____9828) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____9828
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____9830 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____9830) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____9830
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__9834 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__9834)) {
    return cljs.core.deref.call(null, init__9834)
  }else {
    var init__9835 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__9834) : init__9834;
    if(cljs.core.reduced_QMARK_.call(null, init__9835)) {
      return cljs.core.deref.call(null, init__9835)
    }else {
      var init__9836 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__9835) : init__9835;
      if(cljs.core.reduced_QMARK_.call(null, init__9836)) {
        return cljs.core.deref.call(null, init__9836)
      }else {
        return init__9836
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9839 = this;
  var h__2192__auto____9840 = this__9839.__hash;
  if(!(h__2192__auto____9840 == null)) {
    return h__2192__auto____9840
  }else {
    var h__2192__auto____9841 = cljs.core.hash_coll.call(null, coll);
    this__9839.__hash = h__2192__auto____9841;
    return h__2192__auto____9841
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__9842 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__9843 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__9844 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__9844.key, this__9844.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9892 = null;
  var G__9892__2 = function(this_sym9845, k) {
    var this__9847 = this;
    var this_sym9845__9848 = this;
    var node__9849 = this_sym9845__9848;
    return node__9849.cljs$core$ILookup$_lookup$arity$2(node__9849, k)
  };
  var G__9892__3 = function(this_sym9846, k, not_found) {
    var this__9847 = this;
    var this_sym9846__9850 = this;
    var node__9851 = this_sym9846__9850;
    return node__9851.cljs$core$ILookup$_lookup$arity$3(node__9851, k, not_found)
  };
  G__9892 = function(this_sym9846, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9892__2.call(this, this_sym9846, k);
      case 3:
        return G__9892__3.call(this, this_sym9846, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9892
}();
cljs.core.BlackNode.prototype.apply = function(this_sym9837, args9838) {
  var this__9852 = this;
  return this_sym9837.call.apply(this_sym9837, [this_sym9837].concat(args9838.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__9853 = this;
  return cljs.core.PersistentVector.fromArray([this__9853.key, this__9853.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__9854 = this;
  return this__9854.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__9855 = this;
  return this__9855.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__9856 = this;
  var node__9857 = this;
  return ins.balance_right(node__9857)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__9858 = this;
  var node__9859 = this;
  return new cljs.core.RedNode(this__9858.key, this__9858.val, this__9858.left, this__9858.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__9860 = this;
  var node__9861 = this;
  return cljs.core.balance_right_del.call(null, this__9860.key, this__9860.val, this__9860.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__9862 = this;
  var node__9863 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__9864 = this;
  var node__9865 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__9865, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__9866 = this;
  var node__9867 = this;
  return cljs.core.balance_left_del.call(null, this__9866.key, this__9866.val, del, this__9866.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__9868 = this;
  var node__9869 = this;
  return ins.balance_left(node__9869)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__9870 = this;
  var node__9871 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__9871, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__9893 = null;
  var G__9893__0 = function() {
    var this__9872 = this;
    var this__9874 = this;
    return cljs.core.pr_str.call(null, this__9874)
  };
  G__9893 = function() {
    switch(arguments.length) {
      case 0:
        return G__9893__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9893
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__9875 = this;
  var node__9876 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__9876, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__9877 = this;
  var node__9878 = this;
  return node__9878
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__9879 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__9880 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__9881 = this;
  return cljs.core.list.call(null, this__9881.key, this__9881.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__9882 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__9883 = this;
  return this__9883.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__9884 = this;
  return cljs.core.PersistentVector.fromArray([this__9884.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__9885 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__9885.key, this__9885.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9886 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__9887 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__9887.key, this__9887.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__9888 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__9889 = this;
  if(n === 0) {
    return this__9889.key
  }else {
    if(n === 1) {
      return this__9889.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__9890 = this;
  if(n === 0) {
    return this__9890.key
  }else {
    if(n === 1) {
      return this__9890.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__9891 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9896 = this;
  var h__2192__auto____9897 = this__9896.__hash;
  if(!(h__2192__auto____9897 == null)) {
    return h__2192__auto____9897
  }else {
    var h__2192__auto____9898 = cljs.core.hash_coll.call(null, coll);
    this__9896.__hash = h__2192__auto____9898;
    return h__2192__auto____9898
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__9899 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__9900 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__9901 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__9901.key, this__9901.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__9949 = null;
  var G__9949__2 = function(this_sym9902, k) {
    var this__9904 = this;
    var this_sym9902__9905 = this;
    var node__9906 = this_sym9902__9905;
    return node__9906.cljs$core$ILookup$_lookup$arity$2(node__9906, k)
  };
  var G__9949__3 = function(this_sym9903, k, not_found) {
    var this__9904 = this;
    var this_sym9903__9907 = this;
    var node__9908 = this_sym9903__9907;
    return node__9908.cljs$core$ILookup$_lookup$arity$3(node__9908, k, not_found)
  };
  G__9949 = function(this_sym9903, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9949__2.call(this, this_sym9903, k);
      case 3:
        return G__9949__3.call(this, this_sym9903, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9949
}();
cljs.core.RedNode.prototype.apply = function(this_sym9894, args9895) {
  var this__9909 = this;
  return this_sym9894.call.apply(this_sym9894, [this_sym9894].concat(args9895.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__9910 = this;
  return cljs.core.PersistentVector.fromArray([this__9910.key, this__9910.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__9911 = this;
  return this__9911.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__9912 = this;
  return this__9912.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__9913 = this;
  var node__9914 = this;
  return new cljs.core.RedNode(this__9913.key, this__9913.val, this__9913.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__9915 = this;
  var node__9916 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__9917 = this;
  var node__9918 = this;
  return new cljs.core.RedNode(this__9917.key, this__9917.val, this__9917.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__9919 = this;
  var node__9920 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__9921 = this;
  var node__9922 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__9922, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__9923 = this;
  var node__9924 = this;
  return new cljs.core.RedNode(this__9923.key, this__9923.val, del, this__9923.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__9925 = this;
  var node__9926 = this;
  return new cljs.core.RedNode(this__9925.key, this__9925.val, ins, this__9925.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__9927 = this;
  var node__9928 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9927.left)) {
    return new cljs.core.RedNode(this__9927.key, this__9927.val, this__9927.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__9927.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9927.right)) {
      return new cljs.core.RedNode(this__9927.right.key, this__9927.right.val, new cljs.core.BlackNode(this__9927.key, this__9927.val, this__9927.left, this__9927.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__9927.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__9928, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__9950 = null;
  var G__9950__0 = function() {
    var this__9929 = this;
    var this__9931 = this;
    return cljs.core.pr_str.call(null, this__9931)
  };
  G__9950 = function() {
    switch(arguments.length) {
      case 0:
        return G__9950__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9950
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__9932 = this;
  var node__9933 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9932.right)) {
    return new cljs.core.RedNode(this__9932.key, this__9932.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__9932.left, null), this__9932.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9932.left)) {
      return new cljs.core.RedNode(this__9932.left.key, this__9932.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__9932.left.left, null), new cljs.core.BlackNode(this__9932.key, this__9932.val, this__9932.left.right, this__9932.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__9933, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__9934 = this;
  var node__9935 = this;
  return new cljs.core.BlackNode(this__9934.key, this__9934.val, this__9934.left, this__9934.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__9936 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__9937 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__9938 = this;
  return cljs.core.list.call(null, this__9938.key, this__9938.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__9939 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__9940 = this;
  return this__9940.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__9941 = this;
  return cljs.core.PersistentVector.fromArray([this__9941.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__9942 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__9942.key, this__9942.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9943 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__9944 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__9944.key, this__9944.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__9945 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__9946 = this;
  if(n === 0) {
    return this__9946.key
  }else {
    if(n === 1) {
      return this__9946.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__9947 = this;
  if(n === 0) {
    return this__9947.key
  }else {
    if(n === 1) {
      return this__9947.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__9948 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__9954 = comp.call(null, k, tree.key);
    if(c__9954 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__9954 < 0) {
        var ins__9955 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__9955 == null)) {
          return tree.add_left(ins__9955)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__9956 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__9956 == null)) {
            return tree.add_right(ins__9956)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__9959 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__9959)) {
            return new cljs.core.RedNode(app__9959.key, app__9959.val, new cljs.core.RedNode(left.key, left.val, left.left, app__9959.left, null), new cljs.core.RedNode(right.key, right.val, app__9959.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__9959, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__9960 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__9960)) {
              return new cljs.core.RedNode(app__9960.key, app__9960.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__9960.left, null), new cljs.core.BlackNode(right.key, right.val, app__9960.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__9960, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__9966 = comp.call(null, k, tree.key);
    if(c__9966 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__9966 < 0) {
        var del__9967 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____9968 = !(del__9967 == null);
          if(or__3824__auto____9968) {
            return or__3824__auto____9968
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__9967, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__9967, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__9969 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____9970 = !(del__9969 == null);
            if(or__3824__auto____9970) {
              return or__3824__auto____9970
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__9969)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__9969, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__9973 = tree.key;
  var c__9974 = comp.call(null, k, tk__9973);
  if(c__9974 === 0) {
    return tree.replace(tk__9973, v, tree.left, tree.right)
  }else {
    if(c__9974 < 0) {
      return tree.replace(tk__9973, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__9973, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9977 = this;
  var h__2192__auto____9978 = this__9977.__hash;
  if(!(h__2192__auto____9978 == null)) {
    return h__2192__auto____9978
  }else {
    var h__2192__auto____9979 = cljs.core.hash_imap.call(null, coll);
    this__9977.__hash = h__2192__auto____9979;
    return h__2192__auto____9979
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9980 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9981 = this;
  var n__9982 = coll.entry_at(k);
  if(!(n__9982 == null)) {
    return n__9982.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9983 = this;
  var found__9984 = [null];
  var t__9985 = cljs.core.tree_map_add.call(null, this__9983.comp, this__9983.tree, k, v, found__9984);
  if(t__9985 == null) {
    var found_node__9986 = cljs.core.nth.call(null, found__9984, 0);
    if(cljs.core._EQ_.call(null, v, found_node__9986.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__9983.comp, cljs.core.tree_map_replace.call(null, this__9983.comp, this__9983.tree, k, v), this__9983.cnt, this__9983.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__9983.comp, t__9985.blacken(), this__9983.cnt + 1, this__9983.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9987 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10021 = null;
  var G__10021__2 = function(this_sym9988, k) {
    var this__9990 = this;
    var this_sym9988__9991 = this;
    var coll__9992 = this_sym9988__9991;
    return coll__9992.cljs$core$ILookup$_lookup$arity$2(coll__9992, k)
  };
  var G__10021__3 = function(this_sym9989, k, not_found) {
    var this__9990 = this;
    var this_sym9989__9993 = this;
    var coll__9994 = this_sym9989__9993;
    return coll__9994.cljs$core$ILookup$_lookup$arity$3(coll__9994, k, not_found)
  };
  G__10021 = function(this_sym9989, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10021__2.call(this, this_sym9989, k);
      case 3:
        return G__10021__3.call(this, this_sym9989, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10021
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym9975, args9976) {
  var this__9995 = this;
  return this_sym9975.call.apply(this_sym9975, [this_sym9975].concat(args9976.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9996 = this;
  if(!(this__9996.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__9996.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9997 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9998 = this;
  if(this__9998.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__9998.tree, false, this__9998.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__9999 = this;
  var this__10000 = this;
  return cljs.core.pr_str.call(null, this__10000)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10001 = this;
  var coll__10002 = this;
  var t__10003 = this__10001.tree;
  while(true) {
    if(!(t__10003 == null)) {
      var c__10004 = this__10001.comp.call(null, k, t__10003.key);
      if(c__10004 === 0) {
        return t__10003
      }else {
        if(c__10004 < 0) {
          var G__10022 = t__10003.left;
          t__10003 = G__10022;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10023 = t__10003.right;
            t__10003 = G__10023;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10005 = this;
  if(this__10005.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10005.tree, ascending_QMARK_, this__10005.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10006 = this;
  if(this__10006.cnt > 0) {
    var stack__10007 = null;
    var t__10008 = this__10006.tree;
    while(true) {
      if(!(t__10008 == null)) {
        var c__10009 = this__10006.comp.call(null, k, t__10008.key);
        if(c__10009 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10007, t__10008), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10009 < 0) {
              var G__10024 = cljs.core.conj.call(null, stack__10007, t__10008);
              var G__10025 = t__10008.left;
              stack__10007 = G__10024;
              t__10008 = G__10025;
              continue
            }else {
              var G__10026 = stack__10007;
              var G__10027 = t__10008.right;
              stack__10007 = G__10026;
              t__10008 = G__10027;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10009 > 0) {
                var G__10028 = cljs.core.conj.call(null, stack__10007, t__10008);
                var G__10029 = t__10008.right;
                stack__10007 = G__10028;
                t__10008 = G__10029;
                continue
              }else {
                var G__10030 = stack__10007;
                var G__10031 = t__10008.left;
                stack__10007 = G__10030;
                t__10008 = G__10031;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10007 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10007, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10010 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10011 = this;
  return this__10011.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10012 = this;
  if(this__10012.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10012.tree, true, this__10012.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10013 = this;
  return this__10013.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10014 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10015 = this;
  return new cljs.core.PersistentTreeMap(this__10015.comp, this__10015.tree, this__10015.cnt, meta, this__10015.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10016 = this;
  return this__10016.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10017 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10017.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10018 = this;
  var found__10019 = [null];
  var t__10020 = cljs.core.tree_map_remove.call(null, this__10018.comp, this__10018.tree, k, found__10019);
  if(t__10020 == null) {
    if(cljs.core.nth.call(null, found__10019, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10018.comp, null, 0, this__10018.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10018.comp, t__10020.blacken(), this__10018.cnt - 1, this__10018.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10034 = cljs.core.seq.call(null, keyvals);
    var out__10035 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10034) {
        var G__10036 = cljs.core.nnext.call(null, in__10034);
        var G__10037 = cljs.core.assoc_BANG_.call(null, out__10035, cljs.core.first.call(null, in__10034), cljs.core.second.call(null, in__10034));
        in__10034 = G__10036;
        out__10035 = G__10037;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10035)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10038) {
    var keyvals = cljs.core.seq(arglist__10038);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10039) {
    var keyvals = cljs.core.seq(arglist__10039);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10043 = [];
    var obj__10044 = {};
    var kvs__10045 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10045) {
        ks__10043.push(cljs.core.first.call(null, kvs__10045));
        obj__10044[cljs.core.first.call(null, kvs__10045)] = cljs.core.second.call(null, kvs__10045);
        var G__10046 = cljs.core.nnext.call(null, kvs__10045);
        kvs__10045 = G__10046;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10043, obj__10044)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10047) {
    var keyvals = cljs.core.seq(arglist__10047);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10050 = cljs.core.seq.call(null, keyvals);
    var out__10051 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10050) {
        var G__10052 = cljs.core.nnext.call(null, in__10050);
        var G__10053 = cljs.core.assoc.call(null, out__10051, cljs.core.first.call(null, in__10050), cljs.core.second.call(null, in__10050));
        in__10050 = G__10052;
        out__10051 = G__10053;
        continue
      }else {
        return out__10051
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10054) {
    var keyvals = cljs.core.seq(arglist__10054);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10057 = cljs.core.seq.call(null, keyvals);
    var out__10058 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10057) {
        var G__10059 = cljs.core.nnext.call(null, in__10057);
        var G__10060 = cljs.core.assoc.call(null, out__10058, cljs.core.first.call(null, in__10057), cljs.core.second.call(null, in__10057));
        in__10057 = G__10059;
        out__10058 = G__10060;
        continue
      }else {
        return out__10058
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10061) {
    var comparator = cljs.core.first(arglist__10061);
    var keyvals = cljs.core.rest(arglist__10061);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10062_SHARP_, p2__10063_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____10065 = p1__10062_SHARP_;
          if(cljs.core.truth_(or__3824__auto____10065)) {
            return or__3824__auto____10065
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10063_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10066) {
    var maps = cljs.core.seq(arglist__10066);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10074 = function(m, e) {
        var k__10072 = cljs.core.first.call(null, e);
        var v__10073 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10072)) {
          return cljs.core.assoc.call(null, m, k__10072, f.call(null, cljs.core._lookup.call(null, m, k__10072, null), v__10073))
        }else {
          return cljs.core.assoc.call(null, m, k__10072, v__10073)
        }
      };
      var merge2__10076 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10074, function() {
          var or__3824__auto____10075 = m1;
          if(cljs.core.truth_(or__3824__auto____10075)) {
            return or__3824__auto____10075
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10076, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10077) {
    var f = cljs.core.first(arglist__10077);
    var maps = cljs.core.rest(arglist__10077);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10082 = cljs.core.ObjMap.EMPTY;
  var keys__10083 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10083) {
      var key__10084 = cljs.core.first.call(null, keys__10083);
      var entry__10085 = cljs.core._lookup.call(null, map, key__10084, "\ufdd0'cljs.core/not-found");
      var G__10086 = cljs.core.not_EQ_.call(null, entry__10085, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10082, key__10084, entry__10085) : ret__10082;
      var G__10087 = cljs.core.next.call(null, keys__10083);
      ret__10082 = G__10086;
      keys__10083 = G__10087;
      continue
    }else {
      return ret__10082
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10091 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10091.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10092 = this;
  var h__2192__auto____10093 = this__10092.__hash;
  if(!(h__2192__auto____10093 == null)) {
    return h__2192__auto____10093
  }else {
    var h__2192__auto____10094 = cljs.core.hash_iset.call(null, coll);
    this__10092.__hash = h__2192__auto____10094;
    return h__2192__auto____10094
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10095 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10096 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10096.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10117 = null;
  var G__10117__2 = function(this_sym10097, k) {
    var this__10099 = this;
    var this_sym10097__10100 = this;
    var coll__10101 = this_sym10097__10100;
    return coll__10101.cljs$core$ILookup$_lookup$arity$2(coll__10101, k)
  };
  var G__10117__3 = function(this_sym10098, k, not_found) {
    var this__10099 = this;
    var this_sym10098__10102 = this;
    var coll__10103 = this_sym10098__10102;
    return coll__10103.cljs$core$ILookup$_lookup$arity$3(coll__10103, k, not_found)
  };
  G__10117 = function(this_sym10098, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10117__2.call(this, this_sym10098, k);
      case 3:
        return G__10117__3.call(this, this_sym10098, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10117
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10089, args10090) {
  var this__10104 = this;
  return this_sym10089.call.apply(this_sym10089, [this_sym10089].concat(args10090.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10105 = this;
  return new cljs.core.PersistentHashSet(this__10105.meta, cljs.core.assoc.call(null, this__10105.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10106 = this;
  var this__10107 = this;
  return cljs.core.pr_str.call(null, this__10107)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10108 = this;
  return cljs.core.keys.call(null, this__10108.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10109 = this;
  return new cljs.core.PersistentHashSet(this__10109.meta, cljs.core.dissoc.call(null, this__10109.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10110 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10111 = this;
  var and__3822__auto____10112 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10112) {
    var and__3822__auto____10113 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10113) {
      return cljs.core.every_QMARK_.call(null, function(p1__10088_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10088_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10113
    }
  }else {
    return and__3822__auto____10112
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10114 = this;
  return new cljs.core.PersistentHashSet(meta, this__10114.hash_map, this__10114.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10115 = this;
  return this__10115.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10116 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10116.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10118 = cljs.core.count.call(null, items);
  var i__10119 = 0;
  var out__10120 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10119 < len__10118) {
      var G__10121 = i__10119 + 1;
      var G__10122 = cljs.core.conj_BANG_.call(null, out__10120, items[i__10119]);
      i__10119 = G__10121;
      out__10120 = G__10122;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10120)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10140 = null;
  var G__10140__2 = function(this_sym10126, k) {
    var this__10128 = this;
    var this_sym10126__10129 = this;
    var tcoll__10130 = this_sym10126__10129;
    if(cljs.core._lookup.call(null, this__10128.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10140__3 = function(this_sym10127, k, not_found) {
    var this__10128 = this;
    var this_sym10127__10131 = this;
    var tcoll__10132 = this_sym10127__10131;
    if(cljs.core._lookup.call(null, this__10128.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10140 = function(this_sym10127, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10140__2.call(this, this_sym10127, k);
      case 3:
        return G__10140__3.call(this, this_sym10127, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10140
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10124, args10125) {
  var this__10133 = this;
  return this_sym10124.call.apply(this_sym10124, [this_sym10124].concat(args10125.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10134 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10135 = this;
  if(cljs.core._lookup.call(null, this__10135.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10136 = this;
  return cljs.core.count.call(null, this__10136.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10137 = this;
  this__10137.transient_map = cljs.core.dissoc_BANG_.call(null, this__10137.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10138 = this;
  this__10138.transient_map = cljs.core.assoc_BANG_.call(null, this__10138.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10139 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10139.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10143 = this;
  var h__2192__auto____10144 = this__10143.__hash;
  if(!(h__2192__auto____10144 == null)) {
    return h__2192__auto____10144
  }else {
    var h__2192__auto____10145 = cljs.core.hash_iset.call(null, coll);
    this__10143.__hash = h__2192__auto____10145;
    return h__2192__auto____10145
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10146 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10147 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10147.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10173 = null;
  var G__10173__2 = function(this_sym10148, k) {
    var this__10150 = this;
    var this_sym10148__10151 = this;
    var coll__10152 = this_sym10148__10151;
    return coll__10152.cljs$core$ILookup$_lookup$arity$2(coll__10152, k)
  };
  var G__10173__3 = function(this_sym10149, k, not_found) {
    var this__10150 = this;
    var this_sym10149__10153 = this;
    var coll__10154 = this_sym10149__10153;
    return coll__10154.cljs$core$ILookup$_lookup$arity$3(coll__10154, k, not_found)
  };
  G__10173 = function(this_sym10149, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10173__2.call(this, this_sym10149, k);
      case 3:
        return G__10173__3.call(this, this_sym10149, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10173
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10141, args10142) {
  var this__10155 = this;
  return this_sym10141.call.apply(this_sym10141, [this_sym10141].concat(args10142.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10156 = this;
  return new cljs.core.PersistentTreeSet(this__10156.meta, cljs.core.assoc.call(null, this__10156.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10157 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10157.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10158 = this;
  var this__10159 = this;
  return cljs.core.pr_str.call(null, this__10159)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10160 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10160.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10161 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10161.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10162 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10163 = this;
  return cljs.core._comparator.call(null, this__10163.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10164 = this;
  return cljs.core.keys.call(null, this__10164.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10165 = this;
  return new cljs.core.PersistentTreeSet(this__10165.meta, cljs.core.dissoc.call(null, this__10165.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10166 = this;
  return cljs.core.count.call(null, this__10166.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10167 = this;
  var and__3822__auto____10168 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10168) {
    var and__3822__auto____10169 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10169) {
      return cljs.core.every_QMARK_.call(null, function(p1__10123_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10123_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10169
    }
  }else {
    return and__3822__auto____10168
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10170 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10170.tree_map, this__10170.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10171 = this;
  return this__10171.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10172 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10172.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10178__delegate = function(keys) {
      var in__10176 = cljs.core.seq.call(null, keys);
      var out__10177 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10176)) {
          var G__10179 = cljs.core.next.call(null, in__10176);
          var G__10180 = cljs.core.conj_BANG_.call(null, out__10177, cljs.core.first.call(null, in__10176));
          in__10176 = G__10179;
          out__10177 = G__10180;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10177)
        }
        break
      }
    };
    var G__10178 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10178__delegate.call(this, keys)
    };
    G__10178.cljs$lang$maxFixedArity = 0;
    G__10178.cljs$lang$applyTo = function(arglist__10181) {
      var keys = cljs.core.seq(arglist__10181);
      return G__10178__delegate(keys)
    };
    G__10178.cljs$lang$arity$variadic = G__10178__delegate;
    return G__10178
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10182) {
    var keys = cljs.core.seq(arglist__10182);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10184) {
    var comparator = cljs.core.first(arglist__10184);
    var keys = cljs.core.rest(arglist__10184);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10190 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____10191 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____10191)) {
        var e__10192 = temp__3971__auto____10191;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10192))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10190, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10183_SHARP_) {
      var temp__3971__auto____10193 = cljs.core.find.call(null, smap, p1__10183_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____10193)) {
        var e__10194 = temp__3971__auto____10193;
        return cljs.core.second.call(null, e__10194)
      }else {
        return p1__10183_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10224 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10217, seen) {
        while(true) {
          var vec__10218__10219 = p__10217;
          var f__10220 = cljs.core.nth.call(null, vec__10218__10219, 0, null);
          var xs__10221 = vec__10218__10219;
          var temp__3974__auto____10222 = cljs.core.seq.call(null, xs__10221);
          if(temp__3974__auto____10222) {
            var s__10223 = temp__3974__auto____10222;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10220)) {
              var G__10225 = cljs.core.rest.call(null, s__10223);
              var G__10226 = seen;
              p__10217 = G__10225;
              seen = G__10226;
              continue
            }else {
              return cljs.core.cons.call(null, f__10220, step.call(null, cljs.core.rest.call(null, s__10223), cljs.core.conj.call(null, seen, f__10220)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10224.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__10229 = cljs.core.PersistentVector.EMPTY;
  var s__10230 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10230)) {
      var G__10231 = cljs.core.conj.call(null, ret__10229, cljs.core.first.call(null, s__10230));
      var G__10232 = cljs.core.next.call(null, s__10230);
      ret__10229 = G__10231;
      s__10230 = G__10232;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10229)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____10235 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____10235) {
        return or__3824__auto____10235
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10236 = x.lastIndexOf("/");
      if(i__10236 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10236 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____10239 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____10239) {
      return or__3824__auto____10239
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10240 = x.lastIndexOf("/");
    if(i__10240 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10240)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10247 = cljs.core.ObjMap.EMPTY;
  var ks__10248 = cljs.core.seq.call(null, keys);
  var vs__10249 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____10250 = ks__10248;
      if(and__3822__auto____10250) {
        return vs__10249
      }else {
        return and__3822__auto____10250
      }
    }()) {
      var G__10251 = cljs.core.assoc.call(null, map__10247, cljs.core.first.call(null, ks__10248), cljs.core.first.call(null, vs__10249));
      var G__10252 = cljs.core.next.call(null, ks__10248);
      var G__10253 = cljs.core.next.call(null, vs__10249);
      map__10247 = G__10251;
      ks__10248 = G__10252;
      vs__10249 = G__10253;
      continue
    }else {
      return map__10247
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10256__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10241_SHARP_, p2__10242_SHARP_) {
        return max_key.call(null, k, p1__10241_SHARP_, p2__10242_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10256 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10256__delegate.call(this, k, x, y, more)
    };
    G__10256.cljs$lang$maxFixedArity = 3;
    G__10256.cljs$lang$applyTo = function(arglist__10257) {
      var k = cljs.core.first(arglist__10257);
      var x = cljs.core.first(cljs.core.next(arglist__10257));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10257)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10257)));
      return G__10256__delegate(k, x, y, more)
    };
    G__10256.cljs$lang$arity$variadic = G__10256__delegate;
    return G__10256
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10258__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10254_SHARP_, p2__10255_SHARP_) {
        return min_key.call(null, k, p1__10254_SHARP_, p2__10255_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10258 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10258__delegate.call(this, k, x, y, more)
    };
    G__10258.cljs$lang$maxFixedArity = 3;
    G__10258.cljs$lang$applyTo = function(arglist__10259) {
      var k = cljs.core.first(arglist__10259);
      var x = cljs.core.first(cljs.core.next(arglist__10259));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10259)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10259)));
      return G__10258__delegate(k, x, y, more)
    };
    G__10258.cljs$lang$arity$variadic = G__10258__delegate;
    return G__10258
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10262 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10262) {
        var s__10263 = temp__3974__auto____10262;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10263), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10263)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10266 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10266) {
      var s__10267 = temp__3974__auto____10266;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10267)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10267), take_while.call(null, pred, cljs.core.rest.call(null, s__10267)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10269 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10269.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10281 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____10282 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____10282)) {
        var vec__10283__10284 = temp__3974__auto____10282;
        var e__10285 = cljs.core.nth.call(null, vec__10283__10284, 0, null);
        var s__10286 = vec__10283__10284;
        if(cljs.core.truth_(include__10281.call(null, e__10285))) {
          return s__10286
        }else {
          return cljs.core.next.call(null, s__10286)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10281, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10287 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____10287)) {
      var vec__10288__10289 = temp__3974__auto____10287;
      var e__10290 = cljs.core.nth.call(null, vec__10288__10289, 0, null);
      var s__10291 = vec__10288__10289;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10290)) ? s__10291 : cljs.core.next.call(null, s__10291))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10303 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____10304 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____10304)) {
        var vec__10305__10306 = temp__3974__auto____10304;
        var e__10307 = cljs.core.nth.call(null, vec__10305__10306, 0, null);
        var s__10308 = vec__10305__10306;
        if(cljs.core.truth_(include__10303.call(null, e__10307))) {
          return s__10308
        }else {
          return cljs.core.next.call(null, s__10308)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10303, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10309 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____10309)) {
      var vec__10310__10311 = temp__3974__auto____10309;
      var e__10312 = cljs.core.nth.call(null, vec__10310__10311, 0, null);
      var s__10313 = vec__10310__10311;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10312)) ? s__10313 : cljs.core.next.call(null, s__10313))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10314 = this;
  var h__2192__auto____10315 = this__10314.__hash;
  if(!(h__2192__auto____10315 == null)) {
    return h__2192__auto____10315
  }else {
    var h__2192__auto____10316 = cljs.core.hash_coll.call(null, rng);
    this__10314.__hash = h__2192__auto____10316;
    return h__2192__auto____10316
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10317 = this;
  if(this__10317.step > 0) {
    if(this__10317.start + this__10317.step < this__10317.end) {
      return new cljs.core.Range(this__10317.meta, this__10317.start + this__10317.step, this__10317.end, this__10317.step, null)
    }else {
      return null
    }
  }else {
    if(this__10317.start + this__10317.step > this__10317.end) {
      return new cljs.core.Range(this__10317.meta, this__10317.start + this__10317.step, this__10317.end, this__10317.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10318 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10319 = this;
  var this__10320 = this;
  return cljs.core.pr_str.call(null, this__10320)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10321 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10322 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10323 = this;
  if(this__10323.step > 0) {
    if(this__10323.start < this__10323.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10323.start > this__10323.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10324 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10324.end - this__10324.start) / this__10324.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10325 = this;
  return this__10325.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10326 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10326.meta, this__10326.start + this__10326.step, this__10326.end, this__10326.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10327 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10328 = this;
  return new cljs.core.Range(meta, this__10328.start, this__10328.end, this__10328.step, this__10328.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10329 = this;
  return this__10329.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10330 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10330.start + n * this__10330.step
  }else {
    if(function() {
      var and__3822__auto____10331 = this__10330.start > this__10330.end;
      if(and__3822__auto____10331) {
        return this__10330.step === 0
      }else {
        return and__3822__auto____10331
      }
    }()) {
      return this__10330.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10332 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10332.start + n * this__10332.step
  }else {
    if(function() {
      var and__3822__auto____10333 = this__10332.start > this__10332.end;
      if(and__3822__auto____10333) {
        return this__10332.step === 0
      }else {
        return and__3822__auto____10333
      }
    }()) {
      return this__10332.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10334 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10334.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10337 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10337) {
      var s__10338 = temp__3974__auto____10337;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10338), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10338)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10345 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10345) {
      var s__10346 = temp__3974__auto____10345;
      var fst__10347 = cljs.core.first.call(null, s__10346);
      var fv__10348 = f.call(null, fst__10347);
      var run__10349 = cljs.core.cons.call(null, fst__10347, cljs.core.take_while.call(null, function(p1__10339_SHARP_) {
        return cljs.core._EQ_.call(null, fv__10348, f.call(null, p1__10339_SHARP_))
      }, cljs.core.next.call(null, s__10346)));
      return cljs.core.cons.call(null, run__10349, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__10349), s__10346))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____10364 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____10364) {
        var s__10365 = temp__3971__auto____10364;
        return reductions.call(null, f, cljs.core.first.call(null, s__10365), cljs.core.rest.call(null, s__10365))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10366 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10366) {
        var s__10367 = temp__3974__auto____10366;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__10367)), cljs.core.rest.call(null, s__10367))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10370 = null;
      var G__10370__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10370__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10370__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10370__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10370__4 = function() {
        var G__10371__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10371 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10371__delegate.call(this, x, y, z, args)
        };
        G__10371.cljs$lang$maxFixedArity = 3;
        G__10371.cljs$lang$applyTo = function(arglist__10372) {
          var x = cljs.core.first(arglist__10372);
          var y = cljs.core.first(cljs.core.next(arglist__10372));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10372)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10372)));
          return G__10371__delegate(x, y, z, args)
        };
        G__10371.cljs$lang$arity$variadic = G__10371__delegate;
        return G__10371
      }();
      G__10370 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10370__0.call(this);
          case 1:
            return G__10370__1.call(this, x);
          case 2:
            return G__10370__2.call(this, x, y);
          case 3:
            return G__10370__3.call(this, x, y, z);
          default:
            return G__10370__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10370.cljs$lang$maxFixedArity = 3;
      G__10370.cljs$lang$applyTo = G__10370__4.cljs$lang$applyTo;
      return G__10370
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10373 = null;
      var G__10373__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10373__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10373__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10373__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10373__4 = function() {
        var G__10374__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10374 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10374__delegate.call(this, x, y, z, args)
        };
        G__10374.cljs$lang$maxFixedArity = 3;
        G__10374.cljs$lang$applyTo = function(arglist__10375) {
          var x = cljs.core.first(arglist__10375);
          var y = cljs.core.first(cljs.core.next(arglist__10375));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10375)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10375)));
          return G__10374__delegate(x, y, z, args)
        };
        G__10374.cljs$lang$arity$variadic = G__10374__delegate;
        return G__10374
      }();
      G__10373 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10373__0.call(this);
          case 1:
            return G__10373__1.call(this, x);
          case 2:
            return G__10373__2.call(this, x, y);
          case 3:
            return G__10373__3.call(this, x, y, z);
          default:
            return G__10373__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10373.cljs$lang$maxFixedArity = 3;
      G__10373.cljs$lang$applyTo = G__10373__4.cljs$lang$applyTo;
      return G__10373
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10376 = null;
      var G__10376__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10376__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10376__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10376__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10376__4 = function() {
        var G__10377__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10377 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10377__delegate.call(this, x, y, z, args)
        };
        G__10377.cljs$lang$maxFixedArity = 3;
        G__10377.cljs$lang$applyTo = function(arglist__10378) {
          var x = cljs.core.first(arglist__10378);
          var y = cljs.core.first(cljs.core.next(arglist__10378));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10378)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10378)));
          return G__10377__delegate(x, y, z, args)
        };
        G__10377.cljs$lang$arity$variadic = G__10377__delegate;
        return G__10377
      }();
      G__10376 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10376__0.call(this);
          case 1:
            return G__10376__1.call(this, x);
          case 2:
            return G__10376__2.call(this, x, y);
          case 3:
            return G__10376__3.call(this, x, y, z);
          default:
            return G__10376__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10376.cljs$lang$maxFixedArity = 3;
      G__10376.cljs$lang$applyTo = G__10376__4.cljs$lang$applyTo;
      return G__10376
    }()
  };
  var juxt__4 = function() {
    var G__10379__delegate = function(f, g, h, fs) {
      var fs__10369 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10380 = null;
        var G__10380__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10350_SHARP_, p2__10351_SHARP_) {
            return cljs.core.conj.call(null, p1__10350_SHARP_, p2__10351_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__10369)
        };
        var G__10380__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10352_SHARP_, p2__10353_SHARP_) {
            return cljs.core.conj.call(null, p1__10352_SHARP_, p2__10353_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__10369)
        };
        var G__10380__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10354_SHARP_, p2__10355_SHARP_) {
            return cljs.core.conj.call(null, p1__10354_SHARP_, p2__10355_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__10369)
        };
        var G__10380__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10356_SHARP_, p2__10357_SHARP_) {
            return cljs.core.conj.call(null, p1__10356_SHARP_, p2__10357_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__10369)
        };
        var G__10380__4 = function() {
          var G__10381__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10358_SHARP_, p2__10359_SHARP_) {
              return cljs.core.conj.call(null, p1__10358_SHARP_, cljs.core.apply.call(null, p2__10359_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__10369)
          };
          var G__10381 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10381__delegate.call(this, x, y, z, args)
          };
          G__10381.cljs$lang$maxFixedArity = 3;
          G__10381.cljs$lang$applyTo = function(arglist__10382) {
            var x = cljs.core.first(arglist__10382);
            var y = cljs.core.first(cljs.core.next(arglist__10382));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10382)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10382)));
            return G__10381__delegate(x, y, z, args)
          };
          G__10381.cljs$lang$arity$variadic = G__10381__delegate;
          return G__10381
        }();
        G__10380 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10380__0.call(this);
            case 1:
              return G__10380__1.call(this, x);
            case 2:
              return G__10380__2.call(this, x, y);
            case 3:
              return G__10380__3.call(this, x, y, z);
            default:
              return G__10380__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__10380.cljs$lang$maxFixedArity = 3;
        G__10380.cljs$lang$applyTo = G__10380__4.cljs$lang$applyTo;
        return G__10380
      }()
    };
    var G__10379 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10379__delegate.call(this, f, g, h, fs)
    };
    G__10379.cljs$lang$maxFixedArity = 3;
    G__10379.cljs$lang$applyTo = function(arglist__10383) {
      var f = cljs.core.first(arglist__10383);
      var g = cljs.core.first(cljs.core.next(arglist__10383));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10383)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10383)));
      return G__10379__delegate(f, g, h, fs)
    };
    G__10379.cljs$lang$arity$variadic = G__10379__delegate;
    return G__10379
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10386 = cljs.core.next.call(null, coll);
        coll = G__10386;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____10385 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____10385) {
          return n > 0
        }else {
          return and__3822__auto____10385
        }
      }())) {
        var G__10387 = n - 1;
        var G__10388 = cljs.core.next.call(null, coll);
        n = G__10387;
        coll = G__10388;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__10390 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__10390), s)) {
    if(cljs.core.count.call(null, matches__10390) === 1) {
      return cljs.core.first.call(null, matches__10390)
    }else {
      return cljs.core.vec.call(null, matches__10390)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__10392 = re.exec(s);
  if(matches__10392 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__10392) === 1) {
      return cljs.core.first.call(null, matches__10392)
    }else {
      return cljs.core.vec.call(null, matches__10392)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__10397 = cljs.core.re_find.call(null, re, s);
  var match_idx__10398 = s.search(re);
  var match_str__10399 = cljs.core.coll_QMARK_.call(null, match_data__10397) ? cljs.core.first.call(null, match_data__10397) : match_data__10397;
  var post_match__10400 = cljs.core.subs.call(null, s, match_idx__10398 + cljs.core.count.call(null, match_str__10399));
  if(cljs.core.truth_(match_data__10397)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__10397, re_seq.call(null, re, post_match__10400))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10407__10408 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___10409 = cljs.core.nth.call(null, vec__10407__10408, 0, null);
  var flags__10410 = cljs.core.nth.call(null, vec__10407__10408, 1, null);
  var pattern__10411 = cljs.core.nth.call(null, vec__10407__10408, 2, null);
  return new RegExp(pattern__10411, flags__10410)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__10401_SHARP_) {
    return print_one.call(null, p1__10401_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____10421 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____10421)) {
            var and__3822__auto____10425 = function() {
              var G__10422__10423 = obj;
              if(G__10422__10423) {
                if(function() {
                  var or__3824__auto____10424 = G__10422__10423.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____10424) {
                    return or__3824__auto____10424
                  }else {
                    return G__10422__10423.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__10422__10423.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10422__10423)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10422__10423)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____10425)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____10425
            }
          }else {
            return and__3822__auto____10421
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____10426 = !(obj == null);
          if(and__3822__auto____10426) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____10426
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__10427__10428 = obj;
          if(G__10427__10428) {
            if(function() {
              var or__3824__auto____10429 = G__10427__10428.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____10429) {
                return or__3824__auto____10429
              }else {
                return G__10427__10428.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__10427__10428.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10427__10428)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10427__10428)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__10449 = new goog.string.StringBuffer;
  var G__10450__10451 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10450__10451) {
    var string__10452 = cljs.core.first.call(null, G__10450__10451);
    var G__10450__10453 = G__10450__10451;
    while(true) {
      sb__10449.append(string__10452);
      var temp__3974__auto____10454 = cljs.core.next.call(null, G__10450__10453);
      if(temp__3974__auto____10454) {
        var G__10450__10455 = temp__3974__auto____10454;
        var G__10468 = cljs.core.first.call(null, G__10450__10455);
        var G__10469 = G__10450__10455;
        string__10452 = G__10468;
        G__10450__10453 = G__10469;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10456__10457 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10456__10457) {
    var obj__10458 = cljs.core.first.call(null, G__10456__10457);
    var G__10456__10459 = G__10456__10457;
    while(true) {
      sb__10449.append(" ");
      var G__10460__10461 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10458, opts));
      if(G__10460__10461) {
        var string__10462 = cljs.core.first.call(null, G__10460__10461);
        var G__10460__10463 = G__10460__10461;
        while(true) {
          sb__10449.append(string__10462);
          var temp__3974__auto____10464 = cljs.core.next.call(null, G__10460__10463);
          if(temp__3974__auto____10464) {
            var G__10460__10465 = temp__3974__auto____10464;
            var G__10470 = cljs.core.first.call(null, G__10460__10465);
            var G__10471 = G__10460__10465;
            string__10462 = G__10470;
            G__10460__10463 = G__10471;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____10466 = cljs.core.next.call(null, G__10456__10459);
      if(temp__3974__auto____10466) {
        var G__10456__10467 = temp__3974__auto____10466;
        var G__10472 = cljs.core.first.call(null, G__10456__10467);
        var G__10473 = G__10456__10467;
        obj__10458 = G__10472;
        G__10456__10459 = G__10473;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__10449
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__10475 = cljs.core.pr_sb.call(null, objs, opts);
  sb__10475.append("\n");
  return[cljs.core.str(sb__10475)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__10494__10495 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10494__10495) {
    var string__10496 = cljs.core.first.call(null, G__10494__10495);
    var G__10494__10497 = G__10494__10495;
    while(true) {
      cljs.core.string_print.call(null, string__10496);
      var temp__3974__auto____10498 = cljs.core.next.call(null, G__10494__10497);
      if(temp__3974__auto____10498) {
        var G__10494__10499 = temp__3974__auto____10498;
        var G__10512 = cljs.core.first.call(null, G__10494__10499);
        var G__10513 = G__10494__10499;
        string__10496 = G__10512;
        G__10494__10497 = G__10513;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10500__10501 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10500__10501) {
    var obj__10502 = cljs.core.first.call(null, G__10500__10501);
    var G__10500__10503 = G__10500__10501;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__10504__10505 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10502, opts));
      if(G__10504__10505) {
        var string__10506 = cljs.core.first.call(null, G__10504__10505);
        var G__10504__10507 = G__10504__10505;
        while(true) {
          cljs.core.string_print.call(null, string__10506);
          var temp__3974__auto____10508 = cljs.core.next.call(null, G__10504__10507);
          if(temp__3974__auto____10508) {
            var G__10504__10509 = temp__3974__auto____10508;
            var G__10514 = cljs.core.first.call(null, G__10504__10509);
            var G__10515 = G__10504__10509;
            string__10506 = G__10514;
            G__10504__10507 = G__10515;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____10510 = cljs.core.next.call(null, G__10500__10503);
      if(temp__3974__auto____10510) {
        var G__10500__10511 = temp__3974__auto____10510;
        var G__10516 = cljs.core.first.call(null, G__10500__10511);
        var G__10517 = G__10500__10511;
        obj__10502 = G__10516;
        G__10500__10503 = G__10517;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10518) {
    var objs = cljs.core.seq(arglist__10518);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10519) {
    var objs = cljs.core.seq(arglist__10519);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10520) {
    var objs = cljs.core.seq(arglist__10520);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10521) {
    var objs = cljs.core.seq(arglist__10521);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10522) {
    var objs = cljs.core.seq(arglist__10522);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10523) {
    var objs = cljs.core.seq(arglist__10523);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10524) {
    var objs = cljs.core.seq(arglist__10524);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10525) {
    var objs = cljs.core.seq(arglist__10525);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__10526) {
    var fmt = cljs.core.first(arglist__10526);
    var args = cljs.core.rest(arglist__10526);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10527 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10527, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10528 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10528, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10529 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10529, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____10530 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____10530)) {
        var nspc__10531 = temp__3974__auto____10530;
        return[cljs.core.str(nspc__10531), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____10532 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____10532)) {
          var nspc__10533 = temp__3974__auto____10532;
          return[cljs.core.str(nspc__10533), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10534 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10534, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__10536 = function(n, len) {
    var ns__10535 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__10535) < len) {
        var G__10538 = [cljs.core.str("0"), cljs.core.str(ns__10535)].join("");
        ns__10535 = G__10538;
        continue
      }else {
        return ns__10535
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__10536.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__10536.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__10536.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10536.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10536.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__10536.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10537 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10537, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10539 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__10540 = this;
  var G__10541__10542 = cljs.core.seq.call(null, this__10540.watches);
  if(G__10541__10542) {
    var G__10544__10546 = cljs.core.first.call(null, G__10541__10542);
    var vec__10545__10547 = G__10544__10546;
    var key__10548 = cljs.core.nth.call(null, vec__10545__10547, 0, null);
    var f__10549 = cljs.core.nth.call(null, vec__10545__10547, 1, null);
    var G__10541__10550 = G__10541__10542;
    var G__10544__10551 = G__10544__10546;
    var G__10541__10552 = G__10541__10550;
    while(true) {
      var vec__10553__10554 = G__10544__10551;
      var key__10555 = cljs.core.nth.call(null, vec__10553__10554, 0, null);
      var f__10556 = cljs.core.nth.call(null, vec__10553__10554, 1, null);
      var G__10541__10557 = G__10541__10552;
      f__10556.call(null, key__10555, this$, oldval, newval);
      var temp__3974__auto____10558 = cljs.core.next.call(null, G__10541__10557);
      if(temp__3974__auto____10558) {
        var G__10541__10559 = temp__3974__auto____10558;
        var G__10566 = cljs.core.first.call(null, G__10541__10559);
        var G__10567 = G__10541__10559;
        G__10544__10551 = G__10566;
        G__10541__10552 = G__10567;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__10560 = this;
  return this$.watches = cljs.core.assoc.call(null, this__10560.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__10561 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__10561.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__10562 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__10562.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__10563 = this;
  return this__10563.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10564 = this;
  return this__10564.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10565 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__10579__delegate = function(x, p__10568) {
      var map__10574__10575 = p__10568;
      var map__10574__10576 = cljs.core.seq_QMARK_.call(null, map__10574__10575) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10574__10575) : map__10574__10575;
      var validator__10577 = cljs.core._lookup.call(null, map__10574__10576, "\ufdd0'validator", null);
      var meta__10578 = cljs.core._lookup.call(null, map__10574__10576, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__10578, validator__10577, null)
    };
    var G__10579 = function(x, var_args) {
      var p__10568 = null;
      if(goog.isDef(var_args)) {
        p__10568 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10579__delegate.call(this, x, p__10568)
    };
    G__10579.cljs$lang$maxFixedArity = 1;
    G__10579.cljs$lang$applyTo = function(arglist__10580) {
      var x = cljs.core.first(arglist__10580);
      var p__10568 = cljs.core.rest(arglist__10580);
      return G__10579__delegate(x, p__10568)
    };
    G__10579.cljs$lang$arity$variadic = G__10579__delegate;
    return G__10579
  }();
  atom = function(x, var_args) {
    var p__10568 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____10584 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____10584)) {
    var validate__10585 = temp__3974__auto____10584;
    if(cljs.core.truth_(validate__10585.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__10586 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__10586, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__10587__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__10587 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10587__delegate.call(this, a, f, x, y, z, more)
    };
    G__10587.cljs$lang$maxFixedArity = 5;
    G__10587.cljs$lang$applyTo = function(arglist__10588) {
      var a = cljs.core.first(arglist__10588);
      var f = cljs.core.first(cljs.core.next(arglist__10588));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10588)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10588))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10588)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10588)))));
      return G__10587__delegate(a, f, x, y, z, more)
    };
    G__10587.cljs$lang$arity$variadic = G__10587__delegate;
    return G__10587
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10589) {
    var iref = cljs.core.first(arglist__10589);
    var f = cljs.core.first(cljs.core.next(arglist__10589));
    var args = cljs.core.rest(cljs.core.next(arglist__10589));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__10590 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__10590.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10591 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__10591.state, function(p__10592) {
    var map__10593__10594 = p__10592;
    var map__10593__10595 = cljs.core.seq_QMARK_.call(null, map__10593__10594) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10593__10594) : map__10593__10594;
    var curr_state__10596 = map__10593__10595;
    var done__10597 = cljs.core._lookup.call(null, map__10593__10595, "\ufdd0'done", null);
    if(cljs.core.truth_(done__10597)) {
      return curr_state__10596
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__10591.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__10618__10619 = options;
    var map__10618__10620 = cljs.core.seq_QMARK_.call(null, map__10618__10619) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10618__10619) : map__10618__10619;
    var keywordize_keys__10621 = cljs.core._lookup.call(null, map__10618__10620, "\ufdd0'keywordize-keys", null);
    var keyfn__10622 = cljs.core.truth_(keywordize_keys__10621) ? cljs.core.keyword : cljs.core.str;
    var f__10637 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2462__auto____10636 = function iter__10630(s__10631) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__10631__10634 = s__10631;
                    while(true) {
                      if(cljs.core.seq.call(null, s__10631__10634)) {
                        var k__10635 = cljs.core.first.call(null, s__10631__10634);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__10622.call(null, k__10635), thisfn.call(null, x[k__10635])], true), iter__10630.call(null, cljs.core.rest.call(null, s__10631__10634)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2462__auto____10636.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__10637.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__10638) {
    var x = cljs.core.first(arglist__10638);
    var options = cljs.core.rest(arglist__10638);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__10643 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__10647__delegate = function(args) {
      var temp__3971__auto____10644 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__10643), args, null);
      if(cljs.core.truth_(temp__3971__auto____10644)) {
        var v__10645 = temp__3971__auto____10644;
        return v__10645
      }else {
        var ret__10646 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__10643, cljs.core.assoc, args, ret__10646);
        return ret__10646
      }
    };
    var G__10647 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10647__delegate.call(this, args)
    };
    G__10647.cljs$lang$maxFixedArity = 0;
    G__10647.cljs$lang$applyTo = function(arglist__10648) {
      var args = cljs.core.seq(arglist__10648);
      return G__10647__delegate(args)
    };
    G__10647.cljs$lang$arity$variadic = G__10647__delegate;
    return G__10647
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__10650 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__10650)) {
        var G__10651 = ret__10650;
        f = G__10651;
        continue
      }else {
        return ret__10650
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__10652__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__10652 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10652__delegate.call(this, f, args)
    };
    G__10652.cljs$lang$maxFixedArity = 1;
    G__10652.cljs$lang$applyTo = function(arglist__10653) {
      var f = cljs.core.first(arglist__10653);
      var args = cljs.core.rest(arglist__10653);
      return G__10652__delegate(f, args)
    };
    G__10652.cljs$lang$arity$variadic = G__10652__delegate;
    return G__10652
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__10655 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__10655, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__10655, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____10664 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____10664) {
      return or__3824__auto____10664
    }else {
      var or__3824__auto____10665 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____10665) {
        return or__3824__auto____10665
      }else {
        var and__3822__auto____10666 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____10666) {
          var and__3822__auto____10667 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____10667) {
            var and__3822__auto____10668 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____10668) {
              var ret__10669 = true;
              var i__10670 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____10671 = cljs.core.not.call(null, ret__10669);
                  if(or__3824__auto____10671) {
                    return or__3824__auto____10671
                  }else {
                    return i__10670 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__10669
                }else {
                  var G__10672 = isa_QMARK_.call(null, h, child.call(null, i__10670), parent.call(null, i__10670));
                  var G__10673 = i__10670 + 1;
                  ret__10669 = G__10672;
                  i__10670 = G__10673;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____10668
            }
          }else {
            return and__3822__auto____10667
          }
        }else {
          return and__3822__auto____10666
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__10682 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__10683 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__10684 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__10685 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____10686 = cljs.core.contains_QMARK_.call(null, tp__10682.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__10684.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__10684.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__10682, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__10685.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__10683, parent, ta__10684), "\ufdd0'descendants":tf__10685.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__10684, tag, td__10683)})
    }();
    if(cljs.core.truth_(or__3824__auto____10686)) {
      return or__3824__auto____10686
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__10691 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__10692 = cljs.core.truth_(parentMap__10691.call(null, tag)) ? cljs.core.disj.call(null, parentMap__10691.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__10693 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__10692)) ? cljs.core.assoc.call(null, parentMap__10691, tag, childsParents__10692) : cljs.core.dissoc.call(null, parentMap__10691, tag);
    var deriv_seq__10694 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__10674_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10674_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10674_SHARP_), cljs.core.second.call(null, p1__10674_SHARP_)))
    }, cljs.core.seq.call(null, newParents__10693)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__10691.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__10675_SHARP_, p2__10676_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__10675_SHARP_, p2__10676_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__10694))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__10702 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____10704 = cljs.core.truth_(function() {
    var and__3822__auto____10703 = xprefs__10702;
    if(cljs.core.truth_(and__3822__auto____10703)) {
      return xprefs__10702.call(null, y)
    }else {
      return and__3822__auto____10703
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____10704)) {
    return or__3824__auto____10704
  }else {
    var or__3824__auto____10706 = function() {
      var ps__10705 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__10705) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__10705), prefer_table))) {
          }else {
          }
          var G__10709 = cljs.core.rest.call(null, ps__10705);
          ps__10705 = G__10709;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____10706)) {
      return or__3824__auto____10706
    }else {
      var or__3824__auto____10708 = function() {
        var ps__10707 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__10707) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__10707), y, prefer_table))) {
            }else {
            }
            var G__10710 = cljs.core.rest.call(null, ps__10707);
            ps__10707 = G__10710;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____10708)) {
        return or__3824__auto____10708
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____10712 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____10712)) {
    return or__3824__auto____10712
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__10730 = cljs.core.reduce.call(null, function(be, p__10722) {
    var vec__10723__10724 = p__10722;
    var k__10725 = cljs.core.nth.call(null, vec__10723__10724, 0, null);
    var ___10726 = cljs.core.nth.call(null, vec__10723__10724, 1, null);
    var e__10727 = vec__10723__10724;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__10725)) {
      var be2__10729 = cljs.core.truth_(function() {
        var or__3824__auto____10728 = be == null;
        if(or__3824__auto____10728) {
          return or__3824__auto____10728
        }else {
          return cljs.core.dominates.call(null, k__10725, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__10727 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__10729), k__10725, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__10725), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__10729)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__10729
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__10730)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__10730));
      return cljs.core.second.call(null, best_entry__10730)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____10735 = mf;
    if(and__3822__auto____10735) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____10735
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2363__auto____10736 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10737 = cljs.core._reset[goog.typeOf(x__2363__auto____10736)];
      if(or__3824__auto____10737) {
        return or__3824__auto____10737
      }else {
        var or__3824__auto____10738 = cljs.core._reset["_"];
        if(or__3824__auto____10738) {
          return or__3824__auto____10738
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____10743 = mf;
    if(and__3822__auto____10743) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____10743
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2363__auto____10744 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10745 = cljs.core._add_method[goog.typeOf(x__2363__auto____10744)];
      if(or__3824__auto____10745) {
        return or__3824__auto____10745
      }else {
        var or__3824__auto____10746 = cljs.core._add_method["_"];
        if(or__3824__auto____10746) {
          return or__3824__auto____10746
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____10751 = mf;
    if(and__3822__auto____10751) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____10751
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____10752 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10753 = cljs.core._remove_method[goog.typeOf(x__2363__auto____10752)];
      if(or__3824__auto____10753) {
        return or__3824__auto____10753
      }else {
        var or__3824__auto____10754 = cljs.core._remove_method["_"];
        if(or__3824__auto____10754) {
          return or__3824__auto____10754
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____10759 = mf;
    if(and__3822__auto____10759) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____10759
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2363__auto____10760 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10761 = cljs.core._prefer_method[goog.typeOf(x__2363__auto____10760)];
      if(or__3824__auto____10761) {
        return or__3824__auto____10761
      }else {
        var or__3824__auto____10762 = cljs.core._prefer_method["_"];
        if(or__3824__auto____10762) {
          return or__3824__auto____10762
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____10767 = mf;
    if(and__3822__auto____10767) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____10767
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____10768 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10769 = cljs.core._get_method[goog.typeOf(x__2363__auto____10768)];
      if(or__3824__auto____10769) {
        return or__3824__auto____10769
      }else {
        var or__3824__auto____10770 = cljs.core._get_method["_"];
        if(or__3824__auto____10770) {
          return or__3824__auto____10770
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____10775 = mf;
    if(and__3822__auto____10775) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____10775
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2363__auto____10776 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10777 = cljs.core._methods[goog.typeOf(x__2363__auto____10776)];
      if(or__3824__auto____10777) {
        return or__3824__auto____10777
      }else {
        var or__3824__auto____10778 = cljs.core._methods["_"];
        if(or__3824__auto____10778) {
          return or__3824__auto____10778
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____10783 = mf;
    if(and__3822__auto____10783) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____10783
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2363__auto____10784 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10785 = cljs.core._prefers[goog.typeOf(x__2363__auto____10784)];
      if(or__3824__auto____10785) {
        return or__3824__auto____10785
      }else {
        var or__3824__auto____10786 = cljs.core._prefers["_"];
        if(or__3824__auto____10786) {
          return or__3824__auto____10786
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____10791 = mf;
    if(and__3822__auto____10791) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____10791
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2363__auto____10792 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10793 = cljs.core._dispatch[goog.typeOf(x__2363__auto____10792)];
      if(or__3824__auto____10793) {
        return or__3824__auto____10793
      }else {
        var or__3824__auto____10794 = cljs.core._dispatch["_"];
        if(or__3824__auto____10794) {
          return or__3824__auto____10794
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__10797 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__10798 = cljs.core._get_method.call(null, mf, dispatch_val__10797);
  if(cljs.core.truth_(target_fn__10798)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__10797)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__10798, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10799 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__10800 = this;
  cljs.core.swap_BANG_.call(null, this__10800.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10800.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10800.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10800.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__10801 = this;
  cljs.core.swap_BANG_.call(null, this__10801.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__10801.method_cache, this__10801.method_table, this__10801.cached_hierarchy, this__10801.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__10802 = this;
  cljs.core.swap_BANG_.call(null, this__10802.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__10802.method_cache, this__10802.method_table, this__10802.cached_hierarchy, this__10802.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__10803 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__10803.cached_hierarchy), cljs.core.deref.call(null, this__10803.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__10803.method_cache, this__10803.method_table, this__10803.cached_hierarchy, this__10803.hierarchy)
  }
  var temp__3971__auto____10804 = cljs.core.deref.call(null, this__10803.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____10804)) {
    var target_fn__10805 = temp__3971__auto____10804;
    return target_fn__10805
  }else {
    var temp__3971__auto____10806 = cljs.core.find_and_cache_best_method.call(null, this__10803.name, dispatch_val, this__10803.hierarchy, this__10803.method_table, this__10803.prefer_table, this__10803.method_cache, this__10803.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____10806)) {
      var target_fn__10807 = temp__3971__auto____10806;
      return target_fn__10807
    }else {
      return cljs.core.deref.call(null, this__10803.method_table).call(null, this__10803.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__10808 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__10808.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__10808.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__10808.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__10808.method_cache, this__10808.method_table, this__10808.cached_hierarchy, this__10808.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__10809 = this;
  return cljs.core.deref.call(null, this__10809.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__10810 = this;
  return cljs.core.deref.call(null, this__10810.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__10811 = this;
  return cljs.core.do_dispatch.call(null, mf, this__10811.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__10813__delegate = function(_, args) {
    var self__10812 = this;
    return cljs.core._dispatch.call(null, self__10812, args)
  };
  var G__10813 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__10813__delegate.call(this, _, args)
  };
  G__10813.cljs$lang$maxFixedArity = 1;
  G__10813.cljs$lang$applyTo = function(arglist__10814) {
    var _ = cljs.core.first(arglist__10814);
    var args = cljs.core.rest(arglist__10814);
    return G__10813__delegate(_, args)
  };
  G__10813.cljs$lang$arity$variadic = G__10813__delegate;
  return G__10813
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__10815 = this;
  return cljs.core._dispatch.call(null, self__10815, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10816 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_10818, _) {
  var this__10817 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__10817.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__10819 = this;
  var and__3822__auto____10820 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____10820) {
    return this__10819.uuid === other.uuid
  }else {
    return and__3822__auto____10820
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__10821 = this;
  var this__10822 = this;
  return cljs.core.pr_str.call(null, this__10822)
};
cljs.core.UUID;
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____11627 = this$;
    if(and__3822__auto____11627) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____11627
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2363__auto____11628 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11629 = clojure.browser.event.event_types[goog.typeOf(x__2363__auto____11628)];
      if(or__3824__auto____11629) {
        return or__3824__auto____11629
      }else {
        var or__3824__auto____11630 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____11630) {
          return or__3824__auto____11630
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11631) {
    var vec__11632__11633 = p__11631;
    var k__11634 = cljs.core.nth.call(null, vec__11632__11633, 0, null);
    var v__11635 = cljs.core.nth.call(null, vec__11632__11633, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11634.toLowerCase()), v__11635], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11636) {
    var vec__11637__11638 = p__11636;
    var k__11639 = cljs.core.nth.call(null, vec__11637__11638, 0, null);
    var v__11640 = cljs.core.nth.call(null, vec__11637__11638, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11639.toLowerCase()), v__11640], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, goog.Uri.reDisallowedInPath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInPath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  payload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(payload)) {
    service.callback(payload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.provide("goog.net.xpc.CrossPageChannel.Role");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI] && this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
            transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
          }
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect()
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(this.peerWindowObject_.closed) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.Role = {OUTER:0, INNER:1};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannel.Role.INNER : goog.net.xpc.CrossPageChannel.Role.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name]
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11490) {
  var vec__11491__11492 = p__11490;
  var k__11493 = cljs.core.nth.call(null, vec__11491__11492, 0, null);
  var v__11494 = cljs.core.nth.call(null, vec__11491__11492, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11493.toLowerCase()), v__11494], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____11511 = this$;
      if(and__3822__auto____11511) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____11511
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2363__auto____11512 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11513 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11512)];
        if(or__3824__auto____11513) {
          return or__3824__auto____11513
        }else {
          var or__3824__auto____11514 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11514) {
            return or__3824__auto____11514
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____11515 = this$;
      if(and__3822__auto____11515) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____11515
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2363__auto____11516 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11517 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11516)];
        if(or__3824__auto____11517) {
          return or__3824__auto____11517
        }else {
          var or__3824__auto____11518 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11518) {
            return or__3824__auto____11518
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____11519 = this$;
      if(and__3822__auto____11519) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____11519
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2363__auto____11520 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11521 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11520)];
        if(or__3824__auto____11521) {
          return or__3824__auto____11521
        }else {
          var or__3824__auto____11522 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11522) {
            return or__3824__auto____11522
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____11523 = this$;
      if(and__3822__auto____11523) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____11523
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2363__auto____11524 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11525 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11524)];
        if(or__3824__auto____11525) {
          return or__3824__auto____11525
        }else {
          var or__3824__auto____11526 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11526) {
            return or__3824__auto____11526
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____11547 = this$;
      if(and__3822__auto____11547) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____11547
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2363__auto____11548 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11549 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11548)];
        if(or__3824__auto____11549) {
          return or__3824__auto____11549
        }else {
          var or__3824__auto____11550 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11550) {
            return or__3824__auto____11550
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____11551 = this$;
      if(and__3822__auto____11551) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____11551
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2363__auto____11552 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11553 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11552)];
        if(or__3824__auto____11553) {
          return or__3824__auto____11553
        }else {
          var or__3824__auto____11554 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11554) {
            return or__3824__auto____11554
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____11555 = this$;
      if(and__3822__auto____11555) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____11555
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2363__auto____11556 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11557 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11556)];
        if(or__3824__auto____11557) {
          return or__3824__auto____11557
        }else {
          var or__3824__auto____11558 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11558) {
            return or__3824__auto____11558
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____11559 = this$;
      if(and__3822__auto____11559) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____11559
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2363__auto____11560 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11561 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11560)];
        if(or__3824__auto____11561) {
          return or__3824__auto____11561
        }else {
          var or__3824__auto____11562 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11562) {
            return or__3824__auto____11562
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____11563 = this$;
      if(and__3822__auto____11563) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____11563
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2363__auto____11564 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11565 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11564)];
        if(or__3824__auto____11565) {
          return or__3824__auto____11565
        }else {
          var or__3824__auto____11566 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11566) {
            return or__3824__auto____11566
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____11571 = this$;
    if(and__3822__auto____11571) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____11571
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2363__auto____11572 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11573 = clojure.browser.net.close[goog.typeOf(x__2363__auto____11572)];
      if(or__3824__auto____11573) {
        return or__3824__auto____11573
      }else {
        var or__3824__auto____11574 = clojure.browser.net.close["_"];
        if(or__3824__auto____11574) {
          return or__3824__auto____11574
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11575) {
    var vec__11576__11577 = p__11575;
    var k__11578 = cljs.core.nth.call(null, vec__11576__11577, 0, null);
    var v__11579 = cljs.core.nth.call(null, vec__11576__11577, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11578.toLowerCase()), v__11579], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11580) {
  var vec__11581__11582 = p__11580;
  var k__11583 = cljs.core.nth.call(null, vec__11581__11582, 0, null);
  var v__11584 = cljs.core.nth.call(null, vec__11581__11582, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11583.toLowerCase()), v__11584], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____11593 = this$;
      if(and__3822__auto____11593) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____11593
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2363__auto____11594 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11595 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____11594)];
        if(or__3824__auto____11595) {
          return or__3824__auto____11595
        }else {
          var or__3824__auto____11596 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11596) {
            return or__3824__auto____11596
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____11597 = this$;
      if(and__3822__auto____11597) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____11597
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2363__auto____11598 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11599 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____11598)];
        if(or__3824__auto____11599) {
          return or__3824__auto____11599
        }else {
          var or__3824__auto____11600 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11600) {
            return or__3824__auto____11600
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____11612 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____11612)) {
      var config__11613 = temp__3974__auto____11612;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__11613))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__11614) {
      var vec__11615__11616 = p__11614;
      var k__11617 = cljs.core.nth.call(null, vec__11615__11616, 0, null);
      var v__11618 = cljs.core.nth.call(null, vec__11615__11616, 1, null);
      var temp__3971__auto____11619 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__11617, null);
      if(cljs.core.truth_(temp__3971__auto____11619)) {
        var field__11620 = temp__3971__auto____11619;
        var G__11621__11622 = sum;
        G__11621__11622[field__11620] = v__11618;
        return G__11621__11622
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____11472 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____11472)) {
    var conn__11473 = temp__3971__auto____11472;
    return clojure.browser.net.transmit.call(null, conn__11473, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__11479 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e11477) {
      if(cljs.core.instance_QMARK_.call(null, Error, e11477)) {
        var e__11478 = e11477;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__11478), "\ufdd0'stacktrace":cljs.core.truth_(e__11478.hasOwnProperty("stack")) ? e__11478.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e11477;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__11479)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__11481 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__11481, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__11481, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____11485 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____11485)) {
    var repl_connection__11486 = temp__3971__auto____11485;
    var connection__11487 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__11487, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__11486, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11486, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__11487, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11486, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__11486, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__11487, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__11489 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__11489));
  clojure.browser.net.register_service.call(null, repl_connection__11489, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__11489, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__11489, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__11489, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("tikvah.home");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11435 = s;
      var limit__11436 = limit;
      var parts__11437 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11436, 1)) {
          return cljs.core.conj.call(null, parts__11437, s__11435)
        }else {
          var temp__3971__auto____11438 = cljs.core.re_find.call(null, re, s__11435);
          if(cljs.core.truth_(temp__3971__auto____11438)) {
            var m__11439 = temp__3971__auto____11438;
            var index__11440 = s__11435.indexOf(m__11439);
            var G__11441 = s__11435.substring(index__11440 + cljs.core.count.call(null, m__11439));
            var G__11442 = limit__11436 - 1;
            var G__11443 = cljs.core.conj.call(null, parts__11437, s__11435.substring(0, index__11440));
            s__11435 = G__11441;
            limit__11436 = G__11442;
            parts__11437 = G__11443;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11437, s__11435)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11447 = s.length;
  while(true) {
    if(index__11447 === 0) {
      return""
    }else {
      var ch__11448 = cljs.core._lookup.call(null, s, index__11447 - 1, null);
      if(function() {
        var or__3824__auto____11449 = cljs.core._EQ_.call(null, ch__11448, "\n");
        if(or__3824__auto____11449) {
          return or__3824__auto____11449
        }else {
          return cljs.core._EQ_.call(null, ch__11448, "\r")
        }
      }()) {
        var G__11450 = index__11447 - 1;
        index__11447 = G__11450;
        continue
      }else {
        return s.substring(0, index__11447)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__11454 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____11455 = cljs.core.not.call(null, s__11454);
    if(or__3824__auto____11455) {
      return or__3824__auto____11455
    }else {
      var or__3824__auto____11456 = cljs.core._EQ_.call(null, "", s__11454);
      if(or__3824__auto____11456) {
        return or__3824__auto____11456
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__11454)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11463 = new goog.string.StringBuffer;
  var length__11464 = s.length;
  var index__11465 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11464, index__11465)) {
      return buffer__11463.toString()
    }else {
      var ch__11466 = s.charAt(index__11465);
      var temp__3971__auto____11467 = cljs.core._lookup.call(null, cmap, ch__11466, null);
      if(cljs.core.truth_(temp__3971__auto____11467)) {
        var replacement__11468 = temp__3971__auto____11467;
        buffer__11463.append([cljs.core.str(replacement__11468)].join(""))
      }else {
        buffer__11463.append(ch__11466)
      }
      var G__11469 = index__11465 + 1;
      index__11465 = G__11469;
      continue
    }
    break
  }
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__11427 = document.createElement("div");
var test_html__11428 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__11427.innerHTML = test_html__11428;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__11427.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__11427.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__11427.getElementsByTagName("link").length, 0);
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__11020 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__11021 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__11022 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__11021, "caption":table_section_wrapper__11021, "optgroup":opt_wrapper__11020, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__11022, "thead":table_section_wrapper__11021, "th":cell_wrapper__11022, "option":opt_wrapper__11020, "tbody":table_section_wrapper__11021, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__11021});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___11035 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__11039 = function() {
    var and__3822__auto____11036 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3822__auto____11036) {
      return no_tbody_QMARK___11035
    }else {
      return and__3822__auto____11036
    }
  }() ? function() {
    var and__3822__auto____11037 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____11037)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____11037
    }
  }() : function() {
    var and__3822__auto____11038 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3822__auto____11038) {
      return no_tbody_QMARK___11035
    }else {
      return and__3822__auto____11038
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__11040__11041 = cljs.core.seq.call(null, tbody__11039);
  if(G__11040__11041) {
    var child__11042 = cljs.core.first.call(null, G__11040__11041);
    var G__11040__11043 = G__11040__11041;
    while(true) {
      if(function() {
        var and__3822__auto____11044 = cljs.core._EQ_.call(null, child__11042.nodeName, "tbody");
        if(and__3822__auto____11044) {
          return cljs.core._EQ_.call(null, child__11042.childNodes.length, 0)
        }else {
          return and__3822__auto____11044
        }
      }()) {
        child__11042.parentNode.removeChild(child__11042)
      }else {
      }
      var temp__3974__auto____11045 = cljs.core.next.call(null, G__11040__11043);
      if(temp__3974__auto____11045) {
        var G__11040__11046 = temp__3974__auto____11045;
        var G__11047 = cljs.core.first.call(null, G__11040__11046);
        var G__11048 = G__11040__11046;
        child__11042 = G__11047;
        G__11040__11043 = G__11048;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__11062 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__11063 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__11062)))].join("").toLowerCase();
  var vec__11061__11064 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__11063, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__11065 = cljs.core.nth.call(null, vec__11061__11064, 0, null);
  var start_wrap__11066 = cljs.core.nth.call(null, vec__11061__11064, 1, null);
  var end_wrap__11067 = cljs.core.nth.call(null, vec__11061__11064, 2, null);
  var div__11071 = function() {
    var wrapper__11069 = function() {
      var div__11068 = document.createElement("div");
      div__11068.innerHTML = [cljs.core.str(start_wrap__11066), cljs.core.str(html__11062), cljs.core.str(end_wrap__11067)].join("");
      return div__11068
    }();
    var level__11070 = depth__11065;
    while(true) {
      if(level__11070 > 0) {
        var G__11073 = wrapper__11069.lastChild;
        var G__11074 = level__11070 - 1;
        wrapper__11069 = G__11073;
        level__11070 = G__11074;
        continue
      }else {
        return wrapper__11069
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__11071, html__11062)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____11072 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____11072) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__11062)
    }else {
      return and__3822__auto____11072
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__11071, html__11062)
  }else {
  }
  return div__11071.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____11079 = content;
    if(and__3822__auto____11079) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____11079
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2363__auto____11080 = content == null ? null : content;
    return function() {
      var or__3824__auto____11081 = domina.nodes[goog.typeOf(x__2363__auto____11080)];
      if(or__3824__auto____11081) {
        return or__3824__auto____11081
      }else {
        var or__3824__auto____11082 = domina.nodes["_"];
        if(or__3824__auto____11082) {
          return or__3824__auto____11082
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____11087 = nodeseq;
    if(and__3822__auto____11087) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____11087
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2363__auto____11088 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____11089 = domina.single_node[goog.typeOf(x__2363__auto____11088)];
      if(or__3824__auto____11089) {
        return or__3824__auto____11089
      }else {
        var or__3824__auto____11090 = domina.single_node["_"];
        if(or__3824__auto____11090) {
          return or__3824__auto____11090
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____11092 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____11092)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____11092
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__11093) {
    var mesg = cljs.core.seq(arglist__11093);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__11094) {
    var mesg = cljs.core.seq(arglist__11094);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t11102) {
    domina.t11102 = function(class_name, by_class, meta11103) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta11103 = meta11103;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t11102.cljs$lang$type = true;
    domina.t11102.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
      return cljs.core.list.call(null, "domina/t11102")
    };
    domina.t11102.prototype.domina$DomContent$ = true;
    domina.t11102.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__11105 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__11105.class_name)))
    };
    domina.t11102.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__11106 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__11106.class_name)))
    };
    domina.t11102.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11104) {
      var this__11107 = this;
      return this__11107.meta11103
    };
    domina.t11102.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11104, meta11103) {
      var this__11108 = this;
      return new domina.t11102(this__11108.class_name, this__11108.by_class, meta11103)
    };
    domina.t11102
  }else {
  }
  return new domina.t11102(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__11109_SHARP_) {
    return p1__11109_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__11110_SHARP_, p2__11111_SHARP_) {
    return goog.dom.insertChildAt(p1__11110_SHARP_, p2__11111_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11113_SHARP_, p2__11112_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__11112_SHARP_, p1__11113_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11115_SHARP_, p2__11114_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__11114_SHARP_, p1__11115_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11117_SHARP_, p2__11116_SHARP_) {
    return goog.dom.replaceNode(p2__11116_SHARP_, p1__11117_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__11119 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__11119))) {
    return null
  }else {
    return s__11119
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__11126__11127 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11126__11127) {
      var n__11128 = cljs.core.first.call(null, G__11126__11127);
      var G__11126__11129 = G__11126__11127;
      while(true) {
        goog.style.setStyle(n__11128, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____11130 = cljs.core.next.call(null, G__11126__11129);
        if(temp__3974__auto____11130) {
          var G__11126__11131 = temp__3974__auto____11130;
          var G__11132 = cljs.core.first.call(null, G__11126__11131);
          var G__11133 = G__11126__11131;
          n__11128 = G__11132;
          G__11126__11129 = G__11133;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__11134) {
    var content = cljs.core.first(arglist__11134);
    var name = cljs.core.first(cljs.core.next(arglist__11134));
    var value = cljs.core.rest(cljs.core.next(arglist__11134));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__11141__11142 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11141__11142) {
      var n__11143 = cljs.core.first.call(null, G__11141__11142);
      var G__11141__11144 = G__11141__11142;
      while(true) {
        n__11143.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____11145 = cljs.core.next.call(null, G__11141__11144);
        if(temp__3974__auto____11145) {
          var G__11141__11146 = temp__3974__auto____11145;
          var G__11147 = cljs.core.first.call(null, G__11141__11146);
          var G__11148 = G__11141__11146;
          n__11143 = G__11147;
          G__11141__11144 = G__11148;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__11149) {
    var content = cljs.core.first(arglist__11149);
    var name = cljs.core.first(cljs.core.next(arglist__11149));
    var value = cljs.core.rest(cljs.core.next(arglist__11149));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__11156__11157 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11156__11157) {
    var n__11158 = cljs.core.first.call(null, G__11156__11157);
    var G__11156__11159 = G__11156__11157;
    while(true) {
      n__11158.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____11160 = cljs.core.next.call(null, G__11156__11159);
      if(temp__3974__auto____11160) {
        var G__11156__11161 = temp__3974__auto____11160;
        var G__11162 = cljs.core.first.call(null, G__11156__11161);
        var G__11163 = G__11156__11161;
        n__11158 = G__11162;
        G__11156__11159 = G__11163;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__11169__11170 = pair.split(/\s*:\s*/);
    var k__11171 = cljs.core.nth.call(null, vec__11169__11170, 0, null);
    var v__11172 = cljs.core.nth.call(null, vec__11169__11170, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____11173 = k__11171;
      if(cljs.core.truth_(and__3822__auto____11173)) {
        return v__11172
      }else {
        return and__3822__auto____11173
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__11171.toLowerCase()), v__11172)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__11176 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__11176)) {
    return domina.parse_style_attributes.call(null, style__11176)
  }else {
    if(cljs.core.truth_(style__11176.cssText)) {
      return domina.parse_style_attributes.call(null, style__11176.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__11182 = domina.single_node.call(null, content);
  var attrs__11183 = node__11182.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__11174_SHARP_) {
    var attr__11184 = attrs__11183.item(p1__11174_SHARP_);
    var value__11185 = attr__11184.nodeValue;
    if(function() {
      var and__3822__auto____11186 = cljs.core.not_EQ_.call(null, null, value__11185);
      if(and__3822__auto____11186) {
        return cljs.core.not_EQ_.call(null, "", value__11185)
      }else {
        return and__3822__auto____11186
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__11184.nodeName.toLowerCase())], [attr__11184.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__11183.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__11206__11207 = cljs.core.seq.call(null, styles);
  if(G__11206__11207) {
    var G__11209__11211 = cljs.core.first.call(null, G__11206__11207);
    var vec__11210__11212 = G__11209__11211;
    var name__11213 = cljs.core.nth.call(null, vec__11210__11212, 0, null);
    var value__11214 = cljs.core.nth.call(null, vec__11210__11212, 1, null);
    var G__11206__11215 = G__11206__11207;
    var G__11209__11216 = G__11209__11211;
    var G__11206__11217 = G__11206__11215;
    while(true) {
      var vec__11218__11219 = G__11209__11216;
      var name__11220 = cljs.core.nth.call(null, vec__11218__11219, 0, null);
      var value__11221 = cljs.core.nth.call(null, vec__11218__11219, 1, null);
      var G__11206__11222 = G__11206__11217;
      domina.set_style_BANG_.call(null, content, name__11220, value__11221);
      var temp__3974__auto____11223 = cljs.core.next.call(null, G__11206__11222);
      if(temp__3974__auto____11223) {
        var G__11206__11224 = temp__3974__auto____11223;
        var G__11225 = cljs.core.first.call(null, G__11206__11224);
        var G__11226 = G__11206__11224;
        G__11209__11216 = G__11225;
        G__11206__11217 = G__11226;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__11246__11247 = cljs.core.seq.call(null, attrs);
  if(G__11246__11247) {
    var G__11249__11251 = cljs.core.first.call(null, G__11246__11247);
    var vec__11250__11252 = G__11249__11251;
    var name__11253 = cljs.core.nth.call(null, vec__11250__11252, 0, null);
    var value__11254 = cljs.core.nth.call(null, vec__11250__11252, 1, null);
    var G__11246__11255 = G__11246__11247;
    var G__11249__11256 = G__11249__11251;
    var G__11246__11257 = G__11246__11255;
    while(true) {
      var vec__11258__11259 = G__11249__11256;
      var name__11260 = cljs.core.nth.call(null, vec__11258__11259, 0, null);
      var value__11261 = cljs.core.nth.call(null, vec__11258__11259, 1, null);
      var G__11246__11262 = G__11246__11257;
      domina.set_attr_BANG_.call(null, content, name__11260, value__11261);
      var temp__3974__auto____11263 = cljs.core.next.call(null, G__11246__11262);
      if(temp__3974__auto____11263) {
        var G__11246__11264 = temp__3974__auto____11263;
        var G__11265 = cljs.core.first.call(null, G__11246__11264);
        var G__11266 = G__11246__11264;
        G__11249__11256 = G__11265;
        G__11246__11257 = G__11266;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__11273__11274 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11273__11274) {
    var node__11275 = cljs.core.first.call(null, G__11273__11274);
    var G__11273__11276 = G__11273__11274;
    while(true) {
      goog.dom.classes.add(node__11275, class$);
      var temp__3974__auto____11277 = cljs.core.next.call(null, G__11273__11276);
      if(temp__3974__auto____11277) {
        var G__11273__11278 = temp__3974__auto____11277;
        var G__11279 = cljs.core.first.call(null, G__11273__11278);
        var G__11280 = G__11273__11278;
        node__11275 = G__11279;
        G__11273__11276 = G__11280;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__11287__11288 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11287__11288) {
    var node__11289 = cljs.core.first.call(null, G__11287__11288);
    var G__11287__11290 = G__11287__11288;
    while(true) {
      goog.dom.classes.remove(node__11289, class$);
      var temp__3974__auto____11291 = cljs.core.next.call(null, G__11287__11290);
      if(temp__3974__auto____11291) {
        var G__11287__11292 = temp__3974__auto____11291;
        var G__11293 = cljs.core.first.call(null, G__11287__11292);
        var G__11294 = G__11287__11292;
        node__11289 = G__11293;
        G__11287__11290 = G__11294;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__11302 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__11303__11304 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11303__11304) {
    var node__11305 = cljs.core.first.call(null, G__11303__11304);
    var G__11303__11306 = G__11303__11304;
    while(true) {
      goog.dom.classes.set(node__11305, classes__11302);
      var temp__3974__auto____11307 = cljs.core.next.call(null, G__11303__11306);
      if(temp__3974__auto____11307) {
        var G__11303__11308 = temp__3974__auto____11307;
        var G__11309 = cljs.core.first.call(null, G__11303__11308);
        var G__11310 = G__11303__11308;
        node__11305 = G__11309;
        G__11303__11306 = G__11310;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__11317__11318 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11317__11318) {
    var node__11319 = cljs.core.first.call(null, G__11317__11318);
    var G__11317__11320 = G__11317__11318;
    while(true) {
      goog.dom.setTextContent(node__11319, value);
      var temp__3974__auto____11321 = cljs.core.next.call(null, G__11317__11320);
      if(temp__3974__auto____11321) {
        var G__11317__11322 = temp__3974__auto____11321;
        var G__11323 = cljs.core.first.call(null, G__11317__11322);
        var G__11324 = G__11317__11322;
        node__11319 = G__11323;
        G__11317__11320 = G__11324;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__11331__11332 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11331__11332) {
    var node__11333 = cljs.core.first.call(null, G__11331__11332);
    var G__11331__11334 = G__11331__11332;
    while(true) {
      goog.dom.forms.setValue(node__11333, value);
      var temp__3974__auto____11335 = cljs.core.next.call(null, G__11331__11334);
      if(temp__3974__auto____11335) {
        var G__11331__11336 = temp__3974__auto____11335;
        var G__11337 = cljs.core.first.call(null, G__11331__11336);
        var G__11338 = G__11331__11336;
        node__11333 = G__11337;
        G__11331__11334 = G__11338;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___11355 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___11356 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__11357 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___11358 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__11357);
  if(cljs.core.truth_(function() {
    var and__3822__auto____11359 = allows_inner_html_QMARK___11355;
    if(and__3822__auto____11359) {
      var and__3822__auto____11361 = function() {
        var or__3824__auto____11360 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____11360)) {
          return or__3824__auto____11360
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___11356)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____11361)) {
        return!special_tag_QMARK___11358
      }else {
        return and__3822__auto____11361
      }
    }else {
      return and__3822__auto____11359
    }
  }())) {
    var value__11362 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__11365__11366 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__11365__11366) {
        var node__11367 = cljs.core.first.call(null, G__11365__11366);
        var G__11365__11368 = G__11365__11366;
        while(true) {
          goog.events.removeAll(node__11367);
          node__11367.innerHTML = value__11362;
          var temp__3974__auto____11369 = cljs.core.next.call(null, G__11365__11368);
          if(temp__3974__auto____11369) {
            var G__11365__11370 = temp__3974__auto____11369;
            var G__11371 = cljs.core.first.call(null, G__11365__11370);
            var G__11372 = G__11365__11370;
            node__11367 = G__11371;
            G__11365__11368 = G__11372;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e11363) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e11363)) {
        var e__11364 = e11363;
        domina.replace_children_BANG_.call(null, content, value__11362)
      }else {
        if("\ufdd0'else") {
          throw e11363;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__11378 = domina.single_node.call(null, node).__domina_data;
    var value__11379 = cljs.core.truth_(m__11378) ? cljs.core._lookup.call(null, m__11378, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____11380 = bubble;
      if(cljs.core.truth_(and__3822__auto____11380)) {
        return value__11379 == null
      }else {
        return and__3822__auto____11380
      }
    }())) {
      var temp__3974__auto____11381 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____11381)) {
        var parent__11382 = temp__3974__auto____11381;
        return get_data.call(null, parent__11382, key, true)
      }else {
        return null
      }
    }else {
      return value__11379
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__11388 = function() {
    var or__3824__auto____11387 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____11387)) {
      return or__3824__auto____11387
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__11388, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__11400 = domina.nodes.call(null, parent_content);
  var children__11401 = domina.nodes.call(null, child_content);
  var first_child__11409 = function() {
    var frag__11402 = document.createDocumentFragment();
    var G__11403__11404 = cljs.core.seq.call(null, children__11401);
    if(G__11403__11404) {
      var child__11405 = cljs.core.first.call(null, G__11403__11404);
      var G__11403__11406 = G__11403__11404;
      while(true) {
        frag__11402.appendChild(child__11405);
        var temp__3974__auto____11407 = cljs.core.next.call(null, G__11403__11406);
        if(temp__3974__auto____11407) {
          var G__11403__11408 = temp__3974__auto____11407;
          var G__11411 = cljs.core.first.call(null, G__11403__11408);
          var G__11412 = G__11403__11408;
          child__11405 = G__11411;
          G__11403__11406 = G__11412;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__11402
  }();
  var other_children__11410 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__11400) - 1, function() {
    return first_child__11409.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__11400)) {
    f.call(null, cljs.core.first.call(null, parents__11400), first_child__11409);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__11383_SHARP_, p2__11384_SHARP_) {
      return f.call(null, p1__11383_SHARP_, p2__11384_SHARP_)
    }, cljs.core.rest.call(null, parents__11400), other_children__11410))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____11414 = obj;
  if(cljs.core.truth_(and__3822__auto____11414)) {
    return obj.length
  }else {
    return and__3822__auto____11414
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__11418__11419 = list_thing;
      if(G__11418__11419) {
        if(function() {
          var or__3824__auto____11420 = G__11418__11419.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____11420) {
            return or__3824__auto____11420
          }else {
            return G__11418__11419.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11418__11419.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11418__11419)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11418__11419)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__11421__11422 = content;
      if(G__11421__11422) {
        if(function() {
          var or__3824__auto____11423 = G__11421__11422.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____11423) {
            return or__3824__auto____11423
          }else {
            return G__11421__11422.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11421__11422.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11421__11422)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11421__11422)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__11424__11425 = content;
      if(G__11424__11425) {
        if(function() {
          var or__3824__auto____11426 = G__11424__11425.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____11426) {
            return or__3824__auto____11426
          }else {
            return G__11424__11425.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11424__11425.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11424__11425)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11424__11425)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = {};
domina.events.prevent_default = function prevent_default(evt) {
  if(function() {
    var and__3822__auto____10827 = evt;
    if(and__3822__auto____10827) {
      return evt.domina$events$Event$prevent_default$arity$1
    }else {
      return and__3822__auto____10827
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt)
  }else {
    var x__2363__auto____10828 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10829 = domina.events.prevent_default[goog.typeOf(x__2363__auto____10828)];
      if(or__3824__auto____10829) {
        return or__3824__auto____10829
      }else {
        var or__3824__auto____10830 = domina.events.prevent_default["_"];
        if(or__3824__auto____10830) {
          return or__3824__auto____10830
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if(function() {
    var and__3822__auto____10835 = evt;
    if(and__3822__auto____10835) {
      return evt.domina$events$Event$stop_propagation$arity$1
    }else {
      return and__3822__auto____10835
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt)
  }else {
    var x__2363__auto____10836 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10837 = domina.events.stop_propagation[goog.typeOf(x__2363__auto____10836)];
      if(or__3824__auto____10837) {
        return or__3824__auto____10837
      }else {
        var or__3824__auto____10838 = domina.events.stop_propagation["_"];
        if(or__3824__auto____10838) {
          return or__3824__auto____10838
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.target = function target(evt) {
  if(function() {
    var and__3822__auto____10843 = evt;
    if(and__3822__auto____10843) {
      return evt.domina$events$Event$target$arity$1
    }else {
      return and__3822__auto____10843
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt)
  }else {
    var x__2363__auto____10844 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10845 = domina.events.target[goog.typeOf(x__2363__auto____10844)];
      if(or__3824__auto____10845) {
        return or__3824__auto____10845
      }else {
        var or__3824__auto____10846 = domina.events.target["_"];
        if(or__3824__auto____10846) {
          return or__3824__auto____10846
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.current_target = function current_target(evt) {
  if(function() {
    var and__3822__auto____10851 = evt;
    if(and__3822__auto____10851) {
      return evt.domina$events$Event$current_target$arity$1
    }else {
      return and__3822__auto____10851
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt)
  }else {
    var x__2363__auto____10852 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10853 = domina.events.current_target[goog.typeOf(x__2363__auto____10852)];
      if(or__3824__auto____10853) {
        return or__3824__auto____10853
      }else {
        var or__3824__auto____10854 = domina.events.current_target["_"];
        if(or__3824__auto____10854) {
          return or__3824__auto____10854
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.event_type = function event_type(evt) {
  if(function() {
    var and__3822__auto____10859 = evt;
    if(and__3822__auto____10859) {
      return evt.domina$events$Event$event_type$arity$1
    }else {
      return and__3822__auto____10859
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt)
  }else {
    var x__2363__auto____10860 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10861 = domina.events.event_type[goog.typeOf(x__2363__auto____10860)];
      if(or__3824__auto____10861) {
        return or__3824__auto____10861
      }else {
        var or__3824__auto____10862 = domina.events.event_type["_"];
        if(or__3824__auto____10862) {
          return or__3824__auto____10862
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.raw_event = function raw_event(evt) {
  if(function() {
    var and__3822__auto____10867 = evt;
    if(and__3822__auto____10867) {
      return evt.domina$events$Event$raw_event$arity$1
    }else {
      return and__3822__auto____10867
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt)
  }else {
    var x__2363__auto____10868 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____10869 = domina.events.raw_event[goog.typeOf(x__2363__auto____10868)];
      if(or__3824__auto____10869) {
        return or__3824__auto____10869
      }else {
        var or__3824__auto____10870 = domina.events.raw_event["_"];
        if(or__3824__auto____10870) {
          return or__3824__auto____10870
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.builtin_events = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.keyword, goog.object.getValues(goog.events.EventType)));
domina.events.root_element = window.document.documentElement;
domina.events.find_builtin_type = function find_builtin_type(evt_type) {
  if(cljs.core.contains_QMARK_.call(null, domina.events.builtin_events, evt_type)) {
    return cljs.core.name.call(null, evt_type)
  }else {
    return evt_type
  }
};
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if(void 0 === domina.events.t10887) {
        domina.events.t10887 = function(evt, f, create_listener_function, meta10888) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta10888 = meta10888;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472
        };
        domina.events.t10887.cljs$lang$type = true;
        domina.events.t10887.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
          return cljs.core.list.call(null, "domina.events/t10887")
        };
        domina.events.t10887.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var this__10890 = this;
          var temp__3971__auto____10891 = this__10890.evt[k];
          if(cljs.core.truth_(temp__3971__auto____10891)) {
            var val__10892 = temp__3971__auto____10891;
            return val__10892
          }else {
            return this__10890.evt[cljs.core.name.call(null, k)]
          }
        };
        domina.events.t10887.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var this__10893 = this;
          var or__3824__auto____10894 = o.cljs$core$ILookup$_lookup$arity$2(o, k);
          if(cljs.core.truth_(or__3824__auto____10894)) {
            return or__3824__auto____10894
          }else {
            return not_found
          }
        };
        domina.events.t10887.prototype.domina$events$Event$ = true;
        domina.events.t10887.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var this__10895 = this;
          return this__10895.evt.preventDefault()
        };
        domina.events.t10887.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var this__10896 = this;
          return this__10896.evt.stopPropagation()
        };
        domina.events.t10887.prototype.domina$events$Event$target$arity$1 = function(_) {
          var this__10897 = this;
          return this__10897.evt.target
        };
        domina.events.t10887.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var this__10898 = this;
          return this__10898.evt.currentTarget
        };
        domina.events.t10887.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var this__10899 = this;
          return this__10899.evt.type
        };
        domina.events.t10887.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var this__10900 = this;
          return this__10900.evt
        };
        domina.events.t10887.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10889) {
          var this__10901 = this;
          return this__10901.meta10888
        };
        domina.events.t10887.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10889, meta10888) {
          var this__10902 = this;
          return new domina.events.t10887(this__10902.evt, this__10902.f, this__10902.create_listener_function, meta10888)
        };
        domina.events.t10887
      }else {
      }
      return new domina.events.t10887(evt, f, create_listener_function, null)
    }());
    return true
  }
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f__10912 = domina.events.create_listener_function.call(null, listener);
  var t__10913 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__2462__auto____10920 = function iter__10914(s__10915) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10915__10918 = s__10915;
        while(true) {
          if(cljs.core.seq.call(null, s__10915__10918)) {
            var node__10919 = cljs.core.first.call(null, s__10915__10918);
            return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node__10919, t__10913, f__10912, capture) : goog.events.listen(node__10919, t__10913, f__10912, capture), iter__10914.call(null, cljs.core.rest.call(null, s__10915__10918)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____10920.call(null, domina.nodes.call(null, content))
  }())
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false)
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_BANG_.cljs$lang$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$lang$arity$3 = listen_BANG___3;
  return listen_BANG_
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false)
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_BANG_.cljs$lang$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$lang$arity$3 = capture_BANG___3;
  return capture_BANG_
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true)
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once_BANG_.cljs$lang$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$lang$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true)
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_once_BANG_.cljs$lang$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$lang$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element)
  };
  var unlisten_BANG___1 = function(content) {
    var G__10928__10929 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__10928__10929) {
      var node__10930 = cljs.core.first.call(null, G__10928__10929);
      var G__10928__10931 = G__10928__10929;
      while(true) {
        goog.events.removeAll(node__10930);
        var temp__3974__auto____10932 = cljs.core.next.call(null, G__10928__10931);
        if(temp__3974__auto____10932) {
          var G__10928__10933 = temp__3974__auto____10932;
          var G__10935 = cljs.core.first.call(null, G__10928__10933);
          var G__10936 = G__10928__10933;
          node__10930 = G__10935;
          G__10928__10931 = G__10936;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__10934 = domina.events.find_builtin_type.call(null, type);
    return goog.events.removeAll(domina.events.node, type__10934)
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten_BANG_.cljs$lang$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$lang$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$lang$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, cljs.core.PersistentVector.fromArray([n], true))
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while(true) {
      var temp__3971__auto____10939 = n.parentNode;
      if(cljs.core.truth_(temp__3971__auto____10939)) {
        var parent__10940 = temp__3971__auto____10939;
        var G__10941 = parent__10940;
        var G__10942 = cljs.core.cons.call(null, parent__10940, so_far);
        n = G__10941;
        so_far = G__10942;
        continue
      }else {
        return so_far
      }
      break
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestor_nodes.cljs$lang$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$lang$arity$2 = ancestor_nodes__2;
  return ancestor_nodes
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors__10956 = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var G__10957__10958 = cljs.core.seq.call(null, ancestors__10956);
  if(G__10957__10958) {
    var n__10959 = cljs.core.first.call(null, G__10957__10958);
    var G__10957__10960 = G__10957__10958;
    while(true) {
      if(cljs.core.truth_(n__10959.propagationStopped)) {
      }else {
        evt.currentTarget = n__10959;
        goog.events.fireListeners(n__10959, evt.type, true, evt)
      }
      var temp__3974__auto____10961 = cljs.core.next.call(null, G__10957__10960);
      if(temp__3974__auto____10961) {
        var G__10957__10962 = temp__3974__auto____10961;
        var G__10969 = cljs.core.first.call(null, G__10957__10962);
        var G__10970 = G__10957__10962;
        n__10959 = G__10969;
        G__10957__10960 = G__10970;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10963__10964 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors__10956));
  if(G__10963__10964) {
    var n__10965 = cljs.core.first.call(null, G__10963__10964);
    var G__10963__10966 = G__10963__10964;
    while(true) {
      if(cljs.core.truth_(n__10965.propagationStopped)) {
      }else {
        evt.currentTarget = n__10965;
        goog.events.fireListeners(n__10965, evt.type, false, evt)
      }
      var temp__3974__auto____10967 = cljs.core.next.call(null, G__10963__10966);
      if(temp__3974__auto____10967) {
        var G__10963__10968 = temp__3974__auto____10967;
        var G__10971 = cljs.core.first.call(null, G__10963__10968);
        var G__10972 = G__10963__10968;
        n__10965 = G__10971;
        G__10963__10966 = G__10972;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return evt.returnValue_
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt)
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3822__auto____10974 = o.getParentEventTarget;
  if(cljs.core.truth_(and__3822__auto____10974)) {
    return o.dispatchEvent
  }else {
    return and__3822__auto____10974
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map)
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt__10995 = new goog.events.Event(domina.events.find_builtin_type.call(null, type));
    var G__10996__10997 = cljs.core.seq.call(null, evt_map);
    if(G__10996__10997) {
      var G__10999__11001 = cljs.core.first.call(null, G__10996__10997);
      var vec__11000__11002 = G__10999__11001;
      var k__11003 = cljs.core.nth.call(null, vec__11000__11002, 0, null);
      var v__11004 = cljs.core.nth.call(null, vec__11000__11002, 1, null);
      var G__10996__11005 = G__10996__10997;
      var G__10999__11006 = G__10999__11001;
      var G__10996__11007 = G__10996__11005;
      while(true) {
        var vec__11008__11009 = G__10999__11006;
        var k__11010 = cljs.core.nth.call(null, vec__11008__11009, 0, null);
        var v__11011 = cljs.core.nth.call(null, vec__11008__11009, 1, null);
        var G__10996__11012 = G__10996__11007;
        evt__10995[k__11010] = v__11011;
        var temp__3974__auto____11013 = cljs.core.next.call(null, G__10996__11012);
        if(temp__3974__auto____11013) {
          var G__10996__11014 = temp__3974__auto____11013;
          var G__11015 = cljs.core.first.call(null, G__10996__11014);
          var G__11016 = G__10996__11014;
          G__10999__11006 = G__11015;
          G__10996__11007 = G__11016;
          continue
        }else {
        }
        break
      }
    }else {
    }
    if(cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt__10995)
    }else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt__10995)
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dispatch_BANG_.cljs$lang$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$lang$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key)
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__11019 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.mapcat.call(null, function(p1__11017_SHARP_) {
    return goog.events.getListeners(p1__11017_SHARP_, type__11019, false)
  }, domina.nodes.call(null, content))
};
goog.provide("tikvah.client");
goog.require("cljs.core");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.net.XhrIo");
tikvah.client.result_id = "eval-result";
tikvah.client.expr_id = "eval-expr";
tikvah.client.button_id = "eval-button";
tikvah.client.url = "/eval";
tikvah.client.receive_result = function receive_result(event) {
  return domina.set_text_BANG_.call(null, domina.by_id.call(null, tikvah.client.result_id), event.target.getResponseText())
};
tikvah.client.post_for_eval = function post_for_eval(expr_str) {
  return goog.net.XhrIo.send(tikvah.client.url, tikvah.client.receive_result, "POST", expr_str)
};
tikvah.client.get_expr = function get_expr() {
  return domina.by_id.call(null, tikvah.client.expr_id).value
};
tikvah.client.main = function main() {
  return domina.events.listen_BANG_.call(null, domina.by_id.call(null, tikvah.client.button_id), "\ufdd0'click", function(event) {
    tikvah.client.post_for_eval.call(null, tikvah.client.get_expr.call(null));
    domina.events.stop_propagation.call(null, event);
    return domina.events.prevent_default.call(null, event)
  })
};
goog.exportSymbol("tikvah.client.main", tikvah.client.main);
goog.provide("tikvah.framework");
goog.require("cljs.core");
